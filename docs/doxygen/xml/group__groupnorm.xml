<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.9.1" xml:lang="en-US">
  <compounddef id="group__groupnorm" kind="group">
    <compoundname>groupnorm</compoundname>
    <title>Groupnorm</title>
      <sectiondef kind="func">
      <memberdef kind="function" id="group__groupnorm_1ga78187f1ce6f0529b0e66b2bcb0d42037" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="group__handle_1ga74216ea6ba6c5487d5aceb46eb35f1d6" kindref="member">miopenStatus_t</ref></type>
        <definition>miopenStatus_t miopenGroupNormForward</definition>
        <argsstring>(miopenHandle_t handle, miopenNormMode_t mode, const miopenTensorDescriptor_t xDesc, const void *x, const miopenTensorDescriptor_t weightDesc, const void *weight, const miopenTensorDescriptor_t biasDesc, const void *bias, const uint64_t num_groups, const float epsilon, const miopenTensorDescriptor_t yDesc, void *y, const miopenTensorDescriptor_t meanDesc, void *mean, const miopenTensorDescriptor_t rstdDesc, void *rstd)</argsstring>
        <name>miopenGroupNormForward</name>
        <param>
          <type>miopenHandle_t</type>
          <declname>handle</declname>
        </param>
        <param>
          <type><ref refid="group__layernorm_1ga996bace523abc82c6847984c34b60d5b" kindref="member">miopenNormMode_t</ref></type>
          <declname>mode</declname>
        </param>
        <param>
          <type>const miopenTensorDescriptor_t</type>
          <declname>xDesc</declname>
        </param>
        <param>
          <type>const void *</type>
          <declname>x</declname>
        </param>
        <param>
          <type>const miopenTensorDescriptor_t</type>
          <declname>weightDesc</declname>
        </param>
        <param>
          <type>const void *</type>
          <declname>weight</declname>
        </param>
        <param>
          <type>const miopenTensorDescriptor_t</type>
          <declname>biasDesc</declname>
        </param>
        <param>
          <type>const void *</type>
          <declname>bias</declname>
        </param>
        <param>
          <type>const uint64_t</type>
          <declname>num_groups</declname>
        </param>
        <param>
          <type>const float</type>
          <declname>epsilon</declname>
        </param>
        <param>
          <type>const miopenTensorDescriptor_t</type>
          <declname>yDesc</declname>
        </param>
        <param>
          <type>void *</type>
          <declname>y</declname>
        </param>
        <param>
          <type>const miopenTensorDescriptor_t</type>
          <declname>meanDesc</declname>
        </param>
        <param>
          <type>void *</type>
          <declname>mean</declname>
        </param>
        <param>
          <type>const miopenTensorDescriptor_t</type>
          <declname>rstdDesc</declname>
        </param>
        <param>
          <type>void *</type>
          <declname>rstd</declname>
        </param>
        <briefdescription>
<para>Execute a groupnorm forward layer. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>handle</parametername>
</parameternamelist>
<parameterdescription>
<para>MIOpen handle (input) </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>mode</parametername>
</parameternamelist>
<parameterdescription>
<para>GroupNorm mode (input) </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>xDesc</parametername>
</parameternamelist>
<parameterdescription>
<para>Tensor descriptor for data input tensor x (input) </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>x</parametername>
</parameternamelist>
<parameterdescription>
<para>Data tensor x (input) </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>weightDesc</parametername>
</parameternamelist>
<parameterdescription>
<para>Tensor descriptor for data input tensor weight (input) </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>weight</parametername>
</parameternamelist>
<parameterdescription>
<para>Data tensor weight (input) </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>biasDesc</parametername>
</parameternamelist>
<parameterdescription>
<para>Tensor descriptor for data input tensor bias (input) </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>bias</parametername>
</parameternamelist>
<parameterdescription>
<para>Data tensor bias (input) </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>num_groups</parametername>
</parameternamelist>
<parameterdescription>
<para>nNmber of groups to separate the channels into (input) </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>epsilon</parametername>
</parameternamelist>
<parameterdescription>
<para>Value to stablize inverse variance calculation (input) </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>yDesc</parametername>
</parameternamelist>
<parameterdescription>
<para>Tensor descriptor for output data tensor y (input) </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>y</parametername>
</parameternamelist>
<parameterdescription>
<para>Data tensor y (output) </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>meanDesc</parametername>
</parameternamelist>
<parameterdescription>
<para>Tensor descriptor for output data tensor mean (input) </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>mean</parametername>
</parameternamelist>
<parameterdescription>
<para>Data tensor mean (output) </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>rstdDesc</parametername>
</parameternamelist>
<parameterdescription>
<para>Tensor descriptor for output data tensor rstd (input) </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>rstd</parametername>
</parameternamelist>
<parameterdescription>
<para>Data tensor rstd (output) </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>miopenStatus_t </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ldelaney/MIOpen/include/miopen/miopen.h" line="5712" column="17" declfile="/home/ldelaney/MIOpen/include/miopen/miopen.h" declline="5712" declcolumn="17"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
  </compounddef>
</doxygen>
