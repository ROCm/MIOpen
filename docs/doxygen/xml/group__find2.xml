<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.9.1" xml:lang="en-US">
  <compounddef id="group__find2" kind="group">
    <compoundname>find2</compoundname>
    <title>Find2</title>
    <innerclass refid="structmiopen_tensor_argument__t" prot="public">miopenTensorArgument_t</innerclass>
      <sectiondef kind="enum">
      <memberdef kind="enum" id="group__find2_1gab7565f4a33ed5b4f7fa1793a7dad6337" prot="public" static="no" strong="no">
        <type></type>
        <name>miopenProblemDirection_t</name>
        <enumvalue id="group__find2_1ggab7565f4a33ed5b4f7fa1793a7dad6337abc2dbfdc4ef1b83119c3777e7e80de44" prot="public">
          <name>miopenProblemDirectionForward</name>
          <initializer>= 0</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="group__find2_1ggab7565f4a33ed5b4f7fa1793a7dad6337af99443bbae30b51588521c921a858f99" prot="public">
          <name>miopenProblemDirectionBackward</name>
          <initializer>= 1</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="group__find2_1ggab7565f4a33ed5b4f7fa1793a7dad6337a7c23676cb2177e581995e740475afd79" prot="public">
          <name>miopenProblemDirectionBackwardWeights</name>
          <initializer>= 2</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Directions of miopen operation. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ldelaney/MIOpen/include/miopen/miopen.h" line="5292" column="1" bodyfile="/home/ldelaney/MIOpen/include/miopen/miopen.h" bodystart="5293" bodyend="5297"/>
      </memberdef>
      <memberdef kind="enum" id="group__find2_1ga9aadaf9e83bdc5303cfb58955514502c" prot="public" static="no" strong="no">
        <type></type>
        <name>miopenTensorArgumentId_t</name>
        <enumvalue id="group__find2_1gga9aadaf9e83bdc5303cfb58955514502cac707682d5986bbade17817928e00d06f" prot="public">
          <name>miopenTensorArgumentIdInvalid</name>
          <initializer>= 0</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="group__find2_1gga9aadaf9e83bdc5303cfb58955514502ca2fc5c7f9a98eb6976f6d38d7db896db2" prot="public">
          <name>miopenTensorConvolutionX</name>
          <initializer>= 1</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="group__find2_1gga9aadaf9e83bdc5303cfb58955514502cad407972fb41ab847593d4353388dce22" prot="public">
          <name>miopenTensorConvolutionW</name>
          <initializer>= 2</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="group__find2_1gga9aadaf9e83bdc5303cfb58955514502ca9d50f1debc571d38ed1709912c9c5774" prot="public">
          <name>miopenTensorConvolutionY</name>
          <initializer>= 3</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="group__find2_1gga9aadaf9e83bdc5303cfb58955514502ca6c6f3d3a9c2c618da7b1c43fa33f67f0" prot="public">
          <name>miopenTensorActivationX</name>
          <initializer>= 4</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="group__find2_1gga9aadaf9e83bdc5303cfb58955514502caf5eab1e565bf6f3d30f425e9ca34337f" prot="public">
          <name>miopenTensorActivationY</name>
          <initializer>= 5</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="group__find2_1gga9aadaf9e83bdc5303cfb58955514502ca60c93134ee0f45d7b77e92f214a93553" prot="public">
          <name>miopenTensorActivationDX</name>
          <initializer>= 6</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="group__find2_1gga9aadaf9e83bdc5303cfb58955514502ca202338b34064b12cd5750268a562df7e" prot="public">
          <name>miopenTensorActivationDY</name>
          <initializer>= 7</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="group__find2_1gga9aadaf9e83bdc5303cfb58955514502cafa54dfab241618980f8a69d3b21b6e0b" prot="public">
          <name>miopenTensorBiasX</name>
          <initializer>= 8</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="group__find2_1gga9aadaf9e83bdc5303cfb58955514502cade8d8f0207aa2246f2b7f4ca2434c74f" prot="public">
          <name>miopenTensorBiasY</name>
          <initializer>= 9</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="group__find2_1gga9aadaf9e83bdc5303cfb58955514502caf36be3d67213320a22999ed32c62a90a" prot="public">
          <name>miopenTensorBias</name>
          <initializer>= 10</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Identifiers for tensor arguments of problems and operations.</para>
<para>Different ways to sort results of the find call. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ldelaney/MIOpen/include/miopen/miopen.h" line="5302" column="1" bodyfile="/home/ldelaney/MIOpen/include/miopen/miopen.h" bodystart="5303" bodyend="5317"/>
      </memberdef>
      <memberdef kind="enum" id="group__find2_1ga10ba204b05e13c25e81b70abd6b3cd69" prot="public" static="no" strong="no">
        <type></type>
        <name>miopenFindResultsOrder_t</name>
        <enumvalue id="group__find2_1gga10ba204b05e13c25e81b70abd6b3cd69aed134126adf8e75b11f27bd485869ade" prot="public">
          <name>miopenFindResultsOrderByTime</name>
          <initializer>= 0</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="group__find2_1gga10ba204b05e13c25e81b70abd6b3cd69a165b3ee97cc1daa65fbdb22fdcb2a81f" prot="public">
          <name>miopenFindResultsOrderByWorkspaceSize</name>
          <initializer>= 1</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ldelaney/MIOpen/include/miopen/miopen.h" line="5322" column="1" bodyfile="/home/ldelaney/MIOpen/include/miopen/miopen.h" bodystart="5323" bodyend="5326"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="func">
      <memberdef kind="function" id="group__find2_1ga7bd14eca1cfc4b80b3099365fd341c50" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>MIOPEN_DECLARE_OBJECT</definition>
        <argsstring>(miopenProblem)</argsstring>
        <name>MIOPEN_DECLARE_OBJECT</name>
        <param>
          <type>miopenProblem</type>
        </param>
        <briefdescription>
<para>Describes a problem for different miopen operations. </para>
        </briefdescription>
        <detaileddescription>
<para>For now, this is only used for convolution, but could be used for other operators in the future(such as GEMM, Pooling, etc) </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ldelaney/MIOpen/include/miopen/miopen.h" line="5287" column="1" declfile="/home/ldelaney/MIOpen/include/miopen/miopen.h" declline="5287" declcolumn="1"/>
      </memberdef>
      <memberdef kind="function" id="group__find2_1gaeb7ab171928f07c4fd02a96b23c3cd02" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="group__handle_1ga74216ea6ba6c5487d5aceb46eb35f1d6" kindref="member">miopenStatus_t</ref></type>
        <definition>miopenStatus_t miopenCreateConvProblem</definition>
        <argsstring>(miopenProblem_t *problem, miopenConvolutionDescriptor_t operatorDesc, miopenProblemDirection_t direction)</argsstring>
        <name>miopenCreateConvProblem</name>
        <param>
          <type>miopenProblem_t *</type>
          <declname>problem</declname>
        </param>
        <param>
          <type>miopenConvolutionDescriptor_t</type>
          <declname>operatorDesc</declname>
        </param>
        <param>
          <type><ref refid="group__find2_1gab7565f4a33ed5b4f7fa1793a7dad6337" kindref="member">miopenProblemDirection_t</ref></type>
          <declname>direction</declname>
        </param>
        <briefdescription>
<para>Initializes a problem object describing a convolution operation. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>problem</parametername>
</parameternamelist>
<parameterdescription>
<para>Pointer to the problem to initialize </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>operatorDesc</parametername>
</parameternamelist>
<parameterdescription>
<para>Descriptor of the operator to be used </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>direction</parametername>
</parameternamelist>
<parameterdescription>
<para>Direction of the operation </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>miopenStatus_t </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ldelaney/MIOpen/include/miopen/miopen.h" line="5335" column="17" declfile="/home/ldelaney/MIOpen/include/miopen/miopen.h" declline="5335" declcolumn="17"/>
      </memberdef>
      <memberdef kind="function" id="group__find2_1gadd378dce1c7c8686c492decaada8a8bc" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="group__handle_1ga74216ea6ba6c5487d5aceb46eb35f1d6" kindref="member">miopenStatus_t</ref></type>
        <definition>miopenStatus_t miopenDestroyProblem</definition>
        <argsstring>(miopenProblem_t problem)</argsstring>
        <name>miopenDestroyProblem</name>
        <param>
          <type>miopenProblem_t</type>
          <declname>problem</declname>
        </param>
        <briefdescription>
<para>Destroys a problem object. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>problem</parametername>
</parameternamelist>
<parameterdescription>
<para>Problem to destroy </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>miopenStatus_t </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ldelaney/MIOpen/include/miopen/miopen.h" line="5344" column="17" declfile="/home/ldelaney/MIOpen/include/miopen/miopen.h" declline="5344" declcolumn="17"/>
      </memberdef>
      <memberdef kind="function" id="group__find2_1gafbaf96e05f4c8ff0ab0b5081ec909cdf" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="group__handle_1ga74216ea6ba6c5487d5aceb46eb35f1d6" kindref="member">miopenStatus_t</ref></type>
        <definition>miopenStatus_t miopenSetProblemTensorDescriptor</definition>
        <argsstring>(miopenProblem_t problem, miopenTensorArgumentId_t id, const miopenTensorDescriptor_t descriptor)</argsstring>
        <name>miopenSetProblemTensorDescriptor</name>
        <param>
          <type>miopenProblem_t</type>
          <declname>problem</declname>
        </param>
        <param>
          <type><ref refid="group__find2_1ga9aadaf9e83bdc5303cfb58955514502c" kindref="member">miopenTensorArgumentId_t</ref></type>
          <declname>id</declname>
        </param>
        <param>
          <type>const miopenTensorDescriptor_t</type>
          <declname>descriptor</declname>
        </param>
        <briefdescription>
<para>Sets a tensor descriptor for the specified argument. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>problem</parametername>
</parameternamelist>
<parameterdescription>
<para>Problem to update </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>id</parametername>
</parameternamelist>
<parameterdescription>
<para>Id of the argument for the descriptor </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>descriptor</parametername>
</parameternamelist>
<parameterdescription>
<para>Tensor descriptor to set </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>miopenStatus_t </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ldelaney/MIOpen/include/miopen/miopen.h" line="5354" column="1" declfile="/home/ldelaney/MIOpen/include/miopen/miopen.h" declline="5354" declcolumn="1"/>
      </memberdef>
      <memberdef kind="function" id="group__find2_1ga9d8376fb648ff974f91757f882fd665f" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>MIOPEN_DECLARE_OBJECT</definition>
        <argsstring>(miopenFindOptions)</argsstring>
        <name>MIOPEN_DECLARE_OBJECT</name>
        <param>
          <type>miopenFindOptions</type>
        </param>
        <briefdescription>
<para>The miopenFindOptions allows the user to configure how find will be used. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ldelaney/MIOpen/include/miopen/miopen.h" line="5360" column="1" declfile="/home/ldelaney/MIOpen/include/miopen/miopen.h" declline="5360" declcolumn="1"/>
      </memberdef>
      <memberdef kind="function" id="group__find2_1gae336156fdf21e987155101879d78cb75" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="group__handle_1ga74216ea6ba6c5487d5aceb46eb35f1d6" kindref="member">miopenStatus_t</ref></type>
        <definition>miopenStatus_t miopenCreateFindOptions</definition>
        <argsstring>(miopenFindOptions_t *options)</argsstring>
        <name>miopenCreateFindOptions</name>
        <param>
          <type>miopenFindOptions_t *</type>
          <declname>options</declname>
        </param>
        <briefdescription>
<para>Initializes miopenFindOptions object. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>options</parametername>
</parameternamelist>
<parameterdescription>
<para>Pointer to options object to initialze </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>miopenStatus_t </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ldelaney/MIOpen/include/miopen/miopen.h" line="5367" column="17" declfile="/home/ldelaney/MIOpen/include/miopen/miopen.h" declline="5367" declcolumn="17"/>
      </memberdef>
      <memberdef kind="function" id="group__find2_1ga860acc71b6724dbbefbad2006e3c9248" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="group__handle_1ga74216ea6ba6c5487d5aceb46eb35f1d6" kindref="member">miopenStatus_t</ref></type>
        <definition>miopenStatus_t miopenDestroyFindOptions</definition>
        <argsstring>(miopenFindOptions_t options)</argsstring>
        <name>miopenDestroyFindOptions</name>
        <param>
          <type>miopenFindOptions_t</type>
          <declname>options</declname>
        </param>
        <briefdescription>
<para>Destroys miopenFindOptions object. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>options</parametername>
</parameternamelist>
<parameterdescription>
<para>Options object to destroy </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>miopenStatus_t </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ldelaney/MIOpen/include/miopen/miopen.h" line="5374" column="17" declfile="/home/ldelaney/MIOpen/include/miopen/miopen.h" declline="5374" declcolumn="17"/>
      </memberdef>
      <memberdef kind="function" id="group__find2_1gaa3dee344f811055f5c95dc88cd18abd1" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="group__handle_1ga74216ea6ba6c5487d5aceb46eb35f1d6" kindref="member">miopenStatus_t</ref></type>
        <definition>miopenStatus_t miopenSetFindOptionTuning</definition>
        <argsstring>(miopenFindOptions_t options, int value)</argsstring>
        <name>miopenSetFindOptionTuning</name>
        <param>
          <type>miopenFindOptions_t</type>
          <declname>options</declname>
        </param>
        <param>
          <type>int</type>
          <declname>value</declname>
        </param>
        <briefdescription>
<para>Sets the tuning find option. Default value is zero. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>options</parametername>
</parameternamelist>
<parameterdescription>
<para>Options object to update </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>value</parametername>
</parameternamelist>
<parameterdescription>
<para>Value of zero means no tuning, value of one means tuning enabled </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>miopenStatus_t </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ldelaney/MIOpen/include/miopen/miopen.h" line="5382" column="17" declfile="/home/ldelaney/MIOpen/include/miopen/miopen.h" declline="5382" declcolumn="17"/>
      </memberdef>
      <memberdef kind="function" id="group__find2_1gaaba2c9d169a0b79ebbbc15a3ac573a09" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="group__handle_1ga74216ea6ba6c5487d5aceb46eb35f1d6" kindref="member">miopenStatus_t</ref></type>
        <definition>miopenStatus_t miopenSetFindOptionResultsOrder</definition>
        <argsstring>(miopenFindOptions_t options, miopenFindResultsOrder_t value)</argsstring>
        <name>miopenSetFindOptionResultsOrder</name>
        <param>
          <type>miopenFindOptions_t</type>
          <declname>options</declname>
        </param>
        <param>
          <type><ref refid="group__find2_1ga10ba204b05e13c25e81b70abd6b3cd69" kindref="member">miopenFindResultsOrder_t</ref></type>
          <declname>value</declname>
        </param>
        <briefdescription>
<para>Sets the results order find option. Default value is miopenFindResultsOrderByTime. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>options</parametername>
</parameternamelist>
<parameterdescription>
<para>Options object to update </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>value</parametername>
</parameternamelist>
<parameterdescription>
<para>Specifies what order should find results have </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>miopenStatus_t </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ldelaney/MIOpen/include/miopen/miopen.h" line="5390" column="17" declfile="/home/ldelaney/MIOpen/include/miopen/miopen.h" declline="5390" declcolumn="17"/>
      </memberdef>
      <memberdef kind="function" id="group__find2_1ga7237650148d17d93cc357327bb363893" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="group__handle_1ga74216ea6ba6c5487d5aceb46eb35f1d6" kindref="member">miopenStatus_t</ref></type>
        <definition>miopenStatus_t miopenSetFindOptionWorkspaceLimit</definition>
        <argsstring>(miopenFindOptions_t options, size_t value)</argsstring>
        <name>miopenSetFindOptionWorkspaceLimit</name>
        <param>
          <type>miopenFindOptions_t</type>
          <declname>options</declname>
        </param>
        <param>
          <type>size_t</type>
          <declname>value</declname>
        </param>
        <briefdescription>
<para>Sets the workspace limit find option. Default value is maximum of size_t. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>options</parametername>
</parameternamelist>
<parameterdescription>
<para>Options object to update </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>value</parametername>
</parameternamelist>
<parameterdescription>
<para>Specifies the workspace limit for find call. All solvers exceeding the limit would be ignored. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>miopenStatus_t </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ldelaney/MIOpen/include/miopen/miopen.h" line="5400" column="17" declfile="/home/ldelaney/MIOpen/include/miopen/miopen.h" declline="5400" declcolumn="17"/>
      </memberdef>
      <memberdef kind="function" id="group__find2_1gad1654e888fff200be7639bf16bdcbc3c" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="group__handle_1ga74216ea6ba6c5487d5aceb46eb35f1d6" kindref="member">miopenStatus_t</ref></type>
        <definition>miopenStatus_t miopenSetFindOptionPreallocatedWorkspace</definition>
        <argsstring>(miopenFindOptions_t options, void *buffer, size_t size)</argsstring>
        <name>miopenSetFindOptionPreallocatedWorkspace</name>
        <param>
          <type>miopenFindOptions_t</type>
          <declname>options</declname>
        </param>
        <param>
          <type>void *</type>
          <declname>buffer</declname>
        </param>
        <param>
          <type>size_t</type>
          <declname>size</declname>
        </param>
        <briefdescription>
<para>Attaches the preallocated workspace to find options. Allocated by the library by default. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>options</parametername>
</parameternamelist>
<parameterdescription>
<para>Options object to update </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>buffer</parametername>
</parameternamelist>
<parameterdescription>
<para>Specifies the workspace for find call </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>size</parametername>
</parameternamelist>
<parameterdescription>
<para>Specifies the size of the buffer passed </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>miopenStatus_t </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ldelaney/MIOpen/include/miopen/miopen.h" line="5410" column="17" declfile="/home/ldelaney/MIOpen/include/miopen/miopen.h" declline="5410" declcolumn="17"/>
      </memberdef>
      <memberdef kind="function" id="group__find2_1ga7265f2f86c90158c3c9bafc516908214" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="group__handle_1ga74216ea6ba6c5487d5aceb46eb35f1d6" kindref="member">miopenStatus_t</ref></type>
        <definition>miopenStatus_t miopenSetFindOptionPreallocatedTensor</definition>
        <argsstring>(miopenFindOptions_t options, miopenTensorArgumentId_t id, void *buffer)</argsstring>
        <name>miopenSetFindOptionPreallocatedTensor</name>
        <param>
          <type>miopenFindOptions_t</type>
          <declname>options</declname>
        </param>
        <param>
          <type><ref refid="group__find2_1ga9aadaf9e83bdc5303cfb58955514502c" kindref="member">miopenTensorArgumentId_t</ref></type>
          <declname>id</declname>
        </param>
        <param>
          <type>void *</type>
          <declname>buffer</declname>
        </param>
        <briefdescription>
<para>Attaches a preallocated tensor to find options. If not used, buffers are allocated by MIOpen internally, which is not recommended. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>options</parametername>
</parameternamelist>
<parameterdescription>
<para>Options object to update </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>id</parametername>
</parameternamelist>
<parameterdescription>
<para>Specifies the id of the tensor passed </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>buffer</parametername>
</parameternamelist>
<parameterdescription>
<para>Specifies the tensor for find call </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>miopenStatus_t </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ldelaney/MIOpen/include/miopen/miopen.h" line="5422" column="17" declfile="/home/ldelaney/MIOpen/include/miopen/miopen.h" declline="5422" declcolumn="17"/>
      </memberdef>
      <memberdef kind="function" id="group__find2_1ga8cca5ef400a6ddb430fe618769f5a6d7" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>MIOPEN_DECLARE_OBJECT</definition>
        <argsstring>(miopenSolution)</argsstring>
        <name>MIOPEN_DECLARE_OBJECT</name>
        <param>
          <type>miopenSolution</type>
        </param>
        <briefdescription>
<para>The miopenSolution object describes a prepared solution. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ldelaney/MIOpen/include/miopen/miopen.h" line="5428" column="1" declfile="/home/ldelaney/MIOpen/include/miopen/miopen.h" declline="5428" declcolumn="1"/>
      </memberdef>
      <memberdef kind="function" id="group__find2_1gaa3c5212a8cfb8913e3536cff5df7de7d" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="group__handle_1ga74216ea6ba6c5487d5aceb46eb35f1d6" kindref="member">miopenStatus_t</ref></type>
        <definition>miopenStatus_t miopenFindSolutions</definition>
        <argsstring>(miopenHandle_t handle, miopenProblem_t problem, miopenFindOptions_t options, miopenSolution_t *solutions, size_t *numSolutions, size_t maxSolutions)</argsstring>
        <name>miopenFindSolutions</name>
        <param>
          <type>miopenHandle_t</type>
          <declname>handle</declname>
        </param>
        <param>
          <type>miopenProblem_t</type>
          <declname>problem</declname>
        </param>
        <param>
          <type>miopenFindOptions_t</type>
          <declname>options</declname>
        </param>
        <param>
          <type>miopenSolution_t *</type>
          <declname>solutions</declname>
        </param>
        <param>
          <type>size_t *</type>
          <declname>numSolutions</declname>
        </param>
        <param>
          <type>size_t</type>
          <declname>maxSolutions</declname>
        </param>
        <briefdescription>
<para>Finds solutions to a problem by running different applicable solutions. Memory is automatically allocated. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>handle</parametername>
</parameternamelist>
<parameterdescription>
<para>Handle to execute the kernels </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>problem</parametername>
</parameternamelist>
<parameterdescription>
<para>Problem to solve </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>options</parametername>
</parameternamelist>
<parameterdescription>
<para>Find options. When null default values would be used </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>solutions</parametername>
</parameternamelist>
<parameterdescription>
<para>Pointer to the first result. Must not be null </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>numSolutions</parametername>
</parameternamelist>
<parameterdescription>
<para>Pointer to the amount of results. Ignored if null </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>maxSolutions</parametername>
</parameternamelist>
<parameterdescription>
<para>Limits the amount of results </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>miopenStatus_t </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ldelaney/MIOpen/include/miopen/miopen.h" line="5441" column="17" declfile="/home/ldelaney/MIOpen/include/miopen/miopen.h" declline="5441" declcolumn="17"/>
      </memberdef>
      <memberdef kind="function" id="group__find2_1gab63fa12d932b163facc83c64d9e24cc1" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="group__handle_1ga74216ea6ba6c5487d5aceb46eb35f1d6" kindref="member">miopenStatus_t</ref></type>
        <definition>miopenStatus_t miopenRunSolution</definition>
        <argsstring>(miopenHandle_t handle, miopenSolution_t solution, size_t nInputs, const miopenTensorArgument_t *tensors, void *workspace, size_t workspaceSize)</argsstring>
        <name>miopenRunSolution</name>
        <param>
          <type>miopenHandle_t</type>
          <declname>handle</declname>
        </param>
        <param>
          <type>miopenSolution_t</type>
          <declname>solution</declname>
        </param>
        <param>
          <type>size_t</type>
          <declname>nInputs</declname>
        </param>
        <param>
          <type>const <ref refid="structmiopen_tensor_argument__t" kindref="compound">miopenTensorArgument_t</ref> *</type>
          <declname>tensors</declname>
        </param>
        <param>
          <type>void *</type>
          <declname>workspace</declname>
        </param>
        <param>
          <type>size_t</type>
          <declname>workspaceSize</declname>
        </param>
        <briefdescription>
<para>Runs the solution using the passed in buffers. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>handle</parametername>
</parameternamelist>
<parameterdescription>
<para>Handle to execute the kernels </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>solution</parametername>
</parameternamelist>
<parameterdescription>
<para>Solution to execute </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>nInputs</parametername>
</parameternamelist>
<parameterdescription>
<para>Amount to inputs for the solution </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>tensors</parametername>
</parameternamelist>
<parameterdescription>
<para>Tensor arguments described by <ref refid="structmiopen_tensor_argument__t" kindref="compound">miopenTensorArgument_t</ref> </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>workspace</parametername>
</parameternamelist>
<parameterdescription>
<para>Pointer to device buffer used as workspace. May be null when not required. Should not be less than expected </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>workspaceSize</parametername>
</parameternamelist>
<parameterdescription>
<para>Size of the workspace buffer </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>miopenStatus_t </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ldelaney/MIOpen/include/miopen/miopen.h" line="5477" column="17" declfile="/home/ldelaney/MIOpen/include/miopen/miopen.h" declline="5477" declcolumn="17"/>
      </memberdef>
      <memberdef kind="function" id="group__find2_1gac049412a8595cb334890d907d0816f1a" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="group__handle_1ga74216ea6ba6c5487d5aceb46eb35f1d6" kindref="member">miopenStatus_t</ref></type>
        <definition>miopenStatus_t miopenDestroySolution</definition>
        <argsstring>(miopenSolution_t solution)</argsstring>
        <name>miopenDestroySolution</name>
        <param>
          <type>miopenSolution_t</type>
          <declname>solution</declname>
        </param>
        <briefdescription>
<para>Destroys solution object. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>solution</parametername>
</parameternamelist>
<parameterdescription>
<para>Solution to destroy </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>miopenStatus_t </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ldelaney/MIOpen/include/miopen/miopen.h" line="5489" column="17" declfile="/home/ldelaney/MIOpen/include/miopen/miopen.h" declline="5489" declcolumn="17"/>
      </memberdef>
      <memberdef kind="function" id="group__find2_1gac48d517c378b83f1c6c4648b18405f97" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="group__handle_1ga74216ea6ba6c5487d5aceb46eb35f1d6" kindref="member">miopenStatus_t</ref></type>
        <definition>miopenStatus_t miopenLoadSolution</definition>
        <argsstring>(miopenSolution_t *solution, const char *data, size_t size)</argsstring>
        <name>miopenLoadSolution</name>
        <param>
          <type>miopenSolution_t *</type>
          <declname>solution</declname>
        </param>
        <param>
          <type>const char *</type>
          <declname>data</declname>
        </param>
        <param>
          <type>size_t</type>
          <declname>size</declname>
        </param>
        <briefdescription>
<para>Loads solution object from binary data. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>solution</parametername>
</parameternamelist>
<parameterdescription>
<para>Pointer to the solution to load </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>data</parametername>
</parameternamelist>
<parameterdescription>
<para>Data to load the solution from </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>size</parametername>
</parameternamelist>
<parameterdescription>
<para>Size of the solution blob </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>miopenStatus_t </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ldelaney/MIOpen/include/miopen/miopen.h" line="5498" column="17" declfile="/home/ldelaney/MIOpen/include/miopen/miopen.h" declline="5498" declcolumn="17"/>
      </memberdef>
      <memberdef kind="function" id="group__find2_1gac7125760ca7876ae28fdd6817fcb5841" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="group__handle_1ga74216ea6ba6c5487d5aceb46eb35f1d6" kindref="member">miopenStatus_t</ref></type>
        <definition>miopenStatus_t miopenSaveSolution</definition>
        <argsstring>(miopenSolution_t solution, char *data)</argsstring>
        <name>miopenSaveSolution</name>
        <param>
          <type>miopenSolution_t</type>
          <declname>solution</declname>
        </param>
        <param>
          <type>char *</type>
          <declname>data</declname>
        </param>
        <briefdescription>
<para>Saves a solution object as binary data. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>solution</parametername>
</parameternamelist>
<parameterdescription>
<para>Solution to save </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>data</parametername>
</parameternamelist>
<parameterdescription>
<para>Pointer to a buffer to save soltuion to </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>miopenStatus_t </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ldelaney/MIOpen/include/miopen/miopen.h" line="5508" column="17" declfile="/home/ldelaney/MIOpen/include/miopen/miopen.h" declline="5508" declcolumn="17"/>
      </memberdef>
      <memberdef kind="function" id="group__find2_1ga9978589af89369b8bba9af932985b29d" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="group__handle_1ga74216ea6ba6c5487d5aceb46eb35f1d6" kindref="member">miopenStatus_t</ref></type>
        <definition>miopenStatus_t miopenGetSolutionSize</definition>
        <argsstring>(miopenSolution_t solution, size_t *size)</argsstring>
        <name>miopenGetSolutionSize</name>
        <param>
          <type>miopenSolution_t</type>
          <declname>solution</declname>
        </param>
        <param>
          <type>size_t *</type>
          <declname>size</declname>
        </param>
        <briefdescription>
<para>Reads the expected size of a solution. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>solution</parametername>
</parameternamelist>
<parameterdescription>
<para>Solution to get size </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>size</parametername>
</parameternamelist>
<parameterdescription>
<para>Pointer to a location where to write the size of the solution blob </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>miopenStatus_t </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ldelaney/MIOpen/include/miopen/miopen.h" line="5516" column="17" declfile="/home/ldelaney/MIOpen/include/miopen/miopen.h" declline="5516" declcolumn="17"/>
      </memberdef>
      <memberdef kind="function" id="group__find2_1gaa94f17f9ac9ffe58a80d02e2d09e2b15" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="group__handle_1ga74216ea6ba6c5487d5aceb46eb35f1d6" kindref="member">miopenStatus_t</ref></type>
        <definition>miopenStatus_t miopenGetSolutionWorkspaceSize</definition>
        <argsstring>(miopenSolution_t solution, size_t *workspaceSize)</argsstring>
        <name>miopenGetSolutionWorkspaceSize</name>
        <param>
          <type>miopenSolution_t</type>
          <declname>solution</declname>
        </param>
        <param>
          <type>size_t *</type>
          <declname>workspaceSize</declname>
        </param>
        <briefdescription>
<para>Reads the amount of workspace required to exectute the solution. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>solution</parametername>
</parameternamelist>
<parameterdescription>
<para>Solution to get required workspace size </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>workspaceSize</parametername>
</parameternamelist>
<parameterdescription>
<para>Pointer to a location where to write the workspace size </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>miopenStatus_t </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ldelaney/MIOpen/include/miopen/miopen.h" line="5524" column="17" declfile="/home/ldelaney/MIOpen/include/miopen/miopen.h" declline="5524" declcolumn="17"/>
      </memberdef>
      <memberdef kind="function" id="group__find2_1ga3f109a28f79a609f733b1c832c1e52b7" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="group__handle_1ga74216ea6ba6c5487d5aceb46eb35f1d6" kindref="member">miopenStatus_t</ref></type>
        <definition>miopenStatus_t miopenGetSolutionTime</definition>
        <argsstring>(miopenSolution_t solution, float *time)</argsstring>
        <name>miopenGetSolutionTime</name>
        <param>
          <type>miopenSolution_t</type>
          <declname>solution</declname>
        </param>
        <param>
          <type>float *</type>
          <declname>time</declname>
        </param>
        <briefdescription>
<para>Reads the time spent to execute the solution the last it was run. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>solution</parametername>
</parameternamelist>
<parameterdescription>
<para>Solution to get exection time </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>time</parametername>
</parameternamelist>
<parameterdescription>
<para>Pointer to a location where to write the execution time </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>miopenStatus_t </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ldelaney/MIOpen/include/miopen/miopen.h" line="5533" column="17" declfile="/home/ldelaney/MIOpen/include/miopen/miopen.h" declline="5533" declcolumn="17"/>
      </memberdef>
      <memberdef kind="function" id="group__find2_1ga27761e9b6c870fe094e2d3a5a40fac79" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="group__handle_1ga74216ea6ba6c5487d5aceb46eb35f1d6" kindref="member">miopenStatus_t</ref></type>
        <definition>miopenStatus_t miopenGetSolutionSolverId</definition>
        <argsstring>(miopenSolution_t solution, uint64_t *solverId)</argsstring>
        <name>miopenGetSolutionSolverId</name>
        <param>
          <type>miopenSolution_t</type>
          <declname>solution</declname>
        </param>
        <param>
          <type>uint64_t *</type>
          <declname>solverId</declname>
        </param>
        <briefdescription>
<para>Reads id of the solver referred by the solution. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>solution</parametername>
</parameternamelist>
<parameterdescription>
<para>Solution to get solver id from </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>solverId</parametername>
</parameternamelist>
<parameterdescription>
<para>Pointer to a location where to write the solver id </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>miopenStatus_t </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ldelaney/MIOpen/include/miopen/miopen.h" line="5541" column="17" declfile="/home/ldelaney/MIOpen/include/miopen/miopen.h" declline="5541" declcolumn="17"/>
      </memberdef>
      <memberdef kind="function" id="group__find2_1gacc4d666af80bb7e661bb13cdfbdbf9e5" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="group__handle_1ga74216ea6ba6c5487d5aceb46eb35f1d6" kindref="member">miopenStatus_t</ref></type>
        <definition>miopenStatus_t miopenGetSolverIdConvAlgorithm</definition>
        <argsstring>(uint64_t solverId, miopenConvAlgorithm_t *result)</argsstring>
        <name>miopenGetSolverIdConvAlgorithm</name>
        <param>
          <type>uint64_t</type>
          <declname>solverId</declname>
        </param>
        <param>
          <type><ref refid="group__convolutions_1ga3ba938002b32a963925c7cfce51ce15a" kindref="member">miopenConvAlgorithm_t</ref> *</type>
          <declname>result</declname>
        </param>
        <briefdescription>
<para>Gets the convolution algorithm implemented by a solver. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>solverId</parametername>
</parameternamelist>
<parameterdescription>
<para>Solver id to get convolution algorithm of </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>result</parametername>
</parameternamelist>
<parameterdescription>
<para>Pointer to a location where to write the algorithm </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>miopenStatus_t </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ldelaney/MIOpen/include/miopen/miopen.h" line="5550" column="17" declfile="/home/ldelaney/MIOpen/include/miopen/miopen.h" declline="5550" declcolumn="17"/>
      </memberdef>
      <memberdef kind="function" id="group__find2_1gadc3adb3d81d376bc016950fbcf59c636" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="group__handle_1ga74216ea6ba6c5487d5aceb46eb35f1d6" kindref="member">miopenStatus_t</ref></type>
        <definition>miopenStatus_t miopenCreateActivationProblem</definition>
        <argsstring>(miopenProblem_t *problem, miopenActivationDescriptor_t operatorDesc, miopenProblemDirection_t direction)</argsstring>
        <name>miopenCreateActivationProblem</name>
        <param>
          <type>miopenProblem_t *</type>
          <declname>problem</declname>
        </param>
        <param>
          <type>miopenActivationDescriptor_t</type>
          <declname>operatorDesc</declname>
        </param>
        <param>
          <type><ref refid="group__find2_1gab7565f4a33ed5b4f7fa1793a7dad6337" kindref="member">miopenProblemDirection_t</ref></type>
          <declname>direction</declname>
        </param>
        <briefdescription>
<para>Initializes a problem object describing an activation operation. </para>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="note"><para>As of now there is no way to actually get any solution for this kind of problems.</para>
</simplesect>
<parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>problem</parametername>
</parameternamelist>
<parameterdescription>
<para>Pointer to the problem to initialize </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>operatorDesc</parametername>
</parameternamelist>
<parameterdescription>
<para>Descriptor of the operator to be used </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>direction</parametername>
</parameternamelist>
<parameterdescription>
<para>Direction of the operation </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>miopenStatus_t </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ldelaney/MIOpen/include/miopen/miopen.h" line="5564" column="1" declfile="/home/ldelaney/MIOpen/include/miopen/miopen.h" declline="5564" declcolumn="1"/>
      </memberdef>
      <memberdef kind="function" id="group__find2_1ga97cbacdb934a4a9477043e9e8ead4d92" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="group__handle_1ga74216ea6ba6c5487d5aceb46eb35f1d6" kindref="member">miopenStatus_t</ref></type>
        <definition>miopenStatus_t miopenFuseProblems</definition>
        <argsstring>(miopenProblem_t problem1, miopenProblem_t problem2)</argsstring>
        <name>miopenFuseProblems</name>
        <param>
          <type>miopenProblem_t</type>
          <declname>problem1</declname>
        </param>
        <param>
          <type>miopenProblem_t</type>
          <declname>problem2</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ldelaney/MIOpen/include/miopen/miopen.h" line="5587" column="17" declfile="/home/ldelaney/MIOpen/include/miopen/miopen.h" declline="5587" declcolumn="17"/>
      </memberdef>
      <memberdef kind="function" id="group__find2_1gaef75c299c6a5d68c95d4eb9d6bbd5606" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="group__handle_1ga74216ea6ba6c5487d5aceb46eb35f1d6" kindref="member">miopenStatus_t</ref></type>
        <definition>miopenStatus_t miopenCreateBiasProblem</definition>
        <argsstring>(miopenProblem_t *problem, miopenProblemDirection_t direction)</argsstring>
        <name>miopenCreateBiasProblem</name>
        <param>
          <type>miopenProblem_t *</type>
          <declname>problem</declname>
        </param>
        <param>
          <type><ref refid="group__find2_1gab7565f4a33ed5b4f7fa1793a7dad6337" kindref="member">miopenProblemDirection_t</ref></type>
          <declname>direction</declname>
        </param>
        <briefdescription>
<para>Initializes a problem object describing an bias operation. </para>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="note"><para>As of now there is no way to actually get any solution for this kind of problems.</para>
</simplesect>
<parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>problem</parametername>
</parameternamelist>
<parameterdescription>
<para>Pointer to the problem to initialize </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>direction</parametername>
</parameternamelist>
<parameterdescription>
<para>Direction of the operation </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>miopenStatus_t </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ldelaney/MIOpen/include/miopen/miopen.h" line="5596" column="17" declfile="/home/ldelaney/MIOpen/include/miopen/miopen.h" declline="5596" declcolumn="17"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
  </compounddef>
</doxygen>
