<?xml version='1.0' encoding='UTF-8' standalone='yes' ?>
<tagfile doxygen_version="1.9.1">
  <compound kind="file">
    <name>miopen.h</name>
    <path>/home/ldelaney/MIOpen/include/miopen/</path>
    <filename>miopen_8h.html</filename>
    <class kind="struct">miopenConvAlgoPerf_t</class>
    <class kind="struct">miopenConvSolution_t</class>
    <class kind="struct">miopenTensorArgument_t</class>
    <member kind="define">
      <type>#define</type>
      <name>MIOPEN_DECLARE_OBJECT</name>
      <anchorfile>miopen_8h.html</anchorfile>
      <anchor>a979ba09aedec9037aa1a0b90ed3153e9</anchor>
      <arglist>(name)</arglist>
    </member>
    <member kind="define">
      <type>#define</type>
      <name>MIOPEN_API_VERSION_REDUCE_TENSOR</name>
      <anchorfile>group___tensor_reduce.html</anchorfile>
      <anchor>gab4f973d3f1f731ca1f0c1ca3ae225e7c</anchor>
      <arglist></arglist>
    </member>
    <member kind="typedef">
      <type>void *(*</type>
      <name>miopenAllocatorFunction</name>
      <anchorfile>group__handle.html</anchorfile>
      <anchor>gac2642558af91c051446ef9fab49bba31</anchor>
      <arglist>)(void *context, size_t sizeBytes)</arglist>
    </member>
    <member kind="typedef">
      <type>void(*</type>
      <name>miopenDeallocatorFunction</name>
      <anchorfile>group__handle.html</anchorfile>
      <anchor>ga54112962a0d7bcf6cc011a5ed19a4201</anchor>
      <arglist>)(void *context, void *memory)</arglist>
    </member>
    <member kind="enumeration">
      <type></type>
      <name>miopenStatus_t</name>
      <anchorfile>group__handle.html</anchorfile>
      <anchor>ga74216ea6ba6c5487d5aceb46eb35f1d6</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>miopenStatusSuccess</name>
      <anchorfile>group__handle.html</anchorfile>
      <anchor>gga74216ea6ba6c5487d5aceb46eb35f1d6a3fc50915c64e73ec736e0f9c2cb78129</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>miopenStatusNotInitialized</name>
      <anchorfile>group__handle.html</anchorfile>
      <anchor>gga74216ea6ba6c5487d5aceb46eb35f1d6abd80b3c675e17392162640b6a5cb7375</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>miopenStatusInvalidValue</name>
      <anchorfile>group__handle.html</anchorfile>
      <anchor>gga74216ea6ba6c5487d5aceb46eb35f1d6af0d655f9d71417a7143be6452651c1bb</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>miopenStatusBadParm</name>
      <anchorfile>group__handle.html</anchorfile>
      <anchor>gga74216ea6ba6c5487d5aceb46eb35f1d6abcd087689c69bcee83d4726487c8cca8</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>miopenStatusAllocFailed</name>
      <anchorfile>group__handle.html</anchorfile>
      <anchor>gga74216ea6ba6c5487d5aceb46eb35f1d6a9a1f9f181bb7d5649d3bb788760c489b</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>miopenStatusInternalError</name>
      <anchorfile>group__handle.html</anchorfile>
      <anchor>gga74216ea6ba6c5487d5aceb46eb35f1d6acfdd2d77791aae4ddd442f819189c19c</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>miopenStatusNotImplemented</name>
      <anchorfile>group__handle.html</anchorfile>
      <anchor>gga74216ea6ba6c5487d5aceb46eb35f1d6ab6a11c9af8b9e52ab982abd85673ce9e</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>miopenStatusUnknownError</name>
      <anchorfile>group__handle.html</anchorfile>
      <anchor>gga74216ea6ba6c5487d5aceb46eb35f1d6a1504690ef8823ed85612008c08277b88</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>miopenStatusUnsupportedOp</name>
      <anchorfile>group__handle.html</anchorfile>
      <anchor>gga74216ea6ba6c5487d5aceb46eb35f1d6a0199ef6922cf9b53fc3320d681915b73</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>miopenStatusGpuOperationsSkipped</name>
      <anchorfile>group__handle.html</anchorfile>
      <anchor>gga74216ea6ba6c5487d5aceb46eb35f1d6a0d00d1e79b4c27f3ca840c9729a8c58b</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>miopenStatusVersionMismatch</name>
      <anchorfile>group__handle.html</anchorfile>
      <anchor>gga74216ea6ba6c5487d5aceb46eb35f1d6a51681c1688f3fdf0609c798e43afd171</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumeration">
      <type></type>
      <name>miopenF8RoundingMode_t</name>
      <anchorfile>group__handle.html</anchorfile>
      <anchor>ga80bfa6e46fdc8764f04f29a03689d1fc</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>miopenF8RoundingModeStandard</name>
      <anchorfile>group__handle.html</anchorfile>
      <anchor>gga80bfa6e46fdc8764f04f29a03689d1fcafbe24189bfd43c73fe839aa4ea2968d7</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>miopenF8RoundingModeStochastic</name>
      <anchorfile>group__handle.html</anchorfile>
      <anchor>gga80bfa6e46fdc8764f04f29a03689d1fcafe52ff63273ab4eb21714c050f4abfb3</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumeration">
      <type></type>
      <name>miopenDataType_t</name>
      <anchorfile>group__tensor.html</anchorfile>
      <anchor>ga8bf94a23997093548ddf866c94c4ac17</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>miopenHalf</name>
      <anchorfile>miopen_8h.html</anchorfile>
      <anchor>ga8bf94a23997093548ddf866c94c4ac17a6e9ac7a764797dde5f1b28d3516ba69f</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>miopenFloat</name>
      <anchorfile>miopen_8h.html</anchorfile>
      <anchor>ga8bf94a23997093548ddf866c94c4ac17a33115d427e71a2759a28dfea283d5eeb</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>miopenInt32</name>
      <anchorfile>miopen_8h.html</anchorfile>
      <anchor>ga8bf94a23997093548ddf866c94c4ac17a6aa2b89e7e323df62ba76bc62b6d8c0c</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>miopenInt8</name>
      <anchorfile>miopen_8h.html</anchorfile>
      <anchor>ga8bf94a23997093548ddf866c94c4ac17a6a5fcabf2ddece1384141f68b0bd34cc</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>miopenBFloat16</name>
      <anchorfile>miopen_8h.html</anchorfile>
      <anchor>ga8bf94a23997093548ddf866c94c4ac17a656b49db33ff9a982cbcbcfd2710bb43</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>miopenDouble</name>
      <anchorfile>miopen_8h.html</anchorfile>
      <anchor>ga8bf94a23997093548ddf866c94c4ac17a90310ef7026c1f362feb65cdd90a6e44</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>miopenFloat8</name>
      <anchorfile>miopen_8h.html</anchorfile>
      <anchor>ga8bf94a23997093548ddf866c94c4ac17af035994430ebff11d40c896fca7624e4</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>miopenBFloat8</name>
      <anchorfile>miopen_8h.html</anchorfile>
      <anchor>ga8bf94a23997093548ddf866c94c4ac17a785652761965bb5a33008904660dd6bb</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumeration">
      <type></type>
      <name>miopenTensorLayout_t</name>
      <anchorfile>group__tensor.html</anchorfile>
      <anchor>ga4997f98fa2256f41736a184fa1574f8c</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>miopenTensorNCHW</name>
      <anchorfile>miopen_8h.html</anchorfile>
      <anchor>ga4997f98fa2256f41736a184fa1574f8ca3640618e74eb72dbdfee36f9cbb408bb</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>miopenTensorNHWC</name>
      <anchorfile>miopen_8h.html</anchorfile>
      <anchor>ga4997f98fa2256f41736a184fa1574f8ca1657aaece7d521bd728632a953e2f55a</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>miopenTensorCHWN</name>
      <anchorfile>miopen_8h.html</anchorfile>
      <anchor>ga4997f98fa2256f41736a184fa1574f8ca05a571279bec2ef5c20eb66c09616a3e</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>miopenTensorNCHWc4</name>
      <anchorfile>miopen_8h.html</anchorfile>
      <anchor>ga4997f98fa2256f41736a184fa1574f8caff0e70e620fa03f6383f666c19977fdd</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>miopenTensorNCHWc8</name>
      <anchorfile>miopen_8h.html</anchorfile>
      <anchor>ga4997f98fa2256f41736a184fa1574f8ca4e90e1a30efbe32d6e3854d4bf7c9bc3</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>miopenTensorCHWNc4</name>
      <anchorfile>miopen_8h.html</anchorfile>
      <anchor>ga4997f98fa2256f41736a184fa1574f8ca4ca640612b360e10b1e93fa7a89c0741</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>miopenTensorCHWNc8</name>
      <anchorfile>miopen_8h.html</anchorfile>
      <anchor>ga4997f98fa2256f41736a184fa1574f8ca9cf6d72886e9754658d6c511a3c29c44</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>miopenTensorNCDHW</name>
      <anchorfile>miopen_8h.html</anchorfile>
      <anchor>ga4997f98fa2256f41736a184fa1574f8ca727b31912781101a907b27391534c1c7</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>miopenTensorNDHWC</name>
      <anchorfile>miopen_8h.html</anchorfile>
      <anchor>ga4997f98fa2256f41736a184fa1574f8ca1facc75bcb03d9832c5606151a34795b</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumeration">
      <type></type>
      <name>miopenIndexType_t</name>
      <anchorfile>group__pooling.html</anchorfile>
      <anchor>ga8428bfacfbe899245b707fa7a6b95547</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>miopenIndexUint8</name>
      <anchorfile>miopen_8h.html</anchorfile>
      <anchor>ga8428bfacfbe899245b707fa7a6b95547ae75cb44f2c20e2fb87b3222b8b7ebc8b</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>miopenIndexUint16</name>
      <anchorfile>miopen_8h.html</anchorfile>
      <anchor>ga8428bfacfbe899245b707fa7a6b95547a2020981e0bbe101614506772aa324a73</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>miopenIndexUint32</name>
      <anchorfile>miopen_8h.html</anchorfile>
      <anchor>ga8428bfacfbe899245b707fa7a6b95547ab1fa80c8eafef2fe983e52210be8c260</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>miopenIndexUint64</name>
      <anchorfile>miopen_8h.html</anchorfile>
      <anchor>ga8428bfacfbe899245b707fa7a6b95547a4539c9a6e12c960e90ff1ffe388fdcdd</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumeration">
      <type></type>
      <name>miopenTensorOp_t</name>
      <anchorfile>group__tensor.html</anchorfile>
      <anchor>gaa2498dabff3e75d86471b25a2be9a198</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>miopenTensorOpAdd</name>
      <anchorfile>miopen_8h.html</anchorfile>
      <anchor>gaa2498dabff3e75d86471b25a2be9a198ad0cfac2b0c8f5668f62c2b156a7281e0</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>miopenTensorOpMul</name>
      <anchorfile>miopen_8h.html</anchorfile>
      <anchor>gaa2498dabff3e75d86471b25a2be9a198ae20aa1bb8363d01002ce601f9edfdbf2</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>miopenTensorOpMin</name>
      <anchorfile>miopen_8h.html</anchorfile>
      <anchor>gaa2498dabff3e75d86471b25a2be9a198a46cb1f291532f6b241b12b76e17ddbef</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>miopenTensorOpMax</name>
      <anchorfile>miopen_8h.html</anchorfile>
      <anchor>gaa2498dabff3e75d86471b25a2be9a198aed2a5c869fb47aa3f0aebd9945fa56da</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumeration">
      <type></type>
      <name>miopenConvolutionMode_t</name>
      <anchorfile>group__convolutions.html</anchorfile>
      <anchor>ga91bcbdad0e53c07078287a74799c88cd</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>miopenConvolution</name>
      <anchorfile>miopen_8h.html</anchorfile>
      <anchor>ga91bcbdad0e53c07078287a74799c88cdaf5c5ca99ec760a1d1016a671408766bc</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>miopenTranspose</name>
      <anchorfile>miopen_8h.html</anchorfile>
      <anchor>ga91bcbdad0e53c07078287a74799c88cdaaa6f0f5913493a335cbb4389c66f4736</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>miopenGroupConv</name>
      <anchorfile>miopen_8h.html</anchorfile>
      <anchor>ga91bcbdad0e53c07078287a74799c88cdaa839e7fb549d7ee872485b571b8e692a</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>miopenDepthwise</name>
      <anchorfile>miopen_8h.html</anchorfile>
      <anchor>ga91bcbdad0e53c07078287a74799c88cda43f0c77533ba896fcd8dc6e9913e9ec5</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumeration">
      <type></type>
      <name>miopenPaddingMode_t</name>
      <anchorfile>miopen_8h.html</anchorfile>
      <anchor>a4540cf2ce4c529bc029b727969368cca</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>miopenPaddingDefault</name>
      <anchorfile>miopen_8h.html</anchorfile>
      <anchor>a4540cf2ce4c529bc029b727969368ccaa4aed4a8a65105faaf4b5642513149fc3</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>miopenPaddingSame</name>
      <anchorfile>miopen_8h.html</anchorfile>
      <anchor>a4540cf2ce4c529bc029b727969368ccaad39c20eb8155b9bc83691beca44ceb0b</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>miopenPaddingValid</name>
      <anchorfile>miopen_8h.html</anchorfile>
      <anchor>a4540cf2ce4c529bc029b727969368ccaaeef0ba477e48d5e1e4f4fd88d87aa6f2</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumeration">
      <type></type>
      <name>miopenPoolingMode_t</name>
      <anchorfile>group__pooling.html</anchorfile>
      <anchor>ga4243bc20d51988902e2e22a5d2b6bb5c</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>miopenPoolingMax</name>
      <anchorfile>miopen_8h.html</anchorfile>
      <anchor>ga4243bc20d51988902e2e22a5d2b6bb5cad4f167bcecbd60fb7078fb97aaffd3fc</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>miopenPoolingAverage</name>
      <anchorfile>miopen_8h.html</anchorfile>
      <anchor>ga4243bc20d51988902e2e22a5d2b6bb5ca3964ddda768df3b127079997346bfe89</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>miopenPoolingAverageInclusive</name>
      <anchorfile>miopen_8h.html</anchorfile>
      <anchor>ga4243bc20d51988902e2e22a5d2b6bb5caa060d79a20d907b13a9ecc2a77e88c44</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumeration">
      <type></type>
      <name>miopenPoolingWorkspaceIndexMode_t</name>
      <anchorfile>group__pooling.html</anchorfile>
      <anchor>ga8f69978be75d6d32dbc172d3a99695e7</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>miopenPoolingWorkspaceIndexMask</name>
      <anchorfile>miopen_8h.html</anchorfile>
      <anchor>ga8f69978be75d6d32dbc172d3a99695e7aa18c786f4a9f7ca40cb70395d5d9aeaa</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>miopenPoolingWorkspaceIndexImage</name>
      <anchorfile>miopen_8h.html</anchorfile>
      <anchor>ga8f69978be75d6d32dbc172d3a99695e7a962adb90a1876eb3980c39d5a9247a38</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumeration">
      <type></type>
      <name>miopenLRNMode_t</name>
      <anchorfile>group___l_r_n.html</anchorfile>
      <anchor>gae8c4f5513e59a0c2870013504f9b5c4d</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>miopenLRNWithinChannel</name>
      <anchorfile>miopen_8h.html</anchorfile>
      <anchor>gae8c4f5513e59a0c2870013504f9b5c4da0062534dacca2acfb07e261fd5c0b77c</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>miopenLRNCrossChannel</name>
      <anchorfile>miopen_8h.html</anchorfile>
      <anchor>gae8c4f5513e59a0c2870013504f9b5c4da5c1611ee75b7929a3a59e414974a18a7</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumeration">
      <type></type>
      <name>miopenNormMode_t</name>
      <anchorfile>group__layernorm.html</anchorfile>
      <anchor>ga996bace523abc82c6847984c34b60d5b</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>MIOPEN_ELEMENTWISE_AFFINE</name>
      <anchorfile>miopen_8h.html</anchorfile>
      <anchor>ga996bace523abc82c6847984c34b60d5ba6dafa3af3a93d940670d2e19448a8b4b</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>MIOPEN_WEIGHT_BIAS</name>
      <anchorfile>miopen_8h.html</anchorfile>
      <anchor>ga996bace523abc82c6847984c34b60d5ba3eb5ec947f41699cc76f26232a6e1101</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumeration">
      <type></type>
      <name>miopenBatchNormMode_t</name>
      <anchorfile>group__batchnorm.html</anchorfile>
      <anchor>gab21179fc753f8e0d1a6f23ac9b340a26</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>miopenBNPerActivation</name>
      <anchorfile>miopen_8h.html</anchorfile>
      <anchor>gab21179fc753f8e0d1a6f23ac9b340a26a44ab9eadea90a770a3744a61b71d536f</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>miopenBNSpatial</name>
      <anchorfile>miopen_8h.html</anchorfile>
      <anchor>gab21179fc753f8e0d1a6f23ac9b340a26a42ebad7a4f774e7dc3df2de80b31a3e0</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumeration">
      <type></type>
      <name>miopenActivationMode_t</name>
      <anchorfile>group__activation.html</anchorfile>
      <anchor>ga5fd27264d844b20dd8d63ab678f09af6</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>miopenActivationPASTHRU</name>
      <anchorfile>miopen_8h.html</anchorfile>
      <anchor>ga5fd27264d844b20dd8d63ab678f09af6a3a85417a19911daeecf6e9e5f8952d3b</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>miopenActivationLOGISTIC</name>
      <anchorfile>miopen_8h.html</anchorfile>
      <anchor>ga5fd27264d844b20dd8d63ab678f09af6a4a7e7a529bed5bc42fc4966d47ea29b4</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>miopenActivationTANH</name>
      <anchorfile>miopen_8h.html</anchorfile>
      <anchor>ga5fd27264d844b20dd8d63ab678f09af6aebc2804e6806816dc8db6554d0c670b2</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>miopenActivationRELU</name>
      <anchorfile>miopen_8h.html</anchorfile>
      <anchor>ga5fd27264d844b20dd8d63ab678f09af6a66fb3d3c74e40e1e1a460fb409be62c0</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>miopenActivationSOFTRELU</name>
      <anchorfile>miopen_8h.html</anchorfile>
      <anchor>ga5fd27264d844b20dd8d63ab678f09af6ad022a217df2f21174c4d515294f0e727</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>miopenActivationABS</name>
      <anchorfile>miopen_8h.html</anchorfile>
      <anchor>ga5fd27264d844b20dd8d63ab678f09af6a481c9203a79996016e88e0b1baee55b5</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>miopenActivationPOWER</name>
      <anchorfile>miopen_8h.html</anchorfile>
      <anchor>ga5fd27264d844b20dd8d63ab678f09af6a7dbe18fe7783fcf9bb4e46d34b8e1d51</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>miopenActivationCLIPPEDRELU</name>
      <anchorfile>miopen_8h.html</anchorfile>
      <anchor>ga5fd27264d844b20dd8d63ab678f09af6a5ac41058b9593346704ed86235228f4b</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>miopenActivationLEAKYRELU</name>
      <anchorfile>miopen_8h.html</anchorfile>
      <anchor>ga5fd27264d844b20dd8d63ab678f09af6a03c0f145db198f95b49b372470e64f29</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>miopenActivationELU</name>
      <anchorfile>miopen_8h.html</anchorfile>
      <anchor>ga5fd27264d844b20dd8d63ab678f09af6ac95a28635391882b82df5d1a9dcbc0a3</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumeration">
      <type></type>
      <name>miopenSoftmaxAlgorithm_t</name>
      <anchorfile>group__softmax.html</anchorfile>
      <anchor>gaf2376aefd82e3d6e08df6da4810ffdfe</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>MIOPEN_SOFTMAX_FAST</name>
      <anchorfile>miopen_8h.html</anchorfile>
      <anchor>gaf2376aefd82e3d6e08df6da4810ffdfea7d462f643547b89ea8460c3b1d58b8d8</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>MIOPEN_SOFTMAX_ACCURATE</name>
      <anchorfile>miopen_8h.html</anchorfile>
      <anchor>gaf2376aefd82e3d6e08df6da4810ffdfeacd866d881145ad1a323c4a589986cf5e</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>MIOPEN_SOFTMAX_LOG</name>
      <anchorfile>miopen_8h.html</anchorfile>
      <anchor>gaf2376aefd82e3d6e08df6da4810ffdfead27f321be1aa13300ebb2d175a3666c5</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumeration">
      <type></type>
      <name>miopenSoftmaxMode_t</name>
      <anchorfile>group__softmax.html</anchorfile>
      <anchor>gaea670eae33cee9aee53d48624cf28d7d</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>MIOPEN_SOFTMAX_MODE_INSTANCE</name>
      <anchorfile>miopen_8h.html</anchorfile>
      <anchor>gaea670eae33cee9aee53d48624cf28d7dabab93ef42b0ec7744b4fb8ab83d700a3</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>MIOPEN_SOFTMAX_MODE_CHANNEL</name>
      <anchorfile>miopen_8h.html</anchorfile>
      <anchor>gaea670eae33cee9aee53d48624cf28d7daf5c13b390d4b6132b51976a92f0f3029</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumeration">
      <type></type>
      <name>miopenReduceTensorOp_t</name>
      <anchorfile>group___tensor_reduce.html</anchorfile>
      <anchor>ga70e205d9a10688c29474cd8795521ddd</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>MIOPEN_REDUCE_TENSOR_ADD</name>
      <anchorfile>miopen_8h.html</anchorfile>
      <anchor>ga70e205d9a10688c29474cd8795521dddae88d3f61f4d036c581d47d2242011edb</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>MIOPEN_REDUCE_TENSOR_MUL</name>
      <anchorfile>miopen_8h.html</anchorfile>
      <anchor>ga70e205d9a10688c29474cd8795521ddda509f2659e4d54a99d17844ee8de19130</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>MIOPEN_REDUCE_TENSOR_MIN</name>
      <anchorfile>miopen_8h.html</anchorfile>
      <anchor>ga70e205d9a10688c29474cd8795521dddae1af9483b548971223d29c8f12862820</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>MIOPEN_REDUCE_TENSOR_MAX</name>
      <anchorfile>miopen_8h.html</anchorfile>
      <anchor>ga70e205d9a10688c29474cd8795521ddda6c82f5dec443a93777291a68de6709fe</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>MIOPEN_REDUCE_TENSOR_AMAX</name>
      <anchorfile>miopen_8h.html</anchorfile>
      <anchor>ga70e205d9a10688c29474cd8795521dddac956caf0ac6e9ffbf647eca0bb3c13ab</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>MIOPEN_REDUCE_TENSOR_AVG</name>
      <anchorfile>miopen_8h.html</anchorfile>
      <anchor>ga70e205d9a10688c29474cd8795521ddda7088afde0cec574d45add46d4f1d5534</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>MIOPEN_REDUCE_TENSOR_NORM1</name>
      <anchorfile>miopen_8h.html</anchorfile>
      <anchor>ga70e205d9a10688c29474cd8795521ddda9df43ac0efb3c7061e2a131c337050b8</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>MIOPEN_REDUCE_TENSOR_NORM2</name>
      <anchorfile>miopen_8h.html</anchorfile>
      <anchor>ga70e205d9a10688c29474cd8795521dddae8a5d817789938ae4cf77d0496b7122f</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumeration">
      <type></type>
      <name>miopenNanPropagation_t</name>
      <anchorfile>miopen_8h.html</anchorfile>
      <anchor>adfa716b919ff5919780b47334bbb1d89</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>MIOPEN_NOT_PROPAGATE_NAN</name>
      <anchorfile>miopen_8h.html</anchorfile>
      <anchor>adfa716b919ff5919780b47334bbb1d89adb89d9f86661677eba6f1fb0078bb9b0</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>MIOPEN_PROPAGATE_NAN</name>
      <anchorfile>miopen_8h.html</anchorfile>
      <anchor>adfa716b919ff5919780b47334bbb1d89a79c9620aa9ab26af969cb5c78cf8ac77</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumeration">
      <type></type>
      <name>miopenReduceTensorIndices_t</name>
      <anchorfile>group___tensor_reduce.html</anchorfile>
      <anchor>ga4dd527c6b506c34ec06d641551d78b7c</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>MIOPEN_REDUCE_TENSOR_NO_INDICES</name>
      <anchorfile>miopen_8h.html</anchorfile>
      <anchor>ga4dd527c6b506c34ec06d641551d78b7ca630bd9b0b0f29fdd4acd7f1428c9e112</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>MIOPEN_REDUCE_TENSOR_FLATTENED_INDICES</name>
      <anchorfile>miopen_8h.html</anchorfile>
      <anchor>ga4dd527c6b506c34ec06d641551d78b7ca04e405c32e661195b6af8a3c8d1fdf24</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumeration">
      <type></type>
      <name>miopenIndicesType_t</name>
      <anchorfile>group___tensor_reduce.html</anchorfile>
      <anchor>ga8c58d2c6bd149d6140ea81e88374d82b</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>MIOPEN_32BIT_INDICES</name>
      <anchorfile>miopen_8h.html</anchorfile>
      <anchor>ga8c58d2c6bd149d6140ea81e88374d82babe4c1ddd72f1a427a032ed9ccff8a8bb</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>MIOPEN_64BIT_INDICES</name>
      <anchorfile>miopen_8h.html</anchorfile>
      <anchor>ga8c58d2c6bd149d6140ea81e88374d82bafd7b2202fcf90028f49773fde1b11435</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>MIOPEN_16BIT_INDICES</name>
      <anchorfile>miopen_8h.html</anchorfile>
      <anchor>ga8c58d2c6bd149d6140ea81e88374d82badf88480d0cc300ddba2b326b78e68d84</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>MIOPEN_8BIT_INDICES</name>
      <anchorfile>miopen_8h.html</anchorfile>
      <anchor>ga8c58d2c6bd149d6140ea81e88374d82babae5e385da771a86da08f2873630cf33</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumeration">
      <type></type>
      <name>miopenConvolutionAttrib_t</name>
      <anchorfile>group__convolutions.html</anchorfile>
      <anchor>ga784559bf30977ad39cbc491727eae485</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>MIOPEN_CONVOLUTION_ATTRIB_FP16_ALT_IMPL</name>
      <anchorfile>miopen_8h.html</anchorfile>
      <anchor>ga784559bf30977ad39cbc491727eae485ae736f64b13f2adec7f2a6f1202abb5b2</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>MIOPEN_CONVOLUTION_ATTRIB_DETERMINISTIC</name>
      <anchorfile>miopen_8h.html</anchorfile>
      <anchor>ga784559bf30977ad39cbc491727eae485a1fe1be172f9231f2a251d048b4cbbe40</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>MIOPEN_CONVOLUTION_ATTRIB_FP8_ROUNDING_MODE</name>
      <anchorfile>miopen_8h.html</anchorfile>
      <anchor>ga784559bf30977ad39cbc491727eae485a33f92e9eb6d42b8da1c774fcbad24625</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumeration">
      <type></type>
      <name>miopenConvFwdAlgorithm_t</name>
      <anchorfile>group__convolutions.html</anchorfile>
      <anchor>ga5dd59dc3df4bcf9da4797c6169ad99c3</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>miopenConvolutionFwdAlgoGEMM</name>
      <anchorfile>group__convolutions.html</anchorfile>
      <anchor>gga5dd59dc3df4bcf9da4797c6169ad99c3a61b89a58eb19fea2207a17531e8205f7</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>miopenConvolutionFwdAlgoDirect</name>
      <anchorfile>group__convolutions.html</anchorfile>
      <anchor>gga5dd59dc3df4bcf9da4797c6169ad99c3ade2d29687c9fb8bf450d3c8b946e25b5</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>miopenConvolutionFwdAlgoFFT</name>
      <anchorfile>group__convolutions.html</anchorfile>
      <anchor>gga5dd59dc3df4bcf9da4797c6169ad99c3a154a04348f01564eff432c6432242f34</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>miopenConvolutionFwdAlgoWinograd</name>
      <anchorfile>group__convolutions.html</anchorfile>
      <anchor>gga5dd59dc3df4bcf9da4797c6169ad99c3a9e831d6f4b3ab127f370c3a3e55b2abf</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>miopenConvolutionFwdAlgoImplicitGEMM</name>
      <anchorfile>group__convolutions.html</anchorfile>
      <anchor>gga5dd59dc3df4bcf9da4797c6169ad99c3a5595e274c4012d54d83a9582e35ab2a1</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumeration">
      <type></type>
      <name>miopenConvBwdWeightsAlgorithm_t</name>
      <anchorfile>group__convolutions.html</anchorfile>
      <anchor>gaba316771c206839e54419b135027cbee</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>miopenConvolutionBwdWeightsAlgoGEMM</name>
      <anchorfile>group__convolutions.html</anchorfile>
      <anchor>ggaba316771c206839e54419b135027cbeea4302eada3444370b4f5a516c9352c19e</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>miopenConvolutionBwdWeightsAlgoDirect</name>
      <anchorfile>group__convolutions.html</anchorfile>
      <anchor>ggaba316771c206839e54419b135027cbeeacd485d0cbd7838b89bcbaa86add7fd44</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>miopenConvolutionBwdWeightsAlgoWinograd</name>
      <anchorfile>group__convolutions.html</anchorfile>
      <anchor>ggaba316771c206839e54419b135027cbeea7eda3bac3601384c44f6390d66ded524</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>miopenConvolutionBwdWeightsAlgoImplicitGEMM</name>
      <anchorfile>group__convolutions.html</anchorfile>
      <anchor>ggaba316771c206839e54419b135027cbeeaef65e6751c5dcd90eba6d7d198627698</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumeration">
      <type></type>
      <name>miopenConvBwdDataAlgorithm_t</name>
      <anchorfile>group__convolutions.html</anchorfile>
      <anchor>ga774e44db42d175d73c0d87272f6cdc05</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>miopenConvolutionBwdDataAlgoGEMM</name>
      <anchorfile>group__convolutions.html</anchorfile>
      <anchor>gga774e44db42d175d73c0d87272f6cdc05a1ea94b2548956ecbb6d6aaead535a38a</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>miopenConvolutionBwdDataAlgoDirect</name>
      <anchorfile>group__convolutions.html</anchorfile>
      <anchor>gga774e44db42d175d73c0d87272f6cdc05a123132561c7ebe6a6d022016bc395658</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>miopenConvolutionBwdDataAlgoFFT</name>
      <anchorfile>group__convolutions.html</anchorfile>
      <anchor>gga774e44db42d175d73c0d87272f6cdc05a3c26d3cccb4763cc3370b72f71f11f72</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>miopenConvolutionBwdDataAlgoWinograd</name>
      <anchorfile>group__convolutions.html</anchorfile>
      <anchor>gga774e44db42d175d73c0d87272f6cdc05ae4f98a414a6b1be0e14a9912b0459f54</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>miopenTransposeBwdDataAlgoGEMM</name>
      <anchorfile>group__convolutions.html</anchorfile>
      <anchor>gga774e44db42d175d73c0d87272f6cdc05a0259649d7b2d71a88231257add330ea1</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>miopenConvolutionBwdDataAlgoImplicitGEMM</name>
      <anchorfile>group__convolutions.html</anchorfile>
      <anchor>gga774e44db42d175d73c0d87272f6cdc05af68c8086106d6dd9c70be60e519e4a0e</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumeration">
      <type></type>
      <name>miopenConvAlgorithm_t</name>
      <anchorfile>group__convolutions.html</anchorfile>
      <anchor>ga3ba938002b32a963925c7cfce51ce15a</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>miopenConvolutionAlgoGEMM</name>
      <anchorfile>group__convolutions.html</anchorfile>
      <anchor>gga3ba938002b32a963925c7cfce51ce15aafbc6bee0271b18b1c38a47b6bfc71490</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>miopenConvolutionAlgoDirect</name>
      <anchorfile>group__convolutions.html</anchorfile>
      <anchor>gga3ba938002b32a963925c7cfce51ce15aa4ed1617fee46c3c345707f4111b42155</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>miopenConvolutionAlgoFFT</name>
      <anchorfile>group__convolutions.html</anchorfile>
      <anchor>gga3ba938002b32a963925c7cfce51ce15aa9e67d70ca65f50b5b2f10c9b60399f68</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>miopenConvolutionAlgoWinograd</name>
      <anchorfile>group__convolutions.html</anchorfile>
      <anchor>gga3ba938002b32a963925c7cfce51ce15aa9b50ef38f49608a9f07658920923308c</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>miopenConvolutionAlgoImplicitGEMM</name>
      <anchorfile>group__convolutions.html</anchorfile>
      <anchor>gga3ba938002b32a963925c7cfce51ce15aaf3f2d5dd07e440e069264469c04c2168</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumeration">
      <type></type>
      <name>miopenFusionDirection_t</name>
      <anchorfile>group___f_u_s_i_o_n.html</anchorfile>
      <anchor>ga774d5d8b0c1ca371d920e78387100858</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>miopenVerticalFusion</name>
      <anchorfile>group___f_u_s_i_o_n.html</anchorfile>
      <anchor>gga774d5d8b0c1ca371d920e78387100858a558bb4e68777056ebba6ee78ae7e0ad8</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>miopenHorizontalFusion</name>
      <anchorfile>group___f_u_s_i_o_n.html</anchorfile>
      <anchor>gga774d5d8b0c1ca371d920e78387100858a54a662450548ccf631bd635eecb1f092</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumeration">
      <type></type>
      <name>miopenRNNMode_t</name>
      <anchorfile>group___r_n_n.html</anchorfile>
      <anchor>ga016f266507f199def908fe39c43d7877</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>miopenRNNRELU</name>
      <anchorfile>group___r_n_n.html</anchorfile>
      <anchor>gga016f266507f199def908fe39c43d7877af714eb36c96ca365b643e7e8417c10cc</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>miopenRNNTANH</name>
      <anchorfile>group___r_n_n.html</anchorfile>
      <anchor>gga016f266507f199def908fe39c43d7877a1d43e2e3151aa1266cc10e8623c0a32b</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>miopenLSTM</name>
      <anchorfile>group___r_n_n.html</anchorfile>
      <anchor>gga016f266507f199def908fe39c43d7877a97804b8e078f16b327e50e5554df970c</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>miopenGRU</name>
      <anchorfile>group___r_n_n.html</anchorfile>
      <anchor>gga016f266507f199def908fe39c43d7877aa13bc340d91e98e610e92b75e5928a66</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumeration">
      <type></type>
      <name>miopenRNNInputMode_t</name>
      <anchorfile>group___r_n_n.html</anchorfile>
      <anchor>ga11808e1b616d9b9d7e6c701986783af7</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>miopenRNNlinear</name>
      <anchorfile>group___r_n_n.html</anchorfile>
      <anchor>gga11808e1b616d9b9d7e6c701986783af7a168f261ee3dc35ea3fe636c644610c2f</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>miopenRNNskip</name>
      <anchorfile>group___r_n_n.html</anchorfile>
      <anchor>gga11808e1b616d9b9d7e6c701986783af7a99c1caff2a69fb37d964fb3692c989da</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumeration">
      <type></type>
      <name>miopenRNNAlgo_t</name>
      <anchorfile>group___r_n_n.html</anchorfile>
      <anchor>ga6bca6bf2c239cb387d99a07cb6b331c4</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>miopenRNNdefault</name>
      <anchorfile>group___r_n_n.html</anchorfile>
      <anchor>gga6bca6bf2c239cb387d99a07cb6b331c4aee4782e7cebfb009314cdd6c695a5b90</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>miopenRNNfundamental</name>
      <anchorfile>group___r_n_n.html</anchorfile>
      <anchor>gga6bca6bf2c239cb387d99a07cb6b331c4a2dfd71a22376cd8b11bd1a1b4fe46996</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumeration">
      <type></type>
      <name>miopenRNNDirectionMode_t</name>
      <anchorfile>group___r_n_n.html</anchorfile>
      <anchor>ga3c7adae8941033d266f1d5e029504c38</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>miopenRNNunidirection</name>
      <anchorfile>group___r_n_n.html</anchorfile>
      <anchor>gga3c7adae8941033d266f1d5e029504c38a78752802fd2c7248fd4fdddbf613264b</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>miopenRNNbidirection</name>
      <anchorfile>group___r_n_n.html</anchorfile>
      <anchor>gga3c7adae8941033d266f1d5e029504c38a2f0f99690655d0df5ca16bd5011908ea</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumeration">
      <type></type>
      <name>miopenRNNBiasMode_t</name>
      <anchorfile>group___r_n_n.html</anchorfile>
      <anchor>ga47b037e570937a567de38e8898a99f37</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>miopenRNNNoBias</name>
      <anchorfile>group___r_n_n.html</anchorfile>
      <anchor>gga47b037e570937a567de38e8898a99f37a2eb8172730ba33866564865fe4e2d7ea</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>miopenRNNwithBias</name>
      <anchorfile>group___r_n_n.html</anchorfile>
      <anchor>gga47b037e570937a567de38e8898a99f37a14fd5be6ddb03ef2d81d27ff8a868d10</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumeration">
      <type></type>
      <name>miopenRNNGEMMalgoMode_t</name>
      <anchorfile>group___r_n_n.html</anchorfile>
      <anchor>gac7f800028b5634cb08aa191fa6ee0d2a</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>miopenRNNAlgoGEMM</name>
      <anchorfile>group___r_n_n.html</anchorfile>
      <anchor>ggac7f800028b5634cb08aa191fa6ee0d2aa5803419df2c12a2ea02b7560a54ebee7</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumeration">
      <type></type>
      <name>miopenRNNPaddingMode_t</name>
      <anchorfile>group___r_n_n.html</anchorfile>
      <anchor>gaeb0b6dbeefb776e9b663c66a247a7121</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>miopenRNNIONotPadded</name>
      <anchorfile>group___r_n_n.html</anchorfile>
      <anchor>ggaeb0b6dbeefb776e9b663c66a247a7121a280a03179097c1c96d3b26f4f25543e2</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>miopenRNNIOWithPadding</name>
      <anchorfile>group___r_n_n.html</anchorfile>
      <anchor>ggaeb0b6dbeefb776e9b663c66a247a7121a0d1f9de9cb101771b9bb572ddfa2f2ef</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumeration">
      <type></type>
      <name>miopenRNNFWDMode_t</name>
      <anchorfile>group___r_n_n.html</anchorfile>
      <anchor>ga9e0d9408f321de068cc30ad5a7de778b</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>miopenRNNTraining</name>
      <anchorfile>group___r_n_n.html</anchorfile>
      <anchor>gga9e0d9408f321de068cc30ad5a7de778ba2a424459293f8f7a74ab45b70a902f4e</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>miopenRNNInference</name>
      <anchorfile>group___r_n_n.html</anchorfile>
      <anchor>gga9e0d9408f321de068cc30ad5a7de778ba2e5ed4c109920976110cdc7c7fd4cefc</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumeration">
      <type></type>
      <name>miopenRNNBaseLayout_t</name>
      <anchorfile>group___r_n_n.html</anchorfile>
      <anchor>ga637e3f078445cce6869966a46e1a486f</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>miopenRNNDataUnknownLayout</name>
      <anchorfile>group___r_n_n.html</anchorfile>
      <anchor>gga637e3f078445cce6869966a46e1a486fae9bb9aaef77070d408758f4d2dbef44d</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>miopenRNNDataSeqMajorNotPadded</name>
      <anchorfile>group___r_n_n.html</anchorfile>
      <anchor>gga637e3f078445cce6869966a46e1a486fa956d8d35f87c4aa06a4f9d5561aef5f1</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>miopenRNNDataSeqMajorPadded</name>
      <anchorfile>group___r_n_n.html</anchorfile>
      <anchor>gga637e3f078445cce6869966a46e1a486fa04fbe3dee060a5d78eb007028468134f</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>miopenRNNDataBatchMajorPadded</name>
      <anchorfile>group___r_n_n.html</anchorfile>
      <anchor>gga637e3f078445cce6869966a46e1a486fad5db52f1c42231b13de635892872c931</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumeration">
      <type></type>
      <name>miopenCTCLossAlgo_t</name>
      <anchorfile>group___loss_function.html</anchorfile>
      <anchor>ga3a791761ce6a39c117116a1f0075b2c6</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>MIOPEN_CTC_LOSS_ALGO_DETERMINISTIC</name>
      <anchorfile>group___loss_function.html</anchorfile>
      <anchor>gga3a791761ce6a39c117116a1f0075b2c6ad74fca207ff5f01cc77f0d50efc155a1</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumeration">
      <type></type>
      <name>miopenRNGType_t</name>
      <anchorfile>group__dropout.html</anchorfile>
      <anchor>ga283a437b36e9ed35ce7b80490de4d15d</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>MIOPEN_RNG_PSEUDO_XORWOW</name>
      <anchorfile>group__dropout.html</anchorfile>
      <anchor>gga283a437b36e9ed35ce7b80490de4d15daeda0fbe383a397b303a6ab43efa5967e</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumeration">
      <type></type>
      <name>miopenProblemDirection_t</name>
      <anchorfile>group__find2.html</anchorfile>
      <anchor>gab7565f4a33ed5b4f7fa1793a7dad6337</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>miopenProblemDirectionForward</name>
      <anchorfile>group__find2.html</anchorfile>
      <anchor>ggab7565f4a33ed5b4f7fa1793a7dad6337abc2dbfdc4ef1b83119c3777e7e80de44</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>miopenProblemDirectionBackward</name>
      <anchorfile>group__find2.html</anchorfile>
      <anchor>ggab7565f4a33ed5b4f7fa1793a7dad6337af99443bbae30b51588521c921a858f99</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>miopenProblemDirectionBackwardWeights</name>
      <anchorfile>group__find2.html</anchorfile>
      <anchor>ggab7565f4a33ed5b4f7fa1793a7dad6337a7c23676cb2177e581995e740475afd79</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumeration">
      <type></type>
      <name>miopenTensorArgumentId_t</name>
      <anchorfile>group__find2.html</anchorfile>
      <anchor>ga9aadaf9e83bdc5303cfb58955514502c</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>miopenTensorArgumentIdInvalid</name>
      <anchorfile>group__find2.html</anchorfile>
      <anchor>gga9aadaf9e83bdc5303cfb58955514502cac707682d5986bbade17817928e00d06f</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>miopenTensorConvolutionX</name>
      <anchorfile>group__find2.html</anchorfile>
      <anchor>gga9aadaf9e83bdc5303cfb58955514502ca2fc5c7f9a98eb6976f6d38d7db896db2</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>miopenTensorConvolutionW</name>
      <anchorfile>group__find2.html</anchorfile>
      <anchor>gga9aadaf9e83bdc5303cfb58955514502cad407972fb41ab847593d4353388dce22</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>miopenTensorConvolutionY</name>
      <anchorfile>group__find2.html</anchorfile>
      <anchor>gga9aadaf9e83bdc5303cfb58955514502ca9d50f1debc571d38ed1709912c9c5774</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>miopenTensorActivationX</name>
      <anchorfile>group__find2.html</anchorfile>
      <anchor>gga9aadaf9e83bdc5303cfb58955514502ca6c6f3d3a9c2c618da7b1c43fa33f67f0</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>miopenTensorActivationY</name>
      <anchorfile>group__find2.html</anchorfile>
      <anchor>gga9aadaf9e83bdc5303cfb58955514502caf5eab1e565bf6f3d30f425e9ca34337f</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>miopenTensorActivationDX</name>
      <anchorfile>group__find2.html</anchorfile>
      <anchor>gga9aadaf9e83bdc5303cfb58955514502ca60c93134ee0f45d7b77e92f214a93553</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>miopenTensorActivationDY</name>
      <anchorfile>group__find2.html</anchorfile>
      <anchor>gga9aadaf9e83bdc5303cfb58955514502ca202338b34064b12cd5750268a562df7e</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>miopenTensorBiasX</name>
      <anchorfile>group__find2.html</anchorfile>
      <anchor>gga9aadaf9e83bdc5303cfb58955514502cafa54dfab241618980f8a69d3b21b6e0b</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>miopenTensorBiasY</name>
      <anchorfile>group__find2.html</anchorfile>
      <anchor>gga9aadaf9e83bdc5303cfb58955514502cade8d8f0207aa2246f2b7f4ca2434c74f</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>miopenTensorBias</name>
      <anchorfile>group__find2.html</anchorfile>
      <anchor>gga9aadaf9e83bdc5303cfb58955514502caf36be3d67213320a22999ed32c62a90a</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumeration">
      <type></type>
      <name>miopenFindResultsOrder_t</name>
      <anchorfile>group__find2.html</anchorfile>
      <anchor>ga10ba204b05e13c25e81b70abd6b3cd69</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>miopenFindResultsOrderByTime</name>
      <anchorfile>group__find2.html</anchorfile>
      <anchor>gga10ba204b05e13c25e81b70abd6b3cd69aed134126adf8e75b11f27bd485869ade</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>miopenFindResultsOrderByWorkspaceSize</name>
      <anchorfile>group__find2.html</anchorfile>
      <anchor>gga10ba204b05e13c25e81b70abd6b3cd69a165b3ee97cc1daa65fbdb22fdcb2a81f</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumeration">
      <type></type>
      <name>miopenSumNanPropagation_t</name>
      <anchorfile>group__sum.html</anchorfile>
      <anchor>ga9bc32feb2d65228d0bd5d30f8a1e44d2</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>MIOPEN_SUM_NOT_PROPAGATE_NAN</name>
      <anchorfile>miopen_8h.html</anchorfile>
      <anchor>ga9bc32feb2d65228d0bd5d30f8a1e44d2a035c8debf2781021fab9377bc926de23</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>MIOPEN_SUM_PROPAGATE_NAN</name>
      <anchorfile>miopen_8h.html</anchorfile>
      <anchor>ga9bc32feb2d65228d0bd5d30f8a1e44d2ad8fd8eb57469847c5d3768e00fe9cc72</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>MIOPEN_DECLARE_OBJECT</name>
      <anchorfile>group__handle.html</anchorfile>
      <anchor>gaaf9a62fe06372c918be22db25cf13007</anchor>
      <arglist>(miopenHandle)</arglist>
    </member>
    <member kind="function">
      <type>const char *</type>
      <name>miopenGetErrorString</name>
      <anchorfile>group__handle.html</anchorfile>
      <anchor>gac6c00a7bd50c44b815976c276ae4d9b4</anchor>
      <arglist>(miopenStatus_t error)</arglist>
    </member>
    <member kind="function">
      <type>miopenStatus_t</type>
      <name>miopenGetVersion</name>
      <anchorfile>group__handle.html</anchorfile>
      <anchor>ga6e4d06e38316d75e5d95cb6fde5c7c70</anchor>
      <arglist>(size_t *major, size_t *minor, size_t *patch)</arglist>
    </member>
    <member kind="function">
      <type>miopenStatus_t</type>
      <name>miopenCreate</name>
      <anchorfile>group__handle.html</anchorfile>
      <anchor>gad7924dd946f447575547e0e1bddb2fbe</anchor>
      <arglist>(miopenHandle_t *handle)</arglist>
    </member>
    <member kind="function">
      <type>miopenStatus_t</type>
      <name>miopenCreateWithStream</name>
      <anchorfile>group__handle.html</anchorfile>
      <anchor>ga104432242babf6a4c66b09a43e7081d4</anchor>
      <arglist>(miopenHandle_t *handle, miopenAcceleratorQueue_t stream)</arglist>
    </member>
    <member kind="function">
      <type>miopenStatus_t</type>
      <name>miopenDestroy</name>
      <anchorfile>group__handle.html</anchorfile>
      <anchor>ga20296fd22692cbaace8ad86a0a08b869</anchor>
      <arglist>(miopenHandle_t handle)</arglist>
    </member>
    <member kind="function">
      <type>miopenStatus_t</type>
      <name>miopenSetStream</name>
      <anchorfile>group__handle.html</anchorfile>
      <anchor>gadd90259644bc8edc5cb42070a66ed651</anchor>
      <arglist>(miopenHandle_t handle, miopenAcceleratorQueue_t streamID)</arglist>
    </member>
    <member kind="function">
      <type>miopenStatus_t</type>
      <name>miopenGetStream</name>
      <anchorfile>group__handle.html</anchorfile>
      <anchor>ga64e9eb389d9c8e8793908052dffbf138</anchor>
      <arglist>(miopenHandle_t handle, miopenAcceleratorQueue_t *streamID)</arglist>
    </member>
    <member kind="function">
      <type>miopenStatus_t</type>
      <name>miopenSetAllocator</name>
      <anchorfile>group__handle.html</anchorfile>
      <anchor>ga7e5ef2b84c12704b9ad9daf551d7bd31</anchor>
      <arglist>(miopenHandle_t handle, miopenAllocatorFunction allocator, miopenDeallocatorFunction deallocator, void *allocatorContext)</arglist>
    </member>
    <member kind="function">
      <type>miopenStatus_t</type>
      <name>miopenGetKernelTime</name>
      <anchorfile>group__handle.html</anchorfile>
      <anchor>gada439cdf3dac26d2e054f75158993fac</anchor>
      <arglist>(miopenHandle_t handle, float *time)</arglist>
    </member>
    <member kind="function">
      <type>miopenStatus_t</type>
      <name>miopenEnableProfiling</name>
      <anchorfile>group__handle.html</anchorfile>
      <anchor>ga6873d2a57e63cd81a682e3c62900e813</anchor>
      <arglist>(miopenHandle_t handle, bool enable)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>MIOPEN_DECLARE_OBJECT</name>
      <anchorfile>miopen_8h.html</anchorfile>
      <anchor>a3f63d58e4f71379f2e72a3c5f188fc98</anchor>
      <arglist>(miopenFusionOpDescriptor)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>MIOPEN_DECLARE_OBJECT</name>
      <anchorfile>group__tensor.html</anchorfile>
      <anchor>gaa709f2b37eaf01dc20d0a8c55b9dd91b</anchor>
      <arglist>(miopenTensorDescriptor)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>MIOPEN_DECLARE_OBJECT</name>
      <anchorfile>group__tensor.html</anchorfile>
      <anchor>ga4a71ec0b8e2e7064ccb76be40ce9b7dc</anchor>
      <arglist>(miopenSeqTensorDescriptor)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>MIOPEN_DECLARE_OBJECT</name>
      <anchorfile>group__convolutions.html</anchorfile>
      <anchor>ga10b4762521ca884d7c93cfe8634b38cb</anchor>
      <arglist>(miopenConvolutionDescriptor)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>MIOPEN_DECLARE_OBJECT</name>
      <anchorfile>group__pooling.html</anchorfile>
      <anchor>gae90132c94469bb7bfbca5498309fe0f8</anchor>
      <arglist>(miopenPoolingDescriptor)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>MIOPEN_DECLARE_OBJECT</name>
      <anchorfile>group___l_r_n.html</anchorfile>
      <anchor>gaaa30a58b289fbef587968001697c915a</anchor>
      <arglist>(miopenLRNDescriptor)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>MIOPEN_DECLARE_OBJECT</name>
      <anchorfile>group__activation.html</anchorfile>
      <anchor>ga9f091c54e4e21e6ae53ab058be2d658f</anchor>
      <arglist>(miopenActivationDescriptor)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>MIOPEN_DECLARE_OBJECT</name>
      <anchorfile>group___r_n_n.html</anchorfile>
      <anchor>ga781cb4cafc3e631e189a0ec014a2729f</anchor>
      <arglist>(miopenRNNDescriptor)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>MIOPEN_DECLARE_OBJECT</name>
      <anchorfile>group___loss_function.html</anchorfile>
      <anchor>ga5060d9edff6010a4a0e9720659a897fd</anchor>
      <arglist>(miopenCTCLossDescriptor)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>MIOPEN_DECLARE_OBJECT</name>
      <anchorfile>miopen_8h.html</anchorfile>
      <anchor>af977aad2a1e17db8fdc7d43eabee4bea</anchor>
      <arglist>(miopenDropoutDescriptor)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>MIOPEN_DECLARE_OBJECT</name>
      <anchorfile>group___tensor_reduce.html</anchorfile>
      <anchor>gabdbbaf51367b7518e4ebbc5faf62357f</anchor>
      <arglist>(miopenReduceTensorDescriptor)</arglist>
    </member>
    <member kind="function">
      <type>miopenStatus_t</type>
      <name>miopenCreateTensorDescriptor</name>
      <anchorfile>group__tensor.html</anchorfile>
      <anchor>ga57867b185d47a1f10ddc50d642df784b</anchor>
      <arglist>(miopenTensorDescriptor_t *tensorDesc)</arglist>
    </member>
    <member kind="function">
      <type>miopenStatus_t</type>
      <name>miopenSet4dTensorDescriptor</name>
      <anchorfile>group__tensor.html</anchorfile>
      <anchor>ga7a9ed6faa48edc69f6d68cce68eaf8a1</anchor>
      <arglist>(miopenTensorDescriptor_t tensorDesc, miopenDataType_t dataType, int n, int c, int h, int w)</arglist>
    </member>
    <member kind="function">
      <type>miopenStatus_t</type>
      <name>miopenSetNdTensorDescriptorWithLayout</name>
      <anchorfile>group__tensor.html</anchorfile>
      <anchor>ga1ca0a412a2de95e5f1cfb041cc045410</anchor>
      <arglist>(miopenTensorDescriptor_t tensorDesc, miopenDataType_t dataType, miopenTensorLayout_t tensorLayout, const int *lens, int num_lens)</arglist>
    </member>
    <member kind="function">
      <type>miopenStatus_t</type>
      <name>miopenSet4dTensorDescriptorEx</name>
      <anchorfile>group__tensor.html</anchorfile>
      <anchor>ga8539b92c3aa163b90717fca82f7583c9</anchor>
      <arglist>(miopenTensorDescriptor_t tensorDesc, miopenDataType_t dataType, int n, int c, int h, int w, int nStride, int cStride, int hStride, int wStride)</arglist>
    </member>
    <member kind="function">
      <type>miopenStatus_t</type>
      <name>miopenGet4dTensorDescriptor</name>
      <anchorfile>group__tensor.html</anchorfile>
      <anchor>ga422ba168412b4b5ae7df9a27e008870e</anchor>
      <arglist>(miopenTensorDescriptor_t tensorDesc, miopenDataType_t *dataType, int *n, int *c, int *h, int *w, int *nStride, int *cStride, int *hStride, int *wStride)</arglist>
    </member>
    <member kind="function">
      <type>miopenStatus_t</type>
      <name>miopenSetTensorDescriptor</name>
      <anchorfile>group__tensor.html</anchorfile>
      <anchor>gae57f3c7b71aed10691abc2ac2a5f8f27</anchor>
      <arglist>(miopenTensorDescriptor_t tensorDesc, miopenDataType_t dataType, int nbDims, const int *dimsA, const int *stridesA)</arglist>
    </member>
    <member kind="function">
      <type>miopenStatus_t</type>
      <name>miopenSetTensorCastType</name>
      <anchorfile>group__tensor.html</anchorfile>
      <anchor>ga68f03f27b4afafdc7606178307a5b2a5</anchor>
      <arglist>(miopenTensorDescriptor_t tensorDesc, miopenDataType_t cast_type)</arglist>
    </member>
    <member kind="function">
      <type>miopenStatus_t</type>
      <name>miopenGetTensorDescriptorSize</name>
      <anchorfile>group__tensor.html</anchorfile>
      <anchor>gaa6907ccd3f4ebaeef047af1819d5cf05</anchor>
      <arglist>(miopenTensorDescriptor_t tensorDesc, int *size)</arglist>
    </member>
    <member kind="function">
      <type>miopenStatus_t</type>
      <name>miopenGetTensorDescriptor</name>
      <anchorfile>group__tensor.html</anchorfile>
      <anchor>ga0ac6a668ed3b2e580b45c39b2dbf8b8c</anchor>
      <arglist>(miopenTensorDescriptor_t tensorDesc, miopenDataType_t *dataType, int *dimsA, int *stridesA)</arglist>
    </member>
    <member kind="function">
      <type>miopenStatus_t</type>
      <name>miopenDestroyTensorDescriptor</name>
      <anchorfile>group__tensor.html</anchorfile>
      <anchor>gaab76aa1181416bea57840e67cdbe1934</anchor>
      <arglist>(miopenTensorDescriptor_t tensorDesc)</arglist>
    </member>
    <member kind="function">
      <type>miopenStatus_t</type>
      <name>miopenCreateSeqTensorDescriptor</name>
      <anchorfile>group__tensor.html</anchorfile>
      <anchor>ga924b379598666fd19496f8cb597a9eab</anchor>
      <arglist>(miopenSeqTensorDescriptor_t *tensorDesc)</arglist>
    </member>
    <member kind="function">
      <type>miopenStatus_t</type>
      <name>miopenDestroySeqTensorDescriptor</name>
      <anchorfile>group__tensor.html</anchorfile>
      <anchor>ga0a66a800ae274f35c1bd5b9182bc5e33</anchor>
      <arglist>(miopenSeqTensorDescriptor_t tensorDesc)</arglist>
    </member>
    <member kind="function">
      <type>miopenStatus_t</type>
      <name>miopenOpTensor</name>
      <anchorfile>group__tensor.html</anchorfile>
      <anchor>ga35d61860e1413ff6023b391fff70b7c0</anchor>
      <arglist>(miopenHandle_t handle, miopenTensorOp_t tensorOp, const void *alpha1, const miopenTensorDescriptor_t aDesc, const void *A, const void *alpha2, const miopenTensorDescriptor_t bDesc, const void *B, const void *beta, const miopenTensorDescriptor_t cDesc, void *C)</arglist>
    </member>
    <member kind="function">
      <type>miopenStatus_t</type>
      <name>miopenSetTensor</name>
      <anchorfile>group__tensor.html</anchorfile>
      <anchor>ga24fd91d999f4b4479b187ce20bcbb930</anchor>
      <arglist>(miopenHandle_t handle, const miopenTensorDescriptor_t yDesc, void *y, const void *alpha)</arglist>
    </member>
    <member kind="function">
      <type>miopenStatus_t</type>
      <name>miopenScaleTensor</name>
      <anchorfile>group__tensor.html</anchorfile>
      <anchor>ga5e1f5d98a1c4499c3209cb4ea9d01e12</anchor>
      <arglist>(miopenHandle_t handle, const miopenTensorDescriptor_t yDesc, void *y, const void *alpha)</arglist>
    </member>
    <member kind="function">
      <type>miopenStatus_t</type>
      <name>miopenGetTensorNumBytes</name>
      <anchorfile>group__tensor.html</anchorfile>
      <anchor>ga3727427906d20e31009071ff4d058357</anchor>
      <arglist>(miopenTensorDescriptor_t tensorDesc, size_t *numBytes)</arglist>
    </member>
    <member kind="function">
      <type>miopenStatus_t</type>
      <name>miopenTransformTensor</name>
      <anchorfile>group__tensor.html</anchorfile>
      <anchor>ga49a729b5c718cff326e57fca6397399c</anchor>
      <arglist>(miopenHandle_t handle, const void *alpha, const miopenTensorDescriptor_t xDesc, const void *x, const void *beta, const miopenTensorDescriptor_t yDesc, void *y)</arglist>
    </member>
    <member kind="function">
      <type>miopenStatus_t</type>
      <name>miopenCreateConvolutionDescriptor</name>
      <anchorfile>group__convolutions.html</anchorfile>
      <anchor>ga6a31011f7c0719726a73d8f5bea388dc</anchor>
      <arglist>(miopenConvolutionDescriptor_t *convDesc)</arglist>
    </member>
    <member kind="function">
      <type>miopenStatus_t</type>
      <name>miopenInitConvolutionDescriptor</name>
      <anchorfile>group__convolutions.html</anchorfile>
      <anchor>ga37d3fbee7a7cd36ecb22d9ab23c80ce3</anchor>
      <arglist>(miopenConvolutionDescriptor_t convDesc, miopenConvolutionMode_t c_mode, int pad_h, int pad_w, int stride_h, int stride_w, int dilation_h, int dilation_w)</arglist>
    </member>
    <member kind="function">
      <type>miopenStatus_t</type>
      <name>miopenInitConvolutionNdDescriptor</name>
      <anchorfile>group__convolutions.html</anchorfile>
      <anchor>ga06f1ca4633a112373f4d353ed819bf10</anchor>
      <arglist>(miopenConvolutionDescriptor_t convDesc, int spatialDim, const int *padA, const int *strideA, const int *dilationA, miopenConvolutionMode_t c_mode)</arglist>
    </member>
    <member kind="function">
      <type>miopenStatus_t</type>
      <name>miopenGetConvolutionSpatialDim</name>
      <anchorfile>group__convolutions.html</anchorfile>
      <anchor>gab9c592d2e21e2841fb4e120ebd46a2d1</anchor>
      <arglist>(miopenConvolutionDescriptor_t convDesc, int *spatialDim)</arglist>
    </member>
    <member kind="function">
      <type>miopenStatus_t</type>
      <name>miopenGetConvolutionDescriptor</name>
      <anchorfile>group__convolutions.html</anchorfile>
      <anchor>gaf59a6be12730a207c15d068a0b1fe52f</anchor>
      <arglist>(miopenConvolutionDescriptor_t convDesc, miopenConvolutionMode_t *c_mode, int *pad_h, int *pad_w, int *stride_h, int *stride_w, int *dilation_h, int *dilation_w)</arglist>
    </member>
    <member kind="function">
      <type>miopenStatus_t</type>
      <name>miopenGetConvolutionNdDescriptor</name>
      <anchorfile>group__convolutions.html</anchorfile>
      <anchor>ga7288233f65445ca372a3d86c75449294</anchor>
      <arglist>(miopenConvolutionDescriptor_t convDesc, int requestedSpatialDim, int *spatialDim, int *padA, int *strideA, int *dilationA, miopenConvolutionMode_t *c_mode)</arglist>
    </member>
    <member kind="function">
      <type>miopenStatus_t</type>
      <name>miopenGetConvolutionGroupCount</name>
      <anchorfile>group__convolutions.html</anchorfile>
      <anchor>ga245126fedf3a5c7abdd9cf6dcb959692</anchor>
      <arglist>(miopenConvolutionDescriptor_t convDesc, int *groupCount)</arglist>
    </member>
    <member kind="function">
      <type>miopenStatus_t</type>
      <name>miopenSetConvolutionGroupCount</name>
      <anchorfile>group__convolutions.html</anchorfile>
      <anchor>gad1bdda28a9f5a4a8ea9b718681ac72c2</anchor>
      <arglist>(miopenConvolutionDescriptor_t convDesc, int groupCount)</arglist>
    </member>
    <member kind="function">
      <type>miopenStatus_t</type>
      <name>miopenSetTransposeConvOutputPadding</name>
      <anchorfile>group__convolutions.html</anchorfile>
      <anchor>gab17d87360f1931c8dc01baea31cfe412</anchor>
      <arglist>(miopenConvolutionDescriptor_t convDesc, int adj_h, int adj_w)</arglist>
    </member>
    <member kind="function">
      <type>miopenStatus_t</type>
      <name>miopenSetTransposeConvNdOutputPadding</name>
      <anchorfile>group__convolutions.html</anchorfile>
      <anchor>gaad7d8adb6d907646ba23de7e506c5e5b</anchor>
      <arglist>(miopenConvolutionDescriptor_t convDesc, int spatialDim, const int *adjA)</arglist>
    </member>
    <member kind="function">
      <type>miopenStatus_t</type>
      <name>miopenGetConvolutionForwardOutputDim</name>
      <anchorfile>group__convolutions.html</anchorfile>
      <anchor>ga5aae8bdb57c4b48263cdeba2f9f76ef0</anchor>
      <arglist>(miopenConvolutionDescriptor_t convDesc, const miopenTensorDescriptor_t inputTensorDesc, const miopenTensorDescriptor_t filterDesc, int *n, int *c, int *h, int *w)</arglist>
    </member>
    <member kind="function">
      <type>miopenStatus_t</type>
      <name>miopenGetConvolutionNdForwardOutputDim</name>
      <anchorfile>group__convolutions.html</anchorfile>
      <anchor>ga4b71519741fb242c14b8e92f104301ee</anchor>
      <arglist>(miopenConvolutionDescriptor_t convDesc, const miopenTensorDescriptor_t inputTensorDesc, const miopenTensorDescriptor_t filterDesc, int *nDim, int *outputTensorDimA)</arglist>
    </member>
    <member kind="function">
      <type>miopenStatus_t</type>
      <name>miopenDestroyConvolutionDescriptor</name>
      <anchorfile>group__convolutions.html</anchorfile>
      <anchor>gacd21e57581808b98458dfa93c41a4ce3</anchor>
      <arglist>(miopenConvolutionDescriptor_t convDesc)</arglist>
    </member>
    <member kind="function">
      <type>miopenStatus_t</type>
      <name>miopenSetConvolutionAttribute</name>
      <anchorfile>group__convolutions.html</anchorfile>
      <anchor>ga92f38ddd274388a05d77001dac71e7c0</anchor>
      <arglist>(miopenConvolutionDescriptor_t convDesc, const miopenConvolutionAttrib_t attr, int value)</arglist>
    </member>
    <member kind="function">
      <type>miopenStatus_t</type>
      <name>miopenGetConvolutionAttribute</name>
      <anchorfile>group__convolutions.html</anchorfile>
      <anchor>ga41c95d7e368391df4e63539c88c53047</anchor>
      <arglist>(miopenConvolutionDescriptor_t convDesc, const miopenConvolutionAttrib_t attr, int *value)</arglist>
    </member>
    <member kind="function">
      <type>miopenStatus_t</type>
      <name>miopenConvolutionForwardGetSolutionCount</name>
      <anchorfile>group__convolutions.html</anchorfile>
      <anchor>gaf9dbf5fdad1bc5faf1a9184ab2099439</anchor>
      <arglist>(miopenHandle_t handle, const miopenTensorDescriptor_t wDesc, const miopenTensorDescriptor_t xDesc, const miopenConvolutionDescriptor_t convDesc, const miopenTensorDescriptor_t yDesc, size_t *solutionCount)</arglist>
    </member>
    <member kind="function">
      <type>miopenStatus_t</type>
      <name>miopenConvolutionForwardGetSolution</name>
      <anchorfile>group__convolutions.html</anchorfile>
      <anchor>gaf0c92cab22c81d632d596d30757dcba5</anchor>
      <arglist>(miopenHandle_t handle, const miopenTensorDescriptor_t wDesc, const miopenTensorDescriptor_t xDesc, const miopenConvolutionDescriptor_t convDesc, const miopenTensorDescriptor_t yDesc, const size_t maxSolutionCount, size_t *solutionCount, miopenConvSolution_t *solutions)</arglist>
    </member>
    <member kind="function">
      <type>miopenStatus_t</type>
      <name>miopenConvolutionForwardGetSolutionWorkspaceSize</name>
      <anchorfile>group__convolutions.html</anchorfile>
      <anchor>ga1960157add7bdd508dc345ea98801912</anchor>
      <arglist>(miopenHandle_t handle, const miopenTensorDescriptor_t wDesc, const miopenTensorDescriptor_t xDesc, const miopenConvolutionDescriptor_t convDesc, const miopenTensorDescriptor_t yDesc, const uint64_t solution_id, size_t *workSpaceSize)</arglist>
    </member>
    <member kind="function">
      <type>miopenStatus_t</type>
      <name>miopenConvolutionForwardCompileSolution</name>
      <anchorfile>group__convolutions.html</anchorfile>
      <anchor>gabacb81f250e154b92c628defe53a1a6b</anchor>
      <arglist>(miopenHandle_t handle, const miopenTensorDescriptor_t wDesc, const miopenTensorDescriptor_t xDesc, const miopenConvolutionDescriptor_t convDesc, const miopenTensorDescriptor_t yDesc, const uint64_t solution_id)</arglist>
    </member>
    <member kind="function">
      <type>miopenStatus_t</type>
      <name>miopenConvolutionForwardImmediate</name>
      <anchorfile>group__convolutions.html</anchorfile>
      <anchor>ga14fe027d4bb473a448eb26fe79e61002</anchor>
      <arglist>(miopenHandle_t handle, const miopenTensorDescriptor_t wDesc, const void *w, const miopenTensorDescriptor_t xDesc, const void *x, const miopenConvolutionDescriptor_t convDesc, const miopenTensorDescriptor_t yDesc, void *y, void *workSpace, size_t workSpaceSize, const uint64_t solution_id)</arglist>
    </member>
    <member kind="function">
      <type>miopenStatus_t</type>
      <name>miopenConvolutionBackwardDataGetSolutionCount</name>
      <anchorfile>group__convolutions.html</anchorfile>
      <anchor>gac245152e4fe078d089f2ac9247aed048</anchor>
      <arglist>(miopenHandle_t handle, const miopenTensorDescriptor_t dyDesc, const miopenTensorDescriptor_t wDesc, const miopenConvolutionDescriptor_t convDesc, const miopenTensorDescriptor_t dxDesc, size_t *solutionCount)</arglist>
    </member>
    <member kind="function">
      <type>miopenStatus_t</type>
      <name>miopenConvolutionBackwardDataGetSolution</name>
      <anchorfile>group__convolutions.html</anchorfile>
      <anchor>ga8c7f4bfae33e8d489c75c5e3717321f8</anchor>
      <arglist>(miopenHandle_t handle, const miopenTensorDescriptor_t dyDesc, const miopenTensorDescriptor_t wDesc, const miopenConvolutionDescriptor_t convDesc, const miopenTensorDescriptor_t dxDesc, const size_t maxSolutionCount, size_t *solutionCount, miopenConvSolution_t *solutions)</arglist>
    </member>
    <member kind="function">
      <type>miopenStatus_t</type>
      <name>miopenConvolutionBackwardDataGetSolutionWorkspaceSize</name>
      <anchorfile>group__convolutions.html</anchorfile>
      <anchor>gafdf6485c7f4ca08822feb918f5078f09</anchor>
      <arglist>(miopenHandle_t handle, const miopenTensorDescriptor_t dyDesc, const miopenTensorDescriptor_t wDesc, const miopenConvolutionDescriptor_t convDesc, const miopenTensorDescriptor_t dxDesc, const uint64_t solution_id, size_t *workSpaceSize)</arglist>
    </member>
    <member kind="function">
      <type>miopenStatus_t</type>
      <name>miopenConvolutionBackwardDataCompileSolution</name>
      <anchorfile>group__convolutions.html</anchorfile>
      <anchor>ga16cd48938728e81468a1e80ccd07822f</anchor>
      <arglist>(miopenHandle_t handle, const miopenTensorDescriptor_t dyDesc, const miopenTensorDescriptor_t wDesc, const miopenConvolutionDescriptor_t convDesc, const miopenTensorDescriptor_t dxDesc, const uint64_t solution_id)</arglist>
    </member>
    <member kind="function">
      <type>miopenStatus_t</type>
      <name>miopenConvolutionBackwardDataImmediate</name>
      <anchorfile>group__convolutions.html</anchorfile>
      <anchor>gaacefbf47cf57a6ade413ae23bbf5cabc</anchor>
      <arglist>(miopenHandle_t handle, const miopenTensorDescriptor_t dyDesc, const void *dy, const miopenTensorDescriptor_t wDesc, const void *w, const miopenConvolutionDescriptor_t convDesc, const miopenTensorDescriptor_t dxDesc, void *dx, void *workSpace, size_t workSpaceSize, const uint64_t solution_id)</arglist>
    </member>
    <member kind="function">
      <type>miopenStatus_t</type>
      <name>miopenConvolutionBackwardWeightsGetSolutionCount</name>
      <anchorfile>group__convolutions.html</anchorfile>
      <anchor>gacf0d3225d92394cf8aad48da3902b64c</anchor>
      <arglist>(miopenHandle_t handle, const miopenTensorDescriptor_t dyDesc, const miopenTensorDescriptor_t xDesc, const miopenConvolutionDescriptor_t convDesc, const miopenTensorDescriptor_t dwDesc, size_t *solutionCount)</arglist>
    </member>
    <member kind="function">
      <type>miopenStatus_t</type>
      <name>miopenConvolutionBackwardWeightsGetSolution</name>
      <anchorfile>group__convolutions.html</anchorfile>
      <anchor>ga720035aea137cd8b2fb5ea22afd08ea4</anchor>
      <arglist>(miopenHandle_t handle, const miopenTensorDescriptor_t dyDesc, const miopenTensorDescriptor_t xDesc, const miopenConvolutionDescriptor_t convDesc, const miopenTensorDescriptor_t dwDesc, const size_t maxSolutionCount, size_t *solutionCount, miopenConvSolution_t *solutions)</arglist>
    </member>
    <member kind="function">
      <type>miopenStatus_t</type>
      <name>miopenConvolutionBackwardWeightsGetSolutionWorkspaceSize</name>
      <anchorfile>group__convolutions.html</anchorfile>
      <anchor>gaecbba471182df8fa973a95d5dedd7259</anchor>
      <arglist>(miopenHandle_t handle, const miopenTensorDescriptor_t dyDesc, const miopenTensorDescriptor_t xDesc, const miopenConvolutionDescriptor_t convDesc, const miopenTensorDescriptor_t dwDesc, const uint64_t solution_id, size_t *workSpaceSize)</arglist>
    </member>
    <member kind="function">
      <type>miopenStatus_t</type>
      <name>miopenConvolutionBackwardWeightsCompileSolution</name>
      <anchorfile>group__convolutions.html</anchorfile>
      <anchor>ga4df568848733b9d49a416813df1249d7</anchor>
      <arglist>(miopenHandle_t handle, const miopenTensorDescriptor_t dyDesc, const miopenTensorDescriptor_t xDesc, const miopenConvolutionDescriptor_t convDesc, const miopenTensorDescriptor_t dwDesc, const uint64_t solution_id)</arglist>
    </member>
    <member kind="function">
      <type>miopenStatus_t</type>
      <name>miopenConvolutionBackwardWeightsImmediate</name>
      <anchorfile>group__convolutions.html</anchorfile>
      <anchor>ga816e7586b740e8ad652aac31f9efe9da</anchor>
      <arglist>(miopenHandle_t handle, const miopenTensorDescriptor_t dyDesc, const void *dy, const miopenTensorDescriptor_t xDesc, const void *x, const miopenConvolutionDescriptor_t convDesc, const miopenTensorDescriptor_t dwDesc, void *dw, void *workSpace, size_t workSpaceSize, const uint64_t solution_id)</arglist>
    </member>
    <member kind="function">
      <type>miopenStatus_t</type>
      <name>miopenConvolutionForwardGetWorkSpaceSize</name>
      <anchorfile>group__convolutions.html</anchorfile>
      <anchor>ga625028c7ac3e3aeccbaea277096cca08</anchor>
      <arglist>(miopenHandle_t handle, const miopenTensorDescriptor_t wDesc, const miopenTensorDescriptor_t xDesc, const miopenConvolutionDescriptor_t convDesc, const miopenTensorDescriptor_t yDesc, size_t *workSpaceSize)</arglist>
    </member>
    <member kind="function">
      <type>miopenStatus_t</type>
      <name>miopenFindConvolutionForwardAlgorithm</name>
      <anchorfile>group__convolutions.html</anchorfile>
      <anchor>gaca2f3b99b04393beebaee41e3d990f68</anchor>
      <arglist>(miopenHandle_t handle, const miopenTensorDescriptor_t xDesc, const void *x, const miopenTensorDescriptor_t wDesc, const void *w, const miopenConvolutionDescriptor_t convDesc, const miopenTensorDescriptor_t yDesc, void *y, const int requestAlgoCount, int *returnedAlgoCount, miopenConvAlgoPerf_t *perfResults, void *workSpace, size_t workSpaceSize, bool exhaustiveSearch)</arglist>
    </member>
    <member kind="function">
      <type>miopenStatus_t</type>
      <name>miopenConvolutionForward</name>
      <anchorfile>group__convolutions.html</anchorfile>
      <anchor>ga1de4638ae8f3330f3c777f91a67889ea</anchor>
      <arglist>(miopenHandle_t handle, const void *alpha, const miopenTensorDescriptor_t xDesc, const void *x, const miopenTensorDescriptor_t wDesc, const void *w, const miopenConvolutionDescriptor_t convDesc, miopenConvFwdAlgorithm_t algo, const void *beta, const miopenTensorDescriptor_t yDesc, void *y, void *workSpace, size_t workSpaceSize)</arglist>
    </member>
    <member kind="function">
      <type>miopenStatus_t</type>
      <name>miopenConvolutionForwardBias</name>
      <anchorfile>group__convolutions.html</anchorfile>
      <anchor>ga8e445590bd57cd0038324943791a9b4a</anchor>
      <arglist>(miopenHandle_t handle, const void *alpha, const miopenTensorDescriptor_t bDesc, const void *b, const void *beta, const miopenTensorDescriptor_t yDesc, void *y)</arglist>
    </member>
    <member kind="function">
      <type>miopenStatus_t</type>
      <name>miopenConvolutionBackwardDataGetWorkSpaceSize</name>
      <anchorfile>group__convolutions.html</anchorfile>
      <anchor>gac94e84d34972a135648c94b89d92f9cf</anchor>
      <arglist>(miopenHandle_t handle, const miopenTensorDescriptor_t dyDesc, const miopenTensorDescriptor_t wDesc, const miopenConvolutionDescriptor_t convDesc, const miopenTensorDescriptor_t dxDesc, size_t *workSpaceSize)</arglist>
    </member>
    <member kind="function">
      <type>miopenStatus_t</type>
      <name>miopenFindConvolutionBackwardDataAlgorithm</name>
      <anchorfile>group__convolutions.html</anchorfile>
      <anchor>ga87840a99d86f888f4f3356adf7a15df0</anchor>
      <arglist>(miopenHandle_t handle, const miopenTensorDescriptor_t dyDesc, const void *dy, const miopenTensorDescriptor_t wDesc, const void *w, const miopenConvolutionDescriptor_t convDesc, const miopenTensorDescriptor_t dxDesc, void *dx, const int requestAlgoCount, int *returnedAlgoCount, miopenConvAlgoPerf_t *perfResults, void *workSpace, size_t workSpaceSize, bool exhaustiveSearch)</arglist>
    </member>
    <member kind="function">
      <type>miopenStatus_t</type>
      <name>miopenConvolutionBackwardData</name>
      <anchorfile>group__convolutions.html</anchorfile>
      <anchor>ga3fb51da4c191c70727c09a1560d38ddd</anchor>
      <arglist>(miopenHandle_t handle, const void *alpha, const miopenTensorDescriptor_t dyDesc, const void *dy, const miopenTensorDescriptor_t wDesc, const void *w, const miopenConvolutionDescriptor_t convDesc, miopenConvBwdDataAlgorithm_t algo, const void *beta, const miopenTensorDescriptor_t dxDesc, void *dx, void *workSpace, size_t workSpaceSize)</arglist>
    </member>
    <member kind="function">
      <type>miopenStatus_t</type>
      <name>miopenConvolutionBackwardWeightsGetWorkSpaceSize</name>
      <anchorfile>group__convolutions.html</anchorfile>
      <anchor>ga7eb4416db9701236648ba2b60d91cc1a</anchor>
      <arglist>(miopenHandle_t handle, const miopenTensorDescriptor_t dyDesc, const miopenTensorDescriptor_t xDesc, const miopenConvolutionDescriptor_t convDesc, const miopenTensorDescriptor_t dwDesc, size_t *workSpaceSize)</arglist>
    </member>
    <member kind="function">
      <type>miopenStatus_t</type>
      <name>miopenFindConvolutionBackwardWeightsAlgorithm</name>
      <anchorfile>group__convolutions.html</anchorfile>
      <anchor>ga57dda8a3c4ecddb988dbba421151e761</anchor>
      <arglist>(miopenHandle_t handle, const miopenTensorDescriptor_t dyDesc, const void *dy, const miopenTensorDescriptor_t xDesc, const void *x, const miopenConvolutionDescriptor_t convDesc, const miopenTensorDescriptor_t dwDesc, void *dw, const int requestAlgoCount, int *returnedAlgoCount, miopenConvAlgoPerf_t *perfResults, void *workSpace, size_t workSpaceSize, bool exhaustiveSearch)</arglist>
    </member>
    <member kind="function">
      <type>miopenStatus_t</type>
      <name>miopenConvolutionBackwardWeights</name>
      <anchorfile>group__convolutions.html</anchorfile>
      <anchor>gac651a5c2fe903191bb6a383b1890ea0d</anchor>
      <arglist>(miopenHandle_t handle, const void *alpha, const miopenTensorDescriptor_t dyDesc, const void *dy, const miopenTensorDescriptor_t xDesc, const void *x, const miopenConvolutionDescriptor_t convDesc, miopenConvBwdWeightsAlgorithm_t algo, const void *beta, const miopenTensorDescriptor_t dwDesc, void *dw, void *workSpace, size_t workSpaceSize)</arglist>
    </member>
    <member kind="function">
      <type>miopenStatus_t</type>
      <name>miopenConvolutionBackwardBias</name>
      <anchorfile>group__convolutions.html</anchorfile>
      <anchor>gafe46a24bd8eba36fe34dbf0162ada0d2</anchor>
      <arglist>(miopenHandle_t handle, const void *alpha, const miopenTensorDescriptor_t dyDesc, const void *dy, const void *beta, const miopenTensorDescriptor_t dbDesc, void *db)</arglist>
    </member>
    <member kind="function">
      <type>miopenStatus_t</type>
      <name>miopenCreatePoolingDescriptor</name>
      <anchorfile>group__pooling.html</anchorfile>
      <anchor>gabd7d9b79e9164e8a3c91855c015cc43d</anchor>
      <arglist>(miopenPoolingDescriptor_t *poolDesc)</arglist>
    </member>
    <member kind="function">
      <type>miopenStatus_t</type>
      <name>miopenSetPoolingIndexType</name>
      <anchorfile>group__pooling.html</anchorfile>
      <anchor>gac31ae1c8976de3929adaf898c033f8e8</anchor>
      <arglist>(miopenPoolingDescriptor_t poolDesc, miopenIndexType_t index_type)</arglist>
    </member>
    <member kind="function">
      <type>miopenStatus_t</type>
      <name>miopenGetPoolingIndexType</name>
      <anchorfile>group__pooling.html</anchorfile>
      <anchor>ga8f2bc026ee75ccac3aaaf18b4f2791dd</anchor>
      <arglist>(miopenPoolingDescriptor_t poolDesc, miopenIndexType_t *index_type)</arglist>
    </member>
    <member kind="function">
      <type>miopenStatus_t</type>
      <name>miopenSetPoolingWorkSpaceIndexMode</name>
      <anchorfile>group__pooling.html</anchorfile>
      <anchor>ga05ef9d8e8b8127e468efe2a4310b180f</anchor>
      <arglist>(miopenPoolingDescriptor_t poolDesc, miopenPoolingWorkspaceIndexMode_t workspace_index)</arglist>
    </member>
    <member kind="function">
      <type>miopenStatus_t</type>
      <name>miopenGetPoolingWorkSpaceIndexMode</name>
      <anchorfile>group__pooling.html</anchorfile>
      <anchor>ga6beeb9aba269f016cfeda70390db77b5</anchor>
      <arglist>(miopenPoolingDescriptor_t poolDesc, miopenPoolingWorkspaceIndexMode_t *workspace_index)</arglist>
    </member>
    <member kind="function">
      <type>miopenStatus_t</type>
      <name>miopenSet2dPoolingDescriptor</name>
      <anchorfile>group__pooling.html</anchorfile>
      <anchor>ga03b3553e6cc0162c9a31f47cf9cdd4f0</anchor>
      <arglist>(miopenPoolingDescriptor_t poolDesc, miopenPoolingMode_t mode, int windowHeight, int windowWidth, int pad_h, int pad_w, int stride_h, int stride_w)</arglist>
    </member>
    <member kind="function">
      <type>miopenStatus_t</type>
      <name>miopenGet2dPoolingDescriptor</name>
      <anchorfile>group__pooling.html</anchorfile>
      <anchor>gad72feef4d7d5e37044b61c221bd1e2a9</anchor>
      <arglist>(const miopenPoolingDescriptor_t poolDesc, miopenPoolingMode_t *mode, int *windowHeight, int *windowWidth, int *pad_h, int *pad_w, int *stride_h, int *stride_w)</arglist>
    </member>
    <member kind="function">
      <type>miopenStatus_t</type>
      <name>miopenGetPoolingForwardOutputDim</name>
      <anchorfile>group__pooling.html</anchorfile>
      <anchor>ga1198df51381b094021aee5b1a1a05e3a</anchor>
      <arglist>(const miopenPoolingDescriptor_t poolDesc, const miopenTensorDescriptor_t tensorDesc, int *n, int *c, int *h, int *w)</arglist>
    </member>
    <member kind="function">
      <type>miopenStatus_t</type>
      <name>miopenSetNdPoolingDescriptor</name>
      <anchorfile>group__pooling.html</anchorfile>
      <anchor>ga2c3fa7681fe3535180eaa89ba48eea3b</anchor>
      <arglist>(miopenPoolingDescriptor_t poolDesc, const miopenPoolingMode_t mode, int nbDims, const int *windowDimA, const int *padA, const int *stridesA)</arglist>
    </member>
    <member kind="function">
      <type>miopenStatus_t</type>
      <name>miopenGetNdPoolingDescriptor</name>
      <anchorfile>group__pooling.html</anchorfile>
      <anchor>gabc760e40557710fe52cafde0cbfdfcf3</anchor>
      <arglist>(const miopenPoolingDescriptor_t poolDesc, int nbDimsRequested, miopenPoolingMode_t *mode, int *nbDims, int *windowDimA, int *padA, int *stridesA)</arglist>
    </member>
    <member kind="function">
      <type>miopenStatus_t</type>
      <name>miopenGetPoolingNdForwardOutputDim</name>
      <anchorfile>group__pooling.html</anchorfile>
      <anchor>gab70ecbdc8d96942b78b0f3ca785114d6</anchor>
      <arglist>(const miopenPoolingDescriptor_t poolDesc, const miopenTensorDescriptor_t tensorDesc, int dims, int *tensorDimArr)</arglist>
    </member>
    <member kind="function">
      <type>miopenStatus_t</type>
      <name>miopenPoolingGetWorkSpaceSize</name>
      <anchorfile>group__pooling.html</anchorfile>
      <anchor>ga23a4bf9e5cf91da0765c2c386b8aaab6</anchor>
      <arglist>(const miopenTensorDescriptor_t yDesc, size_t *workSpaceSize)</arglist>
    </member>
    <member kind="function">
      <type>miopenStatus_t</type>
      <name>miopenPoolingGetWorkSpaceSizeV2</name>
      <anchorfile>group__pooling.html</anchorfile>
      <anchor>ga5a8b1812384cb03b5eb4437950e2f334</anchor>
      <arglist>(const miopenPoolingDescriptor_t poolDesc, const miopenTensorDescriptor_t yDesc, size_t *workSpaceSize)</arglist>
    </member>
    <member kind="function">
      <type>miopenStatus_t</type>
      <name>miopenPoolingForward</name>
      <anchorfile>group__pooling.html</anchorfile>
      <anchor>ga2f64eee5653500719bfd0badb98aad86</anchor>
      <arglist>(miopenHandle_t handle, const miopenPoolingDescriptor_t poolDesc, const void *alpha, const miopenTensorDescriptor_t xDesc, const void *x, const void *beta, const miopenTensorDescriptor_t yDesc, void *y, bool do_backward, void *workSpace, size_t workSpaceSize)</arglist>
    </member>
    <member kind="function">
      <type>miopenStatus_t</type>
      <name>miopenPoolingBackward</name>
      <anchorfile>group__pooling.html</anchorfile>
      <anchor>gaf0f319af071fe15254d800bb3e452f20</anchor>
      <arglist>(miopenHandle_t handle, const miopenPoolingDescriptor_t poolDesc, const void *alpha, const miopenTensorDescriptor_t yDesc, const void *y, const miopenTensorDescriptor_t dyDesc, const void *dy, const miopenTensorDescriptor_t xDesc, const void *x, const void *beta, const miopenTensorDescriptor_t dxDesc, void *dx, void *workSpace)</arglist>
    </member>
    <member kind="function">
      <type>miopenStatus_t</type>
      <name>miopenDestroyPoolingDescriptor</name>
      <anchorfile>group__pooling.html</anchorfile>
      <anchor>gae7ea63b05752da3fba82a6dca1de65b4</anchor>
      <arglist>(miopenPoolingDescriptor_t poolDesc)</arglist>
    </member>
    <member kind="function">
      <type>miopenStatus_t</type>
      <name>miopenCreateLRNDescriptor</name>
      <anchorfile>group___l_r_n.html</anchorfile>
      <anchor>ga41f093f397f886f31fe905e50167cac1</anchor>
      <arglist>(miopenLRNDescriptor_t *lrnDesc)</arglist>
    </member>
    <member kind="function">
      <type>miopenStatus_t</type>
      <name>miopenSetLRNDescriptor</name>
      <anchorfile>group___l_r_n.html</anchorfile>
      <anchor>ga322f5ee2751280378ca6756219052334</anchor>
      <arglist>(const miopenLRNDescriptor_t lrnDesc, miopenLRNMode_t mode, unsigned int lrnN, double lrnAlpha, double lrnBeta, double lrnK)</arglist>
    </member>
    <member kind="function">
      <type>miopenStatus_t</type>
      <name>miopenGetLRNDescriptor</name>
      <anchorfile>group___l_r_n.html</anchorfile>
      <anchor>ga48c74e2a652a14083de6687b812153e2</anchor>
      <arglist>(const miopenLRNDescriptor_t lrnDesc, miopenLRNMode_t *mode, unsigned int *lrnN, double *lrnAlpha, double *lrnBeta, double *lrnK)</arglist>
    </member>
    <member kind="function">
      <type>miopenStatus_t</type>
      <name>miopenLRNGetWorkSpaceSize</name>
      <anchorfile>group___l_r_n.html</anchorfile>
      <anchor>ga9be3e08ec25eaf2b99cf0b8f88711f39</anchor>
      <arglist>(const miopenTensorDescriptor_t yDesc, size_t *workSpaceSize)</arglist>
    </member>
    <member kind="function">
      <type>miopenStatus_t</type>
      <name>miopenLRNForward</name>
      <anchorfile>group___l_r_n.html</anchorfile>
      <anchor>gaf5ec38b9a11b7fa584bf8a635d03c68e</anchor>
      <arglist>(miopenHandle_t handle, const miopenLRNDescriptor_t lrnDesc, const void *alpha, const miopenTensorDescriptor_t xDesc, const void *x, const void *beta, const miopenTensorDescriptor_t yDesc, void *y, bool do_backward, void *workSpace)</arglist>
    </member>
    <member kind="function">
      <type>miopenStatus_t</type>
      <name>miopenLRNBackward</name>
      <anchorfile>group___l_r_n.html</anchorfile>
      <anchor>ga637b624c1a29d5f0b9c5a4bfcee353a5</anchor>
      <arglist>(miopenHandle_t handle, const miopenLRNDescriptor_t lrnDesc, const void *alpha, const miopenTensorDescriptor_t yDesc, const void *y, const miopenTensorDescriptor_t dyDesc, const void *dy, const miopenTensorDescriptor_t xDesc, const void *x, const void *beta, const miopenTensorDescriptor_t dxDesc, void *dx, const void *workSpace)</arglist>
    </member>
    <member kind="function">
      <type>miopenStatus_t</type>
      <name>miopenDestroyLRNDescriptor</name>
      <anchorfile>group___l_r_n.html</anchorfile>
      <anchor>gaf73f4948c1e487621773ea5286cc8843</anchor>
      <arglist>(miopenLRNDescriptor_t lrnDesc)</arglist>
    </member>
    <member kind="function">
      <type>miopenStatus_t</type>
      <name>miopenLayerNormForward</name>
      <anchorfile>group__layernorm.html</anchorfile>
      <anchor>ga167bb1f70a5625e10295132444bab39d</anchor>
      <arglist>(miopenHandle_t handle, miopenNormMode_t mode, const miopenTensorDescriptor_t xDesc, const void *x, const miopenTensorDescriptor_t weightDesc, const void *weight, const miopenTensorDescriptor_t biasDesc, const void *bias, const float epsilon, const int32_t normalized_dim, const miopenTensorDescriptor_t yDesc, void *y, const miopenTensorDescriptor_t meanDesc, void *mean, const miopenTensorDescriptor_t rstdDesc, void *rstd)</arglist>
    </member>
    <member kind="function">
      <type>miopenStatus_t</type>
      <name>miopenCatForward</name>
      <anchorfile>group__cat.html</anchorfile>
      <anchor>ga1d94a26be667c754a8ab5cce29524d29</anchor>
      <arglist>(miopenHandle_t handle, const int32_t xCount, const miopenTensorDescriptor_t *xDescs, const void *const *xs, const miopenTensorDescriptor_t yDesc, void *y, const int32_t dim)</arglist>
    </member>
    <member kind="function">
      <type>miopenStatus_t</type>
      <name>miopenDeriveBNTensorDescriptor</name>
      <anchorfile>group__batchnorm.html</anchorfile>
      <anchor>gaf2aef2cbd792e82b32b305039d6e4662</anchor>
      <arglist>(miopenTensorDescriptor_t derivedBnDesc, const miopenTensorDescriptor_t xDesc, miopenBatchNormMode_t bn_mode)</arglist>
    </member>
    <member kind="function">
      <type>miopenStatus_t</type>
      <name>miopenBatchNormalizationForwardTraining</name>
      <anchorfile>group__batchnorm.html</anchorfile>
      <anchor>ga343969e08d276e480a2fa3b14151f287</anchor>
      <arglist>(miopenHandle_t handle, miopenBatchNormMode_t bn_mode, void *alpha, void *beta, const miopenTensorDescriptor_t xDesc, const void *x, const miopenTensorDescriptor_t yDesc, void *y, const miopenTensorDescriptor_t bnScaleBiasMeanVarDesc, void *bnScale, void *bnBias, double expAvgFactor, void *resultRunningMean, void *resultRunningVariance, double epsilon, void *resultSaveMean, void *resultSaveInvVariance)</arglist>
    </member>
    <member kind="function">
      <type>miopenStatus_t</type>
      <name>miopenBatchNormalizationForwardInference</name>
      <anchorfile>group__batchnorm.html</anchorfile>
      <anchor>ga076386cb1c1bf692f1883c3d1a013a45</anchor>
      <arglist>(miopenHandle_t handle, miopenBatchNormMode_t bn_mode, void *alpha, void *beta, const miopenTensorDescriptor_t xDesc, const void *x, const miopenTensorDescriptor_t yDesc, void *y, const miopenTensorDescriptor_t bnScaleBiasMeanVarDesc, void *bnScale, void *bnBias, void *estimatedMean, void *estimatedVariance, double epsilon)</arglist>
    </member>
    <member kind="function">
      <type>miopenStatus_t</type>
      <name>miopenBatchNormalizationBackward</name>
      <anchorfile>group__batchnorm.html</anchorfile>
      <anchor>gaae2f39675310df613802dcf8cfd446a5</anchor>
      <arglist>(miopenHandle_t handle, miopenBatchNormMode_t bn_mode, const void *alphaDataDiff, const void *betaDataDiff, const void *alphaParamDiff, const void *betaParamDiff, const miopenTensorDescriptor_t xDesc, const void *x, const miopenTensorDescriptor_t dyDesc, const void *dy, const miopenTensorDescriptor_t dxDesc, void *dx, const miopenTensorDescriptor_t bnScaleBiasDiffDesc, const void *bnScale, void *resultBnScaleDiff, void *resultBnBiasDiff, double epsilon, const void *savedMean, const void *savedInvVariance)</arglist>
    </member>
    <member kind="function">
      <type>miopenStatus_t</type>
      <name>miopenCreateActivationDescriptor</name>
      <anchorfile>group__activation.html</anchorfile>
      <anchor>ga92c0d5c8719120d3ade6a83f9c35c4af</anchor>
      <arglist>(miopenActivationDescriptor_t *activDesc)</arglist>
    </member>
    <member kind="function">
      <type>miopenStatus_t</type>
      <name>miopenSetActivationDescriptor</name>
      <anchorfile>group__activation.html</anchorfile>
      <anchor>ga91813317a3b87f4b6aaaa960a2cfc58a</anchor>
      <arglist>(const miopenActivationDescriptor_t activDesc, miopenActivationMode_t mode, double activAlpha, double activBeta, double activGamma)</arglist>
    </member>
    <member kind="function">
      <type>miopenStatus_t</type>
      <name>miopenGetActivationDescriptor</name>
      <anchorfile>group__activation.html</anchorfile>
      <anchor>gac2a4025376e08329662ebb982e037def</anchor>
      <arglist>(const miopenActivationDescriptor_t activDesc, miopenActivationMode_t *mode, double *activAlpha, double *activBeta, double *activGamma)</arglist>
    </member>
    <member kind="function">
      <type>miopenStatus_t</type>
      <name>miopenActivationForward</name>
      <anchorfile>group__activation.html</anchorfile>
      <anchor>ga33971a83fd4a33df97f790421c208d49</anchor>
      <arglist>(miopenHandle_t handle, const miopenActivationDescriptor_t activDesc, const void *alpha, const miopenTensorDescriptor_t xDesc, const void *x, const void *beta, const miopenTensorDescriptor_t yDesc, void *y)</arglist>
    </member>
    <member kind="function">
      <type>miopenStatus_t</type>
      <name>miopenActivationBackward</name>
      <anchorfile>group__activation.html</anchorfile>
      <anchor>ga4f43724d9ab601a14d1355cc3e4ba8ce</anchor>
      <arglist>(miopenHandle_t handle, const miopenActivationDescriptor_t activDesc, const void *alpha, const miopenTensorDescriptor_t yDesc, const void *y, const miopenTensorDescriptor_t dyDesc, const void *dy, const miopenTensorDescriptor_t xDesc, const void *x, const void *beta, const miopenTensorDescriptor_t dxDesc, void *dx)</arglist>
    </member>
    <member kind="function">
      <type>miopenStatus_t</type>
      <name>miopenDestroyActivationDescriptor</name>
      <anchorfile>group__activation.html</anchorfile>
      <anchor>gae281c7cc4e97934b57cbedd6c73c3133</anchor>
      <arglist>(miopenActivationDescriptor_t activDesc)</arglist>
    </member>
    <member kind="function">
      <type>miopenStatus_t</type>
      <name>miopenSoftmaxForward</name>
      <anchorfile>group__softmax.html</anchorfile>
      <anchor>ga3b2ad480ed94ab0f39a3d0e9c2bf1ef8</anchor>
      <arglist>(miopenHandle_t handle, const void *alpha, const miopenTensorDescriptor_t xDesc, const void *x, const void *beta, const miopenTensorDescriptor_t yDesc, void *y)</arglist>
    </member>
    <member kind="function">
      <type>miopenStatus_t</type>
      <name>miopenSoftmaxBackward</name>
      <anchorfile>group__softmax.html</anchorfile>
      <anchor>ga86f410cedb58f1849e507436036d8329</anchor>
      <arglist>(miopenHandle_t handle, const void *alpha, const miopenTensorDescriptor_t yDesc, const void *y, const miopenTensorDescriptor_t dyDesc, const void *dy, const void *beta, const miopenTensorDescriptor_t dxDesc, void *dx)</arglist>
    </member>
    <member kind="function">
      <type>miopenStatus_t</type>
      <name>miopenSoftmaxForward_V2</name>
      <anchorfile>group__softmax.html</anchorfile>
      <anchor>ga71e476f60294b1dae6aa80ff773804b5</anchor>
      <arglist>(miopenHandle_t handle, const void *alpha, const miopenTensorDescriptor_t xDesc, const void *x, const void *beta, const miopenTensorDescriptor_t yDesc, void *y, miopenSoftmaxAlgorithm_t algorithm, miopenSoftmaxMode_t mode)</arglist>
    </member>
    <member kind="function">
      <type>miopenStatus_t</type>
      <name>miopenSoftmaxBackward_V2</name>
      <anchorfile>group__softmax.html</anchorfile>
      <anchor>ga35e023988554fd30579fd6c8b205983a</anchor>
      <arglist>(miopenHandle_t handle, const void *alpha, const miopenTensorDescriptor_t yDesc, const void *y, const miopenTensorDescriptor_t dyDesc, const void *dy, const void *beta, const miopenTensorDescriptor_t dxDesc, void *dx, miopenSoftmaxAlgorithm_t algorithm, miopenSoftmaxMode_t mode)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>MIOPEN_DECLARE_OBJECT</name>
      <anchorfile>group___f_u_s_i_o_n.html</anchorfile>
      <anchor>ga66a35ee58b7bae6400997b70c60d6579</anchor>
      <arglist>(miopenFusionPlanDescriptor)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>MIOPEN_DECLARE_OBJECT</name>
      <anchorfile>miopen_8h.html</anchorfile>
      <anchor>ab7b2d0b6d40df1f72c66432d5b743bc2</anchor>
      <arglist>(miopenOperatorDescriptor)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>MIOPEN_DECLARE_OBJECT</name>
      <anchorfile>miopen_8h.html</anchorfile>
      <anchor>af0ec2e8f14b734074be71321165e69ea</anchor>
      <arglist>(miopenOperatorArgs)</arglist>
    </member>
    <member kind="function">
      <type>miopenStatus_t</type>
      <name>miopenCreateFusionPlan</name>
      <anchorfile>group___f_u_s_i_o_n.html</anchorfile>
      <anchor>gad6221c451528eac3d9592842f1df2f71</anchor>
      <arglist>(miopenFusionPlanDescriptor_t *fusePlanDesc, const miopenFusionDirection_t fuseDirection, const miopenTensorDescriptor_t inputDesc)</arglist>
    </member>
    <member kind="function">
      <type>miopenStatus_t</type>
      <name>miopenDestroyFusionPlan</name>
      <anchorfile>group___f_u_s_i_o_n.html</anchorfile>
      <anchor>ga72b408c1034c7c934c26cb86fde84e9b</anchor>
      <arglist>(miopenFusionPlanDescriptor_t fusePlanDesc)</arglist>
    </member>
    <member kind="function">
      <type>miopenStatus_t</type>
      <name>miopenCompileFusionPlan</name>
      <anchorfile>group___f_u_s_i_o_n.html</anchorfile>
      <anchor>ga9cbffb2ba55ade895a5fcb005a03c9e5</anchor>
      <arglist>(miopenHandle_t handle, miopenFusionPlanDescriptor_t fusePlanDesc)</arglist>
    </member>
    <member kind="function">
      <type>miopenStatus_t</type>
      <name>miopenFusionPlanGetOp</name>
      <anchorfile>group___f_u_s_i_o_n.html</anchorfile>
      <anchor>ga6f35ee49f5a6fcd81f3b4cb82f60f830</anchor>
      <arglist>(miopenFusionPlanDescriptor_t fusePlanDesc, const int op_idx, miopenFusionOpDescriptor_t *op)</arglist>
    </member>
    <member kind="function">
      <type>miopenStatus_t</type>
      <name>miopenFusionPlanGetWorkSpaceSize</name>
      <anchorfile>group___f_u_s_i_o_n.html</anchorfile>
      <anchor>ga3afcf7d3325e8b251eb7b74da8bdc13c</anchor>
      <arglist>(miopenHandle_t handle, miopenFusionPlanDescriptor_t fusePlanDesc, size_t *workSpaceSize, miopenConvFwdAlgorithm_t algo)</arglist>
    </member>
    <member kind="function">
      <type>miopenStatus_t</type>
      <name>miopenFusionPlanConvolutionGetAlgo</name>
      <anchorfile>group___f_u_s_i_o_n.html</anchorfile>
      <anchor>ga305370335f4a926f2a2b1cf1c72727f7</anchor>
      <arglist>(miopenFusionPlanDescriptor_t fusePlanDesc, const int requestAlgoCount, int *returnedAlgoCount, miopenConvFwdAlgorithm_t *returnedAlgos)</arglist>
    </member>
    <member kind="function">
      <type>miopenStatus_t</type>
      <name>miopenFusionPlanConvolutionSetAlgo</name>
      <anchorfile>group___f_u_s_i_o_n.html</anchorfile>
      <anchor>ga45b767f63622636b63f5ad453358cfc9</anchor>
      <arglist>(miopenFusionPlanDescriptor_t fusePlanDesc, miopenConvFwdAlgorithm_t algo)</arglist>
    </member>
    <member kind="function">
      <type>miopenStatus_t</type>
      <name>miopenCreateOpConvForward</name>
      <anchorfile>group___f_u_s_i_o_n.html</anchorfile>
      <anchor>ga5ce93b3bd99720da807a3bfb8f778821</anchor>
      <arglist>(miopenFusionPlanDescriptor_t fusePlanDesc, miopenFusionOpDescriptor_t *convOp, miopenConvolutionDescriptor_t convDesc, const miopenTensorDescriptor_t wDesc)</arglist>
    </member>
    <member kind="function">
      <type>miopenStatus_t</type>
      <name>miopenCreateOpActivationForward</name>
      <anchorfile>group___f_u_s_i_o_n.html</anchorfile>
      <anchor>ga733b3205944e4707ce9b9565927be47d</anchor>
      <arglist>(miopenFusionPlanDescriptor_t fusePlanDesc, miopenFusionOpDescriptor_t *activFwdOp, miopenActivationMode_t mode)</arglist>
    </member>
    <member kind="function">
      <type>miopenStatus_t</type>
      <name>miopenCreateOpActivationBackward</name>
      <anchorfile>group___f_u_s_i_o_n.html</anchorfile>
      <anchor>ga1181e44c0d111616642fffe0c323e21e</anchor>
      <arglist>(miopenFusionPlanDescriptor_t fusePlanDesc, miopenFusionOpDescriptor_t *activBwdOp, miopenActivationMode_t mode)</arglist>
    </member>
    <member kind="function">
      <type>miopenStatus_t</type>
      <name>miopenCreateOpBiasForward</name>
      <anchorfile>group___f_u_s_i_o_n.html</anchorfile>
      <anchor>gafe82043e423cc3af83f0a86683c2faa4</anchor>
      <arglist>(miopenFusionPlanDescriptor_t fusePlanDesc, miopenFusionOpDescriptor_t *biasOp, const miopenTensorDescriptor_t bDesc)</arglist>
    </member>
    <member kind="function">
      <type>miopenStatus_t</type>
      <name>miopenCreateOpBatchNormInference</name>
      <anchorfile>group___f_u_s_i_o_n.html</anchorfile>
      <anchor>ga493ad077910d796d4391f40032983da4</anchor>
      <arglist>(miopenFusionPlanDescriptor_t fusePlanDesc, miopenFusionOpDescriptor_t *bnOp, const miopenBatchNormMode_t bn_mode, const miopenTensorDescriptor_t bnScaleBiasMeanVarDesc)</arglist>
    </member>
    <member kind="function">
      <type>miopenStatus_t</type>
      <name>miopenCreateOpBatchNormForward</name>
      <anchorfile>group___f_u_s_i_o_n.html</anchorfile>
      <anchor>ga2c8f42b324b568ea2f9e1678cca809b0</anchor>
      <arglist>(miopenFusionPlanDescriptor_t fusePlanDesc, miopenFusionOpDescriptor_t *bnFwdOp, const miopenBatchNormMode_t bn_mode, bool runningMeanVariance)</arglist>
    </member>
    <member kind="function">
      <type>miopenStatus_t</type>
      <name>miopenCreateOpBatchNormBackward</name>
      <anchorfile>group___f_u_s_i_o_n.html</anchorfile>
      <anchor>gab536f8a2157852540dd2a2fcff5e90c3</anchor>
      <arglist>(miopenFusionPlanDescriptor_t fusePlanDesc, miopenFusionOpDescriptor_t *bnBwdOp, const miopenBatchNormMode_t bn_mode)</arglist>
    </member>
    <member kind="function">
      <type>miopenStatus_t</type>
      <name>miopenCreateOperatorArgs</name>
      <anchorfile>group___f_u_s_i_o_n.html</anchorfile>
      <anchor>gab7c88a2676231b3e9d1a623616ea9053</anchor>
      <arglist>(miopenOperatorArgs_t *args)</arglist>
    </member>
    <member kind="function">
      <type>miopenStatus_t</type>
      <name>miopenDestroyOperatorArgs</name>
      <anchorfile>group___f_u_s_i_o_n.html</anchorfile>
      <anchor>gab395e7ca41f74ed5deda61bc173e3db1</anchor>
      <arglist>(miopenOperatorArgs_t args)</arglist>
    </member>
    <member kind="function">
      <type>miopenStatus_t</type>
      <name>miopenSetOpArgsConvForward</name>
      <anchorfile>group___f_u_s_i_o_n.html</anchorfile>
      <anchor>gabc13e846bf2934371aa914d05d727b31</anchor>
      <arglist>(miopenOperatorArgs_t args, const miopenFusionOpDescriptor_t convOp, const void *alpha, const void *beta, const void *w)</arglist>
    </member>
    <member kind="function">
      <type>miopenStatus_t</type>
      <name>miopenSetOpArgsActivForward</name>
      <anchorfile>group___f_u_s_i_o_n.html</anchorfile>
      <anchor>gaaa5188cbdbf34f68ba2fc02be21ffb7c</anchor>
      <arglist>(miopenOperatorArgs_t args, const miopenFusionOpDescriptor_t activFwdOp, const void *alpha, const void *beta, double activAlpha, double activBeta, double activGamma)</arglist>
    </member>
    <member kind="function">
      <type>miopenStatus_t</type>
      <name>miopenSetOpArgsActivBackward</name>
      <anchorfile>group___f_u_s_i_o_n.html</anchorfile>
      <anchor>ga85bc81886a81df6b3610276674fe3562</anchor>
      <arglist>(miopenOperatorArgs_t args, const miopenFusionOpDescriptor_t activBwdOp, const void *alpha, const void *beta, const void *y, const void *reserved, double activAlpha, double activBeta, double activGamma)</arglist>
    </member>
    <member kind="function">
      <type>miopenStatus_t</type>
      <name>miopenSetOpArgsBatchNormInference</name>
      <anchorfile>group___f_u_s_i_o_n.html</anchorfile>
      <anchor>ga671c3d981cd6f5f149adf4421b00fcea</anchor>
      <arglist>(miopenOperatorArgs_t args, const miopenFusionOpDescriptor_t bnOp, const void *alpha, const void *beta, const void *bnScale, const void *bnBias, const void *estimatedMean, const void *estimatedVariance, double epsilon)</arglist>
    </member>
    <member kind="function">
      <type>miopenStatus_t</type>
      <name>miopenSetOpArgsBatchNormForward</name>
      <anchorfile>group___f_u_s_i_o_n.html</anchorfile>
      <anchor>ga6754e3fce005f9b9d352211cc1430b1b</anchor>
      <arglist>(miopenOperatorArgs_t args, const miopenFusionOpDescriptor_t bnOp, const void *alpha, const void *beta, const void *bnScale, const void *bnBias, void *savedMean, void *savedInvVariance, void *runningMean, void *runningVariance, double expAvgFactor, double epsilon)</arglist>
    </member>
    <member kind="function">
      <type>miopenStatus_t</type>
      <name>miopenSetOpArgsBatchNormBackward</name>
      <anchorfile>group___f_u_s_i_o_n.html</anchorfile>
      <anchor>gaa7f311a862d10ff2e4d771072f6ad54a</anchor>
      <arglist>(miopenOperatorArgs_t args, const miopenFusionOpDescriptor_t bnOp, const void *alpha, const void *beta, const void *x, const void *bnScale, const void *bnBias, void *resultBnScaleDiff, void *resultBnBiasDiff, const void *savedMean, const void *savedInvVariance)</arglist>
    </member>
    <member kind="function">
      <type>miopenStatus_t</type>
      <name>miopenSetOpArgsBiasForward</name>
      <anchorfile>group___f_u_s_i_o_n.html</anchorfile>
      <anchor>ga5cddc46abf5c9ea46bc0bbcc161f6eaa</anchor>
      <arglist>(miopenOperatorArgs_t args, const miopenFusionOpDescriptor_t biasOp, const void *alpha, const void *beta, const void *bias)</arglist>
    </member>
    <member kind="function">
      <type>miopenStatus_t</type>
      <name>miopenExecuteFusionPlan</name>
      <anchorfile>group___f_u_s_i_o_n.html</anchorfile>
      <anchor>ga6dae1b3552cbd88138544937b014cd5e</anchor>
      <arglist>(const miopenHandle_t handle, const miopenFusionPlanDescriptor_t fusePlanDesc, const miopenTensorDescriptor_t inputDesc, const void *input, const miopenTensorDescriptor_t outputDesc, void *output, miopenOperatorArgs_t args)</arglist>
    </member>
    <member kind="function">
      <type>miopenStatus_t</type>
      <name>miopenConvolutionBiasActivationForward</name>
      <anchorfile>group___f_u_s_i_o_n.html</anchorfile>
      <anchor>gad2e1ed4cfbdd05c244e407933ed8541b</anchor>
      <arglist>(miopenHandle_t handle, const void *alpha1, const miopenTensorDescriptor_t xDesc, const void *x, const miopenTensorDescriptor_t wDesc, const void *w, const miopenConvolutionDescriptor_t convDesc, miopenConvFwdAlgorithm_t algo, void *workspace, size_t workspaceSizeInBytes, const void *alpha2, const miopenTensorDescriptor_t zDesc, const void *z, const miopenTensorDescriptor_t biasDesc, const void *bias, const miopenActivationDescriptor_t activationDesc, const miopenTensorDescriptor_t yDesc, void *y)</arglist>
    </member>
    <member kind="function">
      <type>miopenStatus_t</type>
      <name>miopenCreateRNNDescriptor</name>
      <anchorfile>group___r_n_n.html</anchorfile>
      <anchor>gab6af15d94b2e0932873142d55aa239b4</anchor>
      <arglist>(miopenRNNDescriptor_t *rnnDesc)</arglist>
    </member>
    <member kind="function">
      <type>miopenStatus_t</type>
      <name>miopenGetRNNDescriptor</name>
      <anchorfile>group___r_n_n.html</anchorfile>
      <anchor>ga6ac11f7ee823327d80e1b0ebc6774b3f</anchor>
      <arglist>(miopenRNNDescriptor_t rnnDesc, miopenRNNMode_t *rnnMode, miopenRNNAlgo_t *algoMode, miopenRNNInputMode_t *inputMode, miopenRNNDirectionMode_t *dirMode, miopenRNNBiasMode_t *biasMode, int *hiddenSize, int *layer)</arglist>
    </member>
    <member kind="function">
      <type>miopenStatus_t</type>
      <name>miopenGetRNNDescriptor_V2</name>
      <anchorfile>group___r_n_n.html</anchorfile>
      <anchor>ga102a6710811b4662eee1c3f2858b3498</anchor>
      <arglist>(miopenRNNDescriptor_t rnnDesc, int *hiddenSize, int *layer, miopenDropoutDescriptor_t *dropoutDesc, miopenRNNInputMode_t *inputMode, miopenRNNDirectionMode_t *dirMode, miopenRNNMode_t *rnnMode, miopenRNNBiasMode_t *biasMode, miopenRNNAlgo_t *algoMode, miopenDataType_t *dataType)</arglist>
    </member>
    <member kind="function">
      <type>miopenStatus_t</type>
      <name>miopenDestroyRNNDescriptor</name>
      <anchorfile>group___r_n_n.html</anchorfile>
      <anchor>gaf5675f82ade15ca38b890f6ea4d035b5</anchor>
      <arglist>(miopenRNNDescriptor_t rnnDesc)</arglist>
    </member>
    <member kind="function">
      <type>miopenStatus_t</type>
      <name>miopenSetRNNDescriptor</name>
      <anchorfile>group___r_n_n.html</anchorfile>
      <anchor>ga609253972613b2dc6ea2e9d07697f665</anchor>
      <arglist>(miopenRNNDescriptor_t rnnDesc, const int hsize, const int nlayers, miopenRNNInputMode_t inMode, miopenRNNDirectionMode_t direction, miopenRNNMode_t rnnMode, miopenRNNBiasMode_t biasMode, miopenRNNAlgo_t algo, miopenDataType_t dataType)</arglist>
    </member>
    <member kind="function">
      <type>miopenStatus_t</type>
      <name>miopenSetRNNDescriptor_V2</name>
      <anchorfile>group___r_n_n.html</anchorfile>
      <anchor>gaf02ff9a9c328099753d9244eae95c5d6</anchor>
      <arglist>(miopenRNNDescriptor_t rnnDesc, const int hsize, const int nlayers, miopenDropoutDescriptor_t dropoutDesc, miopenRNNInputMode_t inMode, miopenRNNDirectionMode_t direction, miopenRNNMode_t rnnMode, miopenRNNBiasMode_t biasMode, miopenRNNAlgo_t algo, miopenDataType_t dataType)</arglist>
    </member>
    <member kind="function">
      <type>miopenStatus_t</type>
      <name>miopenSetRNNDataSeqTensorDescriptor</name>
      <anchorfile>group___r_n_n.html</anchorfile>
      <anchor>gadaf0448f9d4ee351183c7e83d2b5f520</anchor>
      <arglist>(miopenSeqTensorDescriptor_t seqTensorDesc, miopenDataType_t dataType, miopenRNNBaseLayout_t layout, int maxSequenceLen, int batchSize, int vectorSize, const int *sequenceLenArray, void *paddingMarker)</arglist>
    </member>
    <member kind="function">
      <type>miopenStatus_t</type>
      <name>miopenGetRNNDataSeqTensorDescriptor</name>
      <anchorfile>group___r_n_n.html</anchorfile>
      <anchor>ga90c8af014044546749e8dfd68a074ac3</anchor>
      <arglist>(miopenSeqTensorDescriptor_t seqTensorDesc, miopenDataType_t *dataType, miopenRNNBaseLayout_t *layout, int *maxSequenceLen, int *batchSize, int *vectorSize, int sequenceLenArrayLimit, int *sequenceLenArray, void *paddingMarker)</arglist>
    </member>
    <member kind="function">
      <type>miopenStatus_t</type>
      <name>miopenGetRNNWorkspaceSize</name>
      <anchorfile>group___r_n_n.html</anchorfile>
      <anchor>gad2f8db58662277452612e0b3381123fe</anchor>
      <arglist>(miopenHandle_t handle, const miopenRNNDescriptor_t rnnDesc, const int sequenceLen, const miopenTensorDescriptor_t *xDesc, size_t *numBytes)</arglist>
    </member>
    <member kind="function">
      <type>miopenStatus_t</type>
      <name>miopenGetRNNTrainingReserveSize</name>
      <anchorfile>group___r_n_n.html</anchorfile>
      <anchor>ga59b770093f4ab10d72126436b1d0395a</anchor>
      <arglist>(miopenHandle_t handle, miopenRNNDescriptor_t rnnDesc, const int sequenceLen, const miopenTensorDescriptor_t *xDesc, size_t *numBytes)</arglist>
    </member>
    <member kind="function">
      <type>miopenStatus_t</type>
      <name>miopenGetRNNTempSpaceSizes</name>
      <anchorfile>group___r_n_n.html</anchorfile>
      <anchor>ga82cf9678664959b494765e56f06f87c3</anchor>
      <arglist>(miopenHandle_t handle, miopenRNNDescriptor_t rnnDesc, miopenSeqTensorDescriptor_t xDesc, miopenRNNFWDMode_t fwdMode, size_t *workSpaceSize, size_t *reserveSpaceSize)</arglist>
    </member>
    <member kind="function">
      <type>miopenStatus_t</type>
      <name>miopenGetRNNParamsSize</name>
      <anchorfile>group___r_n_n.html</anchorfile>
      <anchor>ga2394f4629b6da29bf2145f0e0220810c</anchor>
      <arglist>(miopenHandle_t handle, miopenRNNDescriptor_t rnnDesc, miopenTensorDescriptor_t xDesc, size_t *numBytes, miopenDataType_t dtype)</arglist>
    </member>
    <member kind="function">
      <type>miopenStatus_t</type>
      <name>miopenGetRNNParamsDescriptor</name>
      <anchorfile>group___r_n_n.html</anchorfile>
      <anchor>gadf75eb328f82b81ddc83d4230b0c54af</anchor>
      <arglist>(miopenHandle_t handle, miopenRNNDescriptor_t rnnDesc, miopenTensorDescriptor_t xDesc, miopenTensorDescriptor_t wDesc, miopenDataType_t dtype)</arglist>
    </member>
    <member kind="function">
      <type>miopenStatus_t</type>
      <name>miopenGetRNNInputTensorSize</name>
      <anchorfile>group___r_n_n.html</anchorfile>
      <anchor>ga97b8a45e7925826423dd5e2795a5f8cd</anchor>
      <arglist>(miopenHandle_t handle, miopenRNNDescriptor_t rnnDesc, const int seqLen, miopenTensorDescriptor_t *xDesc, size_t *numBytes)</arglist>
    </member>
    <member kind="function">
      <type>miopenStatus_t</type>
      <name>miopenGetRNNHiddenTensorSize</name>
      <anchorfile>group___r_n_n.html</anchorfile>
      <anchor>gaf5d51f866c74ce07a6cc4286fa06200c</anchor>
      <arglist>(miopenHandle_t handle, miopenRNNDescriptor_t rnnDesc, const int seqLen, miopenTensorDescriptor_t *xDesc, size_t *numBytes)</arglist>
    </member>
    <member kind="function">
      <type>miopenStatus_t</type>
      <name>miopenGetRNNLayerParamSize</name>
      <anchorfile>group___r_n_n.html</anchorfile>
      <anchor>gab082ab70bd71d3d5a248b76bf96def6b</anchor>
      <arglist>(miopenHandle_t handle, miopenRNNDescriptor_t rnnDesc, const int layer, miopenTensorDescriptor_t xDesc, const int paramID, size_t *numBytes)</arglist>
    </member>
    <member kind="function">
      <type>miopenStatus_t</type>
      <name>miopenGetRNNLayerBiasSize</name>
      <anchorfile>group___r_n_n.html</anchorfile>
      <anchor>ga5ed3d73c243de909de9ebf58a1d3d5d8</anchor>
      <arglist>(miopenHandle_t handle, miopenRNNDescriptor_t rnnDesc, const int layer, const int biasID, size_t *numBytes)</arglist>
    </member>
    <member kind="function">
      <type>miopenStatus_t</type>
      <name>miopenGetRNNLayerParam</name>
      <anchorfile>group___r_n_n.html</anchorfile>
      <anchor>gacd0730d483c86d3f9f047658a58f5695</anchor>
      <arglist>(miopenHandle_t handle, miopenRNNDescriptor_t rnnDesc, const int layer, miopenTensorDescriptor_t xDesc, miopenTensorDescriptor_t wDesc, const void *w, const int paramID, miopenTensorDescriptor_t paramDesc, void *layerParam)</arglist>
    </member>
    <member kind="function">
      <type>miopenStatus_t</type>
      <name>miopenGetRNNLayerBias</name>
      <anchorfile>group___r_n_n.html</anchorfile>
      <anchor>ga4f27d46b80c043ef254fbc2caf481423</anchor>
      <arglist>(miopenHandle_t handle, miopenRNNDescriptor_t rnnDesc, const int layer, miopenTensorDescriptor_t xDesc, miopenTensorDescriptor_t wDesc, const void *w, const int biasID, miopenTensorDescriptor_t biasDesc, void *layerBias)</arglist>
    </member>
    <member kind="function">
      <type>miopenStatus_t</type>
      <name>miopenGetRNNLayerParamOffset</name>
      <anchorfile>group___r_n_n.html</anchorfile>
      <anchor>ga2c445114d21ef806585c4de8fe777b70</anchor>
      <arglist>(miopenRNNDescriptor_t rnnDesc, const int layer, miopenTensorDescriptor_t xDesc, const int paramID, miopenTensorDescriptor_t paramDesc, size_t *layerParamOffset)</arglist>
    </member>
    <member kind="function">
      <type>miopenStatus_t</type>
      <name>miopenGetRNNLayerBiasOffset</name>
      <anchorfile>group___r_n_n.html</anchorfile>
      <anchor>ga24389ba4b784d7211f06b6fe4c94c8d7</anchor>
      <arglist>(miopenRNNDescriptor_t rnnDesc, const int layer, miopenTensorDescriptor_t xDesc, const int biasID, miopenTensorDescriptor_t biasDesc, size_t *layerBiasOffset)</arglist>
    </member>
    <member kind="function">
      <type>miopenStatus_t</type>
      <name>miopenSetRNNLayerParam</name>
      <anchorfile>group___r_n_n.html</anchorfile>
      <anchor>gaa13b97d4ebe9960126140e7838701e13</anchor>
      <arglist>(miopenHandle_t handle, miopenRNNDescriptor_t rnnDesc, const int layer, miopenTensorDescriptor_t xDesc, miopenTensorDescriptor_t wDesc, void *w, const int paramID, miopenTensorDescriptor_t paramDesc, const void *layerParam)</arglist>
    </member>
    <member kind="function">
      <type>miopenStatus_t</type>
      <name>miopenSetRNNLayerBias</name>
      <anchorfile>group___r_n_n.html</anchorfile>
      <anchor>ga1991ee70fba68f8de643c1a4aa183bf7</anchor>
      <arglist>(miopenHandle_t handle, miopenRNNDescriptor_t rnnDesc, const int layer, miopenTensorDescriptor_t xDesc, miopenTensorDescriptor_t wDesc, void *w, const int biasID, miopenTensorDescriptor_t biasDesc, const void *layerBias)</arglist>
    </member>
    <member kind="function">
      <type>miopenStatus_t</type>
      <name>miopenSetRNNPaddingMode</name>
      <anchorfile>group___r_n_n.html</anchorfile>
      <anchor>gaf9f746d7c62bfbf62ff8663e54360771</anchor>
      <arglist>(miopenRNNDescriptor_t rnnDesc, miopenRNNPaddingMode_t paddingMode)</arglist>
    </member>
    <member kind="function">
      <type>miopenStatus_t</type>
      <name>miopenGetRNNPaddingMode</name>
      <anchorfile>group___r_n_n.html</anchorfile>
      <anchor>ga86fc04d775ab501c0ab829703b2cf738</anchor>
      <arglist>(miopenRNNDescriptor_t rnnDesc, miopenRNNPaddingMode_t *paddingMode)</arglist>
    </member>
    <member kind="function">
      <type>miopenStatus_t</type>
      <name>miopenRNNForward</name>
      <anchorfile>group___r_n_n.html</anchorfile>
      <anchor>ga8d5b72681258d9cd7f50ba03ab6215e5</anchor>
      <arglist>(miopenHandle_t handle, const miopenRNNDescriptor_t rnnDesc, miopenRNNFWDMode_t fwdMode, const miopenSeqTensorDescriptor_t xDesc, const void *x, const miopenTensorDescriptor_t hDesc, const void *hx, void *hy, const miopenTensorDescriptor_t cDesc, const void *cx, void *cy, const miopenSeqTensorDescriptor_t yDesc, void *y, const void *w, size_t weightSpaceSize, void *workSpace, size_t workSpaceNumBytes, void *reserveSpace, size_t reserveSpaceNumBytes)</arglist>
    </member>
    <member kind="function">
      <type>miopenStatus_t</type>
      <name>miopenRNNBackwardSeqData</name>
      <anchorfile>group___r_n_n.html</anchorfile>
      <anchor>ga44ac8be6fceea4aa1e755958960be862</anchor>
      <arglist>(miopenHandle_t handle, const miopenRNNDescriptor_t rnnDesc, const miopenSeqTensorDescriptor_t yDesc, const void *y, const void *dy, const miopenTensorDescriptor_t hDesc, const void *hx, const void *dhy, void *dhx, const miopenTensorDescriptor_t cDesc, const void *cx, const void *dcy, void *dcx, const miopenSeqTensorDescriptor_t xDesc, void *dx, const void *w, size_t weightSpaceSize, void *workSpace, size_t workSpaceNumBytes, void *reserveSpace, size_t reserveSpaceNumBytes)</arglist>
    </member>
    <member kind="function">
      <type>miopenStatus_t</type>
      <name>miopenRNNBackwardWeightsSeqTensor</name>
      <anchorfile>group___r_n_n.html</anchorfile>
      <anchor>ga1ff33e5279bfca3ed08d59bfa8069a9d</anchor>
      <arglist>(miopenHandle_t handle, const miopenRNNDescriptor_t rnnDesc, const miopenSeqTensorDescriptor_t xDesc, const void *x, const miopenTensorDescriptor_t hDesc, const void *hx, const miopenSeqTensorDescriptor_t yDesc, const void *y, void *dw, size_t weightSpaceSize, void *workSpace, size_t workSpaceNumBytes, const void *reserveSpace, size_t reserveSpaceNumBytes)</arglist>
    </member>
    <member kind="function">
      <type>miopenStatus_t</type>
      <name>miopenRNNForwardTraining</name>
      <anchorfile>group___r_n_n.html</anchorfile>
      <anchor>gae7844191464b02e0343af135904413ab</anchor>
      <arglist>(miopenHandle_t handle, const miopenRNNDescriptor_t rnnDesc, const int sequenceLen, const miopenTensorDescriptor_t *xDesc, const void *x, const miopenTensorDescriptor_t hxDesc, const void *hx, const miopenTensorDescriptor_t cxDesc, const void *cx, const miopenTensorDescriptor_t wDesc, const void *w, const miopenTensorDescriptor_t *yDesc, void *y, const miopenTensorDescriptor_t hyDesc, void *hy, const miopenTensorDescriptor_t cyDesc, void *cy, void *workSpace, size_t workSpaceNumBytes, void *reserveSpace, size_t reserveSpaceNumBytes)</arglist>
    </member>
    <member kind="function">
      <type>miopenStatus_t</type>
      <name>miopenRNNBackwardData</name>
      <anchorfile>group___r_n_n.html</anchorfile>
      <anchor>ga6ac03fa91d038feb1206b4f8a770af97</anchor>
      <arglist>(miopenHandle_t handle, const miopenRNNDescriptor_t rnnDesc, const int sequenceLen, const miopenTensorDescriptor_t *yDesc, const void *y, const miopenTensorDescriptor_t *dyDesc, const void *dy, const miopenTensorDescriptor_t dhyDesc, const void *dhy, const miopenTensorDescriptor_t dcyDesc, const void *dcy, const miopenTensorDescriptor_t wDesc, const void *w, const miopenTensorDescriptor_t hxDesc, const void *hx, const miopenTensorDescriptor_t cxDesc, const void *cx, const miopenTensorDescriptor_t *dxDesc, void *dx, const miopenTensorDescriptor_t dhxDesc, void *dhx, const miopenTensorDescriptor_t dcxDesc, void *dcx, void *workSpace, size_t workSpaceNumBytes, void *reserveSpace, size_t reserveSpaceNumBytes)</arglist>
    </member>
    <member kind="function">
      <type>miopenStatus_t</type>
      <name>miopenRNNBackwardWeights</name>
      <anchorfile>group___r_n_n.html</anchorfile>
      <anchor>ga55040b58e6820d21f58957d356715739</anchor>
      <arglist>(miopenHandle_t handle, const miopenRNNDescriptor_t rnnDesc, const int sequenceLen, const miopenTensorDescriptor_t *xDesc, const void *x, const miopenTensorDescriptor_t hxDesc, const void *hx, const miopenTensorDescriptor_t *yDesc, const void *y, const miopenTensorDescriptor_t dwDesc, void *dw, void *workSpace, size_t workSpaceNumBytes, const void *reserveSpace, size_t reserveSpaceNumBytes)</arglist>
    </member>
    <member kind="function">
      <type>miopenStatus_t</type>
      <name>miopenRNNForwardInference</name>
      <anchorfile>group___r_n_n.html</anchorfile>
      <anchor>gafd8f2c43d92a7baf7de2e431bbcf7199</anchor>
      <arglist>(miopenHandle_t handle, miopenRNNDescriptor_t rnnDesc, const int sequenceLen, const miopenTensorDescriptor_t *xDesc, const void *x, const miopenTensorDescriptor_t hxDesc, const void *hx, const miopenTensorDescriptor_t cxDesc, const void *cx, const miopenTensorDescriptor_t wDesc, const void *w, const miopenTensorDescriptor_t *yDesc, void *y, const miopenTensorDescriptor_t hyDesc, void *hy, const miopenTensorDescriptor_t cyDesc, void *cy, void *workSpace, size_t workSpaceNumBytes)</arglist>
    </member>
    <member kind="function">
      <type>miopenStatus_t</type>
      <name>miopenCreateCTCLossDescriptor</name>
      <anchorfile>group___loss_function.html</anchorfile>
      <anchor>ga514750d47eedc6069c1c6fa5aa696bf4</anchor>
      <arglist>(miopenCTCLossDescriptor_t *ctcLossDesc)</arglist>
    </member>
    <member kind="function">
      <type>miopenStatus_t</type>
      <name>miopenGetCTCLossDescriptor</name>
      <anchorfile>group___loss_function.html</anchorfile>
      <anchor>ga50fa7cf5fca14cc1b9181d004b90e10f</anchor>
      <arglist>(miopenCTCLossDescriptor_t ctcLossDesc, miopenDataType_t *dataType, int *blank_label_id, bool *apply_softmax_layer)</arglist>
    </member>
    <member kind="function">
      <type>miopenStatus_t</type>
      <name>miopenDestroyCTCLossDescriptor</name>
      <anchorfile>group___loss_function.html</anchorfile>
      <anchor>gae3a6a39b1a961c9342674fa62342393a</anchor>
      <arglist>(miopenCTCLossDescriptor_t ctcLossDesc)</arglist>
    </member>
    <member kind="function">
      <type>miopenStatus_t</type>
      <name>miopenSetCTCLossDescriptor</name>
      <anchorfile>group___loss_function.html</anchorfile>
      <anchor>ga4cf2c0ac1a30f13c3503be5a98cdccd3</anchor>
      <arglist>(miopenCTCLossDescriptor_t ctcLossDesc, miopenDataType_t dataType, const int blank_label_id, bool apply_softmax_layer)</arglist>
    </member>
    <member kind="function">
      <type>miopenStatus_t</type>
      <name>miopenGetCTCLossWorkspaceSize</name>
      <anchorfile>group___loss_function.html</anchorfile>
      <anchor>ga0b277cfacf38a158bf753d8edc609dc1</anchor>
      <arglist>(miopenHandle_t handle, const miopenTensorDescriptor_t probsDesc, const miopenTensorDescriptor_t gradientsDesc, const int *labels, const int *labelLengths, const int *inputLengths, miopenCTCLossAlgo_t algo, const miopenCTCLossDescriptor_t ctcLossDesc, size_t *workSpaceSize)</arglist>
    </member>
    <member kind="function">
      <type>miopenStatus_t</type>
      <name>miopenCTCLoss</name>
      <anchorfile>group___loss_function.html</anchorfile>
      <anchor>ga4d8ec531689521616491dad2e3ae7c43</anchor>
      <arglist>(miopenHandle_t handle, const miopenTensorDescriptor_t probsDesc, const void *probs, const int *labels, const int *labelLengths, const int *inputLengths, void *losses, const miopenTensorDescriptor_t gradientsDesc, void *gradients, miopenCTCLossAlgo_t algo, const miopenCTCLossDescriptor_t ctcLossDesc, void *workSpace, size_t workSpaceSize)</arglist>
    </member>
    <member kind="function">
      <type>miopenStatus_t</type>
      <name>miopenCreateDropoutDescriptor</name>
      <anchorfile>group__dropout.html</anchorfile>
      <anchor>gabd41a45a7c2f7785eb124080071e9e69</anchor>
      <arglist>(miopenDropoutDescriptor_t *dropoutDesc)</arglist>
    </member>
    <member kind="function">
      <type>miopenStatus_t</type>
      <name>miopenDestroyDropoutDescriptor</name>
      <anchorfile>group__dropout.html</anchorfile>
      <anchor>ga053288f154f85d8695f3825853d7b44e</anchor>
      <arglist>(miopenDropoutDescriptor_t dropoutDesc)</arglist>
    </member>
    <member kind="function">
      <type>miopenStatus_t</type>
      <name>miopenDropoutGetReserveSpaceSize</name>
      <anchorfile>group__dropout.html</anchorfile>
      <anchor>ga7a1ea2d1245dd07eaf7ec2c59e19e842</anchor>
      <arglist>(const miopenTensorDescriptor_t xDesc, size_t *reserveSpaceSizeInBytes)</arglist>
    </member>
    <member kind="function">
      <type>miopenStatus_t</type>
      <name>miopenDropoutGetStatesSize</name>
      <anchorfile>group__dropout.html</anchorfile>
      <anchor>ga323bbd149e25ef334cb4b52ef4e57a1c</anchor>
      <arglist>(miopenHandle_t handle, size_t *stateSizeInBytes)</arglist>
    </member>
    <member kind="function">
      <type>miopenStatus_t</type>
      <name>miopenGetDropoutDescriptor</name>
      <anchorfile>group__dropout.html</anchorfile>
      <anchor>gaabb82ee87a6e073d3acfc95b242fdbb8</anchor>
      <arglist>(miopenDropoutDescriptor_t dropoutDesc, miopenHandle_t handle, float *dropout, void **states, unsigned long long *seed, bool *use_mask, bool *state_evo, miopenRNGType_t *rng_mode)</arglist>
    </member>
    <member kind="function">
      <type>miopenStatus_t</type>
      <name>miopenRestoreDropoutDescriptor</name>
      <anchorfile>group__dropout.html</anchorfile>
      <anchor>gad0b1c52d5641f0fb09f6baf17b7d051f</anchor>
      <arglist>(miopenDropoutDescriptor_t dropoutDesc, miopenHandle_t handle, float dropout, void *states, size_t stateSizeInBytes, unsigned long long seed, bool use_mask, bool state_evo, miopenRNGType_t rng_mode)</arglist>
    </member>
    <member kind="function">
      <type>miopenStatus_t</type>
      <name>miopenSetDropoutDescriptor</name>
      <anchorfile>group__dropout.html</anchorfile>
      <anchor>gae60f56b35fd49b562141d8e00b1a20e7</anchor>
      <arglist>(miopenDropoutDescriptor_t dropoutDesc, miopenHandle_t handle, float dropout, void *states, size_t stateSizeInBytes, unsigned long long seed, bool use_mask, bool state_evo, miopenRNGType_t rng_mode)</arglist>
    </member>
    <member kind="function">
      <type>miopenStatus_t</type>
      <name>miopenDropoutForward</name>
      <anchorfile>group__dropout.html</anchorfile>
      <anchor>gaa695ad520fe252a47102bb49c56b52a5</anchor>
      <arglist>(miopenHandle_t handle, const miopenDropoutDescriptor_t dropoutDesc, const miopenTensorDescriptor_t noise_shape, const miopenTensorDescriptor_t xDesc, const void *x, const miopenTensorDescriptor_t yDesc, void *y, void *reserveSpace, size_t reserveSpaceSizeInBytes)</arglist>
    </member>
    <member kind="function">
      <type>miopenStatus_t</type>
      <name>miopenDropoutBackward</name>
      <anchorfile>group__dropout.html</anchorfile>
      <anchor>gac0a6cf12640c7a959a27412b8304954b</anchor>
      <arglist>(miopenHandle_t handle, const miopenDropoutDescriptor_t dropoutDesc, const miopenTensorDescriptor_t noise_shape, const miopenTensorDescriptor_t dyDesc, const void *dy, const miopenTensorDescriptor_t dxDesc, void *dx, void *reserveSpace, size_t reserveSpaceSizeInBytes)</arglist>
    </member>
    <member kind="function">
      <type>miopenStatus_t</type>
      <name>miopenCreateReduceTensorDescriptor</name>
      <anchorfile>group___tensor_reduce.html</anchorfile>
      <anchor>ga5f77b41324cbed4284d00b2e80140c6e</anchor>
      <arglist>(miopenReduceTensorDescriptor_t *reduceTensorDesc)</arglist>
    </member>
    <member kind="function">
      <type>miopenStatus_t</type>
      <name>miopenDestroyReduceTensorDescriptor</name>
      <anchorfile>group___tensor_reduce.html</anchorfile>
      <anchor>gac17bc3081a6e585c993d4c26e67f5c30</anchor>
      <arglist>(miopenReduceTensorDescriptor_t reduceTensorDesc)</arglist>
    </member>
    <member kind="function">
      <type>miopenStatus_t</type>
      <name>miopenSetReduceTensorDescriptor</name>
      <anchorfile>group___tensor_reduce.html</anchorfile>
      <anchor>ga5dfa99bd883f588f29d1b927917e6ad4</anchor>
      <arglist>(miopenReduceTensorDescriptor_t reduceTensorDesc, miopenReduceTensorOp_t reduceTensorOp, miopenDataType_t reduceTensorCompType, miopenNanPropagation_t reduceTensorNanOpt, miopenReduceTensorIndices_t reduceTensorIndices, miopenIndicesType_t reduceTensorIndicesType)</arglist>
    </member>
    <member kind="function">
      <type>miopenStatus_t</type>
      <name>miopenGetReduceTensorDescriptor</name>
      <anchorfile>group___tensor_reduce.html</anchorfile>
      <anchor>gafd5a88ef7c4bc12f0cb57e8ea20365d2</anchor>
      <arglist>(const miopenReduceTensorDescriptor_t reduceTensorDesc, miopenReduceTensorOp_t *reduceTensorOp, miopenDataType_t *reduceTensorCompType, miopenNanPropagation_t *reduceTensorNanOpt, miopenReduceTensorIndices_t *reduceTensorIndices, miopenIndicesType_t *reduceTensorIndicesType)</arglist>
    </member>
    <member kind="function">
      <type>miopenStatus_t</type>
      <name>miopenGetReductionIndicesSize</name>
      <anchorfile>group___tensor_reduce.html</anchorfile>
      <anchor>gaad36391f9ef26c3404b57d6881a45341</anchor>
      <arglist>(miopenHandle_t handle, const miopenReduceTensorDescriptor_t reduceTensorDesc, const miopenTensorDescriptor_t aDesc, const miopenTensorDescriptor_t cDesc, size_t *sizeInBytes)</arglist>
    </member>
    <member kind="function">
      <type>miopenStatus_t</type>
      <name>miopenGetReductionWorkspaceSize</name>
      <anchorfile>group___tensor_reduce.html</anchorfile>
      <anchor>gae6168e1d701ab82cb44fed031c93d699</anchor>
      <arglist>(miopenHandle_t handle, const miopenReduceTensorDescriptor_t reduceTensorDesc, const miopenTensorDescriptor_t aDesc, const miopenTensorDescriptor_t cDesc, size_t *sizeInBytes)</arglist>
    </member>
    <member kind="function">
      <type>miopenStatus_t</type>
      <name>miopenReduceTensor</name>
      <anchorfile>group___tensor_reduce.html</anchorfile>
      <anchor>gaac1654ff051edc15a3bc17f99bf96736</anchor>
      <arglist>(miopenHandle_t handle, const miopenReduceTensorDescriptor_t reduceTensorDesc, void *indices, size_t indicesSizeInBytes, void *workspace, size_t workspaceSizeInBytes, const void *alpha, const miopenTensorDescriptor_t aDesc, const void *A, const void *beta, const miopenTensorDescriptor_t cDesc, void *C)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>MIOPEN_DECLARE_OBJECT</name>
      <anchorfile>group__find2.html</anchorfile>
      <anchor>ga7bd14eca1cfc4b80b3099365fd341c50</anchor>
      <arglist>(miopenProblem)</arglist>
    </member>
    <member kind="function">
      <type>miopenStatus_t</type>
      <name>miopenCreateConvProblem</name>
      <anchorfile>group__find2.html</anchorfile>
      <anchor>gaeb7ab171928f07c4fd02a96b23c3cd02</anchor>
      <arglist>(miopenProblem_t *problem, miopenConvolutionDescriptor_t operatorDesc, miopenProblemDirection_t direction)</arglist>
    </member>
    <member kind="function">
      <type>miopenStatus_t</type>
      <name>miopenDestroyProblem</name>
      <anchorfile>group__find2.html</anchorfile>
      <anchor>gadd378dce1c7c8686c492decaada8a8bc</anchor>
      <arglist>(miopenProblem_t problem)</arglist>
    </member>
    <member kind="function">
      <type>miopenStatus_t</type>
      <name>miopenSetProblemTensorDescriptor</name>
      <anchorfile>group__find2.html</anchorfile>
      <anchor>gafbaf96e05f4c8ff0ab0b5081ec909cdf</anchor>
      <arglist>(miopenProblem_t problem, miopenTensorArgumentId_t id, const miopenTensorDescriptor_t descriptor)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>MIOPEN_DECLARE_OBJECT</name>
      <anchorfile>group__find2.html</anchorfile>
      <anchor>ga9d8376fb648ff974f91757f882fd665f</anchor>
      <arglist>(miopenFindOptions)</arglist>
    </member>
    <member kind="function">
      <type>miopenStatus_t</type>
      <name>miopenCreateFindOptions</name>
      <anchorfile>group__find2.html</anchorfile>
      <anchor>gae336156fdf21e987155101879d78cb75</anchor>
      <arglist>(miopenFindOptions_t *options)</arglist>
    </member>
    <member kind="function">
      <type>miopenStatus_t</type>
      <name>miopenDestroyFindOptions</name>
      <anchorfile>group__find2.html</anchorfile>
      <anchor>ga860acc71b6724dbbefbad2006e3c9248</anchor>
      <arglist>(miopenFindOptions_t options)</arglist>
    </member>
    <member kind="function">
      <type>miopenStatus_t</type>
      <name>miopenSetFindOptionTuning</name>
      <anchorfile>group__find2.html</anchorfile>
      <anchor>gaa3dee344f811055f5c95dc88cd18abd1</anchor>
      <arglist>(miopenFindOptions_t options, int value)</arglist>
    </member>
    <member kind="function">
      <type>miopenStatus_t</type>
      <name>miopenSetFindOptionResultsOrder</name>
      <anchorfile>group__find2.html</anchorfile>
      <anchor>gaaba2c9d169a0b79ebbbc15a3ac573a09</anchor>
      <arglist>(miopenFindOptions_t options, miopenFindResultsOrder_t value)</arglist>
    </member>
    <member kind="function">
      <type>miopenStatus_t</type>
      <name>miopenSetFindOptionWorkspaceLimit</name>
      <anchorfile>group__find2.html</anchorfile>
      <anchor>ga7237650148d17d93cc357327bb363893</anchor>
      <arglist>(miopenFindOptions_t options, size_t value)</arglist>
    </member>
    <member kind="function">
      <type>miopenStatus_t</type>
      <name>miopenSetFindOptionPreallocatedWorkspace</name>
      <anchorfile>group__find2.html</anchorfile>
      <anchor>gad1654e888fff200be7639bf16bdcbc3c</anchor>
      <arglist>(miopenFindOptions_t options, void *buffer, size_t size)</arglist>
    </member>
    <member kind="function">
      <type>miopenStatus_t</type>
      <name>miopenSetFindOptionPreallocatedTensor</name>
      <anchorfile>group__find2.html</anchorfile>
      <anchor>ga7265f2f86c90158c3c9bafc516908214</anchor>
      <arglist>(miopenFindOptions_t options, miopenTensorArgumentId_t id, void *buffer)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>MIOPEN_DECLARE_OBJECT</name>
      <anchorfile>group__find2.html</anchorfile>
      <anchor>ga8cca5ef400a6ddb430fe618769f5a6d7</anchor>
      <arglist>(miopenSolution)</arglist>
    </member>
    <member kind="function">
      <type>miopenStatus_t</type>
      <name>miopenFindSolutions</name>
      <anchorfile>group__find2.html</anchorfile>
      <anchor>gaa3c5212a8cfb8913e3536cff5df7de7d</anchor>
      <arglist>(miopenHandle_t handle, miopenProblem_t problem, miopenFindOptions_t options, miopenSolution_t *solutions, size_t *numSolutions, size_t maxSolutions)</arglist>
    </member>
    <member kind="function">
      <type>miopenStatus_t</type>
      <name>miopenRunSolution</name>
      <anchorfile>group__find2.html</anchorfile>
      <anchor>gab63fa12d932b163facc83c64d9e24cc1</anchor>
      <arglist>(miopenHandle_t handle, miopenSolution_t solution, size_t nInputs, const miopenTensorArgument_t *tensors, void *workspace, size_t workspaceSize)</arglist>
    </member>
    <member kind="function">
      <type>miopenStatus_t</type>
      <name>miopenDestroySolution</name>
      <anchorfile>group__find2.html</anchorfile>
      <anchor>gac049412a8595cb334890d907d0816f1a</anchor>
      <arglist>(miopenSolution_t solution)</arglist>
    </member>
    <member kind="function">
      <type>miopenStatus_t</type>
      <name>miopenLoadSolution</name>
      <anchorfile>group__find2.html</anchorfile>
      <anchor>gac48d517c378b83f1c6c4648b18405f97</anchor>
      <arglist>(miopenSolution_t *solution, const char *data, size_t size)</arglist>
    </member>
    <member kind="function">
      <type>miopenStatus_t</type>
      <name>miopenSaveSolution</name>
      <anchorfile>group__find2.html</anchorfile>
      <anchor>gac7125760ca7876ae28fdd6817fcb5841</anchor>
      <arglist>(miopenSolution_t solution, char *data)</arglist>
    </member>
    <member kind="function">
      <type>miopenStatus_t</type>
      <name>miopenGetSolutionSize</name>
      <anchorfile>group__find2.html</anchorfile>
      <anchor>ga9978589af89369b8bba9af932985b29d</anchor>
      <arglist>(miopenSolution_t solution, size_t *size)</arglist>
    </member>
    <member kind="function">
      <type>miopenStatus_t</type>
      <name>miopenGetSolutionWorkspaceSize</name>
      <anchorfile>group__find2.html</anchorfile>
      <anchor>gaa94f17f9ac9ffe58a80d02e2d09e2b15</anchor>
      <arglist>(miopenSolution_t solution, size_t *workspaceSize)</arglist>
    </member>
    <member kind="function">
      <type>miopenStatus_t</type>
      <name>miopenGetSolutionTime</name>
      <anchorfile>group__find2.html</anchorfile>
      <anchor>ga3f109a28f79a609f733b1c832c1e52b7</anchor>
      <arglist>(miopenSolution_t solution, float *time)</arglist>
    </member>
    <member kind="function">
      <type>miopenStatus_t</type>
      <name>miopenGetSolutionSolverId</name>
      <anchorfile>group__find2.html</anchorfile>
      <anchor>ga27761e9b6c870fe094e2d3a5a40fac79</anchor>
      <arglist>(miopenSolution_t solution, uint64_t *solverId)</arglist>
    </member>
    <member kind="function">
      <type>miopenStatus_t</type>
      <name>miopenGetSolverIdConvAlgorithm</name>
      <anchorfile>group__find2.html</anchorfile>
      <anchor>gacc4d666af80bb7e661bb13cdfbdbf9e5</anchor>
      <arglist>(uint64_t solverId, miopenConvAlgorithm_t *result)</arglist>
    </member>
    <member kind="function">
      <type>miopenStatus_t</type>
      <name>miopenCreateActivationProblem</name>
      <anchorfile>group__find2.html</anchorfile>
      <anchor>gadc3adb3d81d376bc016950fbcf59c636</anchor>
      <arglist>(miopenProblem_t *problem, miopenActivationDescriptor_t operatorDesc, miopenProblemDirection_t direction)</arglist>
    </member>
    <member kind="function">
      <type>miopenStatus_t</type>
      <name>miopenFuseProblems</name>
      <anchorfile>group__find2.html</anchorfile>
      <anchor>ga97cbacdb934a4a9477043e9e8ead4d92</anchor>
      <arglist>(miopenProblem_t problem1, miopenProblem_t problem2)</arglist>
    </member>
    <member kind="function">
      <type>miopenStatus_t</type>
      <name>miopenCreateBiasProblem</name>
      <anchorfile>group__find2.html</anchorfile>
      <anchor>gaef75c299c6a5d68c95d4eb9d6bbd5606</anchor>
      <arglist>(miopenProblem_t *problem, miopenProblemDirection_t direction)</arglist>
    </member>
    <member kind="function">
      <type>miopenStatus_t</type>
      <name>miopenGetSumWorkspaceSize</name>
      <anchorfile>group__sum.html</anchorfile>
      <anchor>gaaedf9fa469c2305481ba2a7138691238</anchor>
      <arglist>(miopenHandle_t handle, const miopenTensorDescriptor_t xDesc, const int32_t dim, const miopenTensorDescriptor_t yDesc, size_t *sizeInBytes)</arglist>
    </member>
    <member kind="function">
      <type>miopenStatus_t</type>
      <name>miopenSumForward</name>
      <anchorfile>group__sum.html</anchorfile>
      <anchor>ga792e22dc02c7a8a5c7296ef35bf6f0e5</anchor>
      <arglist>(miopenHandle_t handle, miopenSumNanPropagation_t nanPropagation, void *workspace, size_t workspaceSizeInBytes, const miopenTensorDescriptor_t xDesc, const void *x, const int32_t dim, const miopenTensorDescriptor_t yDesc, void *y)</arglist>
    </member>
    <member kind="function">
      <type>miopenStatus_t</type>
      <name>miopenArgmaxForward</name>
      <anchorfile>miopen_8h.html</anchorfile>
      <anchor>ad71682910a5370d8a7a8f0d62b55a6de</anchor>
      <arglist>(miopenHandle_t handle, const miopenTensorDescriptor_t xDesc, const void *x, const int32_t dim, const miopenTensorDescriptor_t yDesc, void *y)</arglist>
    </member>
    <member kind="function">
      <type>miopenStatus_t</type>
      <name>miopenGroupNormForward</name>
      <anchorfile>group__groupnorm.html</anchorfile>
      <anchor>ga78187f1ce6f0529b0e66b2bcb0d42037</anchor>
      <arglist>(miopenHandle_t handle, miopenNormMode_t mode, const miopenTensorDescriptor_t xDesc, const void *x, const miopenTensorDescriptor_t weightDesc, const void *weight, const miopenTensorDescriptor_t biasDesc, const void *bias, const uint64_t num_groups, const float epsilon, const miopenTensorDescriptor_t yDesc, void *y, const miopenTensorDescriptor_t meanDesc, void *mean, const miopenTensorDescriptor_t rstdDesc, void *rstd)</arglist>
    </member>
  </compound>
  <compound kind="struct">
    <name>miopenConvAlgoPerf_t</name>
    <filename>structmiopen_conv_algo_perf__t.html</filename>
    <member kind="variable">
      <type>miopenConvFwdAlgorithm_t</type>
      <name>fwd_algo</name>
      <anchorfile>structmiopen_conv_algo_perf__t.html</anchorfile>
      <anchor>a486ab07b59bb35d3b5c9a5fc91113848</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>miopenConvBwdWeightsAlgorithm_t</type>
      <name>bwd_weights_algo</name>
      <anchorfile>structmiopen_conv_algo_perf__t.html</anchorfile>
      <anchor>a85b22349e9f06690e5de6dfa91e78af2</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>miopenConvBwdDataAlgorithm_t</type>
      <name>bwd_data_algo</name>
      <anchorfile>structmiopen_conv_algo_perf__t.html</anchorfile>
      <anchor>a4c4911f1fcbe6e1a189213b577aaec57</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>float</type>
      <name>time</name>
      <anchorfile>structmiopen_conv_algo_perf__t.html</anchorfile>
      <anchor>a8bb195c7e7d6254048e91646897bdf30</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>size_t</type>
      <name>memory</name>
      <anchorfile>structmiopen_conv_algo_perf__t.html</anchorfile>
      <anchor>a5fc53268011f327751ea0384e0486034</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="struct">
    <name>miopenConvSolution_t</name>
    <filename>structmiopen_conv_solution__t.html</filename>
    <member kind="variable">
      <type>float</type>
      <name>time</name>
      <anchorfile>structmiopen_conv_solution__t.html</anchorfile>
      <anchor>acaa5c3a144d37d4e2a5216154f9ffa59</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>size_t</type>
      <name>workspace_size</name>
      <anchorfile>structmiopen_conv_solution__t.html</anchorfile>
      <anchor>a884db41bf1a99e248c60c083158f8ae7</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>uint64_t</type>
      <name>solution_id</name>
      <anchorfile>structmiopen_conv_solution__t.html</anchorfile>
      <anchor>a3e658d77c459c10fad5b33b9d350a468</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>miopenConvAlgorithm_t</type>
      <name>algorithm</name>
      <anchorfile>structmiopen_conv_solution__t.html</anchorfile>
      <anchor>a142ac7ce088639c58f995ed59f79e5db</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="struct">
    <name>miopenTensorArgument_t</name>
    <filename>structmiopen_tensor_argument__t.html</filename>
    <member kind="variable">
      <type>miopenTensorArgumentId_t</type>
      <name>id</name>
      <anchorfile>structmiopen_tensor_argument__t.html</anchorfile>
      <anchor>a139891645dcfb2960e7387cd53615b2f</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>miopenTensorDescriptor_t *</type>
      <name>descriptor</name>
      <anchorfile>structmiopen_tensor_argument__t.html</anchorfile>
      <anchor>adff7d1c55a579d4181c9c07d941a10b5</anchor>
      <arglist></arglist>
    </member>
    <member kind="variable">
      <type>void *</type>
      <name>buffer</name>
      <anchorfile>structmiopen_tensor_argument__t.html</anchorfile>
      <anchor>ad009cbec445ff4b67be61ab4331670e7</anchor>
      <arglist></arglist>
    </member>
  </compound>
  <compound kind="group">
    <name>handle</name>
    <title>Handle</title>
    <filename>group__handle.html</filename>
    <member kind="typedef">
      <type>void *(*</type>
      <name>miopenAllocatorFunction</name>
      <anchorfile>group__handle.html</anchorfile>
      <anchor>gac2642558af91c051446ef9fab49bba31</anchor>
      <arglist>)(void *context, size_t sizeBytes)</arglist>
    </member>
    <member kind="typedef">
      <type>void(*</type>
      <name>miopenDeallocatorFunction</name>
      <anchorfile>group__handle.html</anchorfile>
      <anchor>ga54112962a0d7bcf6cc011a5ed19a4201</anchor>
      <arglist>)(void *context, void *memory)</arglist>
    </member>
    <member kind="enumeration">
      <type></type>
      <name>miopenStatus_t</name>
      <anchorfile>group__handle.html</anchorfile>
      <anchor>ga74216ea6ba6c5487d5aceb46eb35f1d6</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>miopenStatusSuccess</name>
      <anchorfile>group__handle.html</anchorfile>
      <anchor>gga74216ea6ba6c5487d5aceb46eb35f1d6a3fc50915c64e73ec736e0f9c2cb78129</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>miopenStatusNotInitialized</name>
      <anchorfile>group__handle.html</anchorfile>
      <anchor>gga74216ea6ba6c5487d5aceb46eb35f1d6abd80b3c675e17392162640b6a5cb7375</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>miopenStatusInvalidValue</name>
      <anchorfile>group__handle.html</anchorfile>
      <anchor>gga74216ea6ba6c5487d5aceb46eb35f1d6af0d655f9d71417a7143be6452651c1bb</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>miopenStatusBadParm</name>
      <anchorfile>group__handle.html</anchorfile>
      <anchor>gga74216ea6ba6c5487d5aceb46eb35f1d6abcd087689c69bcee83d4726487c8cca8</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>miopenStatusAllocFailed</name>
      <anchorfile>group__handle.html</anchorfile>
      <anchor>gga74216ea6ba6c5487d5aceb46eb35f1d6a9a1f9f181bb7d5649d3bb788760c489b</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>miopenStatusInternalError</name>
      <anchorfile>group__handle.html</anchorfile>
      <anchor>gga74216ea6ba6c5487d5aceb46eb35f1d6acfdd2d77791aae4ddd442f819189c19c</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>miopenStatusNotImplemented</name>
      <anchorfile>group__handle.html</anchorfile>
      <anchor>gga74216ea6ba6c5487d5aceb46eb35f1d6ab6a11c9af8b9e52ab982abd85673ce9e</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>miopenStatusUnknownError</name>
      <anchorfile>group__handle.html</anchorfile>
      <anchor>gga74216ea6ba6c5487d5aceb46eb35f1d6a1504690ef8823ed85612008c08277b88</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>miopenStatusUnsupportedOp</name>
      <anchorfile>group__handle.html</anchorfile>
      <anchor>gga74216ea6ba6c5487d5aceb46eb35f1d6a0199ef6922cf9b53fc3320d681915b73</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>miopenStatusGpuOperationsSkipped</name>
      <anchorfile>group__handle.html</anchorfile>
      <anchor>gga74216ea6ba6c5487d5aceb46eb35f1d6a0d00d1e79b4c27f3ca840c9729a8c58b</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>miopenStatusVersionMismatch</name>
      <anchorfile>group__handle.html</anchorfile>
      <anchor>gga74216ea6ba6c5487d5aceb46eb35f1d6a51681c1688f3fdf0609c798e43afd171</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumeration">
      <type></type>
      <name>miopenF8RoundingMode_t</name>
      <anchorfile>group__handle.html</anchorfile>
      <anchor>ga80bfa6e46fdc8764f04f29a03689d1fc</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>miopenF8RoundingModeStandard</name>
      <anchorfile>group__handle.html</anchorfile>
      <anchor>gga80bfa6e46fdc8764f04f29a03689d1fcafbe24189bfd43c73fe839aa4ea2968d7</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>miopenF8RoundingModeStochastic</name>
      <anchorfile>group__handle.html</anchorfile>
      <anchor>gga80bfa6e46fdc8764f04f29a03689d1fcafe52ff63273ab4eb21714c050f4abfb3</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>MIOPEN_DECLARE_OBJECT</name>
      <anchorfile>group__handle.html</anchorfile>
      <anchor>gaaf9a62fe06372c918be22db25cf13007</anchor>
      <arglist>(miopenHandle)</arglist>
    </member>
    <member kind="function">
      <type>const char *</type>
      <name>miopenGetErrorString</name>
      <anchorfile>group__handle.html</anchorfile>
      <anchor>gac6c00a7bd50c44b815976c276ae4d9b4</anchor>
      <arglist>(miopenStatus_t error)</arglist>
    </member>
    <member kind="function">
      <type>miopenStatus_t</type>
      <name>miopenGetVersion</name>
      <anchorfile>group__handle.html</anchorfile>
      <anchor>ga6e4d06e38316d75e5d95cb6fde5c7c70</anchor>
      <arglist>(size_t *major, size_t *minor, size_t *patch)</arglist>
    </member>
    <member kind="function">
      <type>miopenStatus_t</type>
      <name>miopenCreate</name>
      <anchorfile>group__handle.html</anchorfile>
      <anchor>gad7924dd946f447575547e0e1bddb2fbe</anchor>
      <arglist>(miopenHandle_t *handle)</arglist>
    </member>
    <member kind="function">
      <type>miopenStatus_t</type>
      <name>miopenCreateWithStream</name>
      <anchorfile>group__handle.html</anchorfile>
      <anchor>ga104432242babf6a4c66b09a43e7081d4</anchor>
      <arglist>(miopenHandle_t *handle, miopenAcceleratorQueue_t stream)</arglist>
    </member>
    <member kind="function">
      <type>miopenStatus_t</type>
      <name>miopenDestroy</name>
      <anchorfile>group__handle.html</anchorfile>
      <anchor>ga20296fd22692cbaace8ad86a0a08b869</anchor>
      <arglist>(miopenHandle_t handle)</arglist>
    </member>
    <member kind="function">
      <type>miopenStatus_t</type>
      <name>miopenSetStream</name>
      <anchorfile>group__handle.html</anchorfile>
      <anchor>gadd90259644bc8edc5cb42070a66ed651</anchor>
      <arglist>(miopenHandle_t handle, miopenAcceleratorQueue_t streamID)</arglist>
    </member>
    <member kind="function">
      <type>miopenStatus_t</type>
      <name>miopenGetStream</name>
      <anchorfile>group__handle.html</anchorfile>
      <anchor>ga64e9eb389d9c8e8793908052dffbf138</anchor>
      <arglist>(miopenHandle_t handle, miopenAcceleratorQueue_t *streamID)</arglist>
    </member>
    <member kind="function">
      <type>miopenStatus_t</type>
      <name>miopenSetAllocator</name>
      <anchorfile>group__handle.html</anchorfile>
      <anchor>ga7e5ef2b84c12704b9ad9daf551d7bd31</anchor>
      <arglist>(miopenHandle_t handle, miopenAllocatorFunction allocator, miopenDeallocatorFunction deallocator, void *allocatorContext)</arglist>
    </member>
    <member kind="function">
      <type>miopenStatus_t</type>
      <name>miopenGetKernelTime</name>
      <anchorfile>group__handle.html</anchorfile>
      <anchor>gada439cdf3dac26d2e054f75158993fac</anchor>
      <arglist>(miopenHandle_t handle, float *time)</arglist>
    </member>
    <member kind="function">
      <type>miopenStatus_t</type>
      <name>miopenEnableProfiling</name>
      <anchorfile>group__handle.html</anchorfile>
      <anchor>ga6873d2a57e63cd81a682e3c62900e813</anchor>
      <arglist>(miopenHandle_t handle, bool enable)</arglist>
    </member>
  </compound>
  <compound kind="group">
    <name>tensor</name>
    <title>Tensor</title>
    <filename>group__tensor.html</filename>
    <member kind="enumeration">
      <type></type>
      <name>miopenDataType_t</name>
      <anchorfile>group__tensor.html</anchorfile>
      <anchor>ga8bf94a23997093548ddf866c94c4ac17</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>miopenHalf</name>
      <anchorfile>miopen_8h.html</anchorfile>
      <anchor>ga8bf94a23997093548ddf866c94c4ac17a6e9ac7a764797dde5f1b28d3516ba69f</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>miopenFloat</name>
      <anchorfile>miopen_8h.html</anchorfile>
      <anchor>ga8bf94a23997093548ddf866c94c4ac17a33115d427e71a2759a28dfea283d5eeb</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>miopenInt32</name>
      <anchorfile>miopen_8h.html</anchorfile>
      <anchor>ga8bf94a23997093548ddf866c94c4ac17a6aa2b89e7e323df62ba76bc62b6d8c0c</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>miopenInt8</name>
      <anchorfile>miopen_8h.html</anchorfile>
      <anchor>ga8bf94a23997093548ddf866c94c4ac17a6a5fcabf2ddece1384141f68b0bd34cc</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>miopenBFloat16</name>
      <anchorfile>miopen_8h.html</anchorfile>
      <anchor>ga8bf94a23997093548ddf866c94c4ac17a656b49db33ff9a982cbcbcfd2710bb43</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>miopenDouble</name>
      <anchorfile>miopen_8h.html</anchorfile>
      <anchor>ga8bf94a23997093548ddf866c94c4ac17a90310ef7026c1f362feb65cdd90a6e44</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>miopenFloat8</name>
      <anchorfile>miopen_8h.html</anchorfile>
      <anchor>ga8bf94a23997093548ddf866c94c4ac17af035994430ebff11d40c896fca7624e4</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>miopenBFloat8</name>
      <anchorfile>miopen_8h.html</anchorfile>
      <anchor>ga8bf94a23997093548ddf866c94c4ac17a785652761965bb5a33008904660dd6bb</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumeration">
      <type></type>
      <name>miopenTensorLayout_t</name>
      <anchorfile>group__tensor.html</anchorfile>
      <anchor>ga4997f98fa2256f41736a184fa1574f8c</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>miopenTensorNCHW</name>
      <anchorfile>miopen_8h.html</anchorfile>
      <anchor>ga4997f98fa2256f41736a184fa1574f8ca3640618e74eb72dbdfee36f9cbb408bb</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>miopenTensorNHWC</name>
      <anchorfile>miopen_8h.html</anchorfile>
      <anchor>ga4997f98fa2256f41736a184fa1574f8ca1657aaece7d521bd728632a953e2f55a</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>miopenTensorCHWN</name>
      <anchorfile>miopen_8h.html</anchorfile>
      <anchor>ga4997f98fa2256f41736a184fa1574f8ca05a571279bec2ef5c20eb66c09616a3e</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>miopenTensorNCHWc4</name>
      <anchorfile>miopen_8h.html</anchorfile>
      <anchor>ga4997f98fa2256f41736a184fa1574f8caff0e70e620fa03f6383f666c19977fdd</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>miopenTensorNCHWc8</name>
      <anchorfile>miopen_8h.html</anchorfile>
      <anchor>ga4997f98fa2256f41736a184fa1574f8ca4e90e1a30efbe32d6e3854d4bf7c9bc3</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>miopenTensorCHWNc4</name>
      <anchorfile>miopen_8h.html</anchorfile>
      <anchor>ga4997f98fa2256f41736a184fa1574f8ca4ca640612b360e10b1e93fa7a89c0741</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>miopenTensorCHWNc8</name>
      <anchorfile>miopen_8h.html</anchorfile>
      <anchor>ga4997f98fa2256f41736a184fa1574f8ca9cf6d72886e9754658d6c511a3c29c44</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>miopenTensorNCDHW</name>
      <anchorfile>miopen_8h.html</anchorfile>
      <anchor>ga4997f98fa2256f41736a184fa1574f8ca727b31912781101a907b27391534c1c7</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>miopenTensorNDHWC</name>
      <anchorfile>miopen_8h.html</anchorfile>
      <anchor>ga4997f98fa2256f41736a184fa1574f8ca1facc75bcb03d9832c5606151a34795b</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumeration">
      <type></type>
      <name>miopenTensorOp_t</name>
      <anchorfile>group__tensor.html</anchorfile>
      <anchor>gaa2498dabff3e75d86471b25a2be9a198</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>miopenTensorOpAdd</name>
      <anchorfile>miopen_8h.html</anchorfile>
      <anchor>gaa2498dabff3e75d86471b25a2be9a198ad0cfac2b0c8f5668f62c2b156a7281e0</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>miopenTensorOpMul</name>
      <anchorfile>miopen_8h.html</anchorfile>
      <anchor>gaa2498dabff3e75d86471b25a2be9a198ae20aa1bb8363d01002ce601f9edfdbf2</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>miopenTensorOpMin</name>
      <anchorfile>miopen_8h.html</anchorfile>
      <anchor>gaa2498dabff3e75d86471b25a2be9a198a46cb1f291532f6b241b12b76e17ddbef</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>miopenTensorOpMax</name>
      <anchorfile>miopen_8h.html</anchorfile>
      <anchor>gaa2498dabff3e75d86471b25a2be9a198aed2a5c869fb47aa3f0aebd9945fa56da</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>MIOPEN_DECLARE_OBJECT</name>
      <anchorfile>group__tensor.html</anchorfile>
      <anchor>gaa709f2b37eaf01dc20d0a8c55b9dd91b</anchor>
      <arglist>(miopenTensorDescriptor)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>MIOPEN_DECLARE_OBJECT</name>
      <anchorfile>group__tensor.html</anchorfile>
      <anchor>ga4a71ec0b8e2e7064ccb76be40ce9b7dc</anchor>
      <arglist>(miopenSeqTensorDescriptor)</arglist>
    </member>
    <member kind="function">
      <type>miopenStatus_t</type>
      <name>miopenCreateTensorDescriptor</name>
      <anchorfile>group__tensor.html</anchorfile>
      <anchor>ga57867b185d47a1f10ddc50d642df784b</anchor>
      <arglist>(miopenTensorDescriptor_t *tensorDesc)</arglist>
    </member>
    <member kind="function">
      <type>miopenStatus_t</type>
      <name>miopenSet4dTensorDescriptor</name>
      <anchorfile>group__tensor.html</anchorfile>
      <anchor>ga7a9ed6faa48edc69f6d68cce68eaf8a1</anchor>
      <arglist>(miopenTensorDescriptor_t tensorDesc, miopenDataType_t dataType, int n, int c, int h, int w)</arglist>
    </member>
    <member kind="function">
      <type>miopenStatus_t</type>
      <name>miopenSetNdTensorDescriptorWithLayout</name>
      <anchorfile>group__tensor.html</anchorfile>
      <anchor>ga1ca0a412a2de95e5f1cfb041cc045410</anchor>
      <arglist>(miopenTensorDescriptor_t tensorDesc, miopenDataType_t dataType, miopenTensorLayout_t tensorLayout, const int *lens, int num_lens)</arglist>
    </member>
    <member kind="function">
      <type>miopenStatus_t</type>
      <name>miopenSet4dTensorDescriptorEx</name>
      <anchorfile>group__tensor.html</anchorfile>
      <anchor>ga8539b92c3aa163b90717fca82f7583c9</anchor>
      <arglist>(miopenTensorDescriptor_t tensorDesc, miopenDataType_t dataType, int n, int c, int h, int w, int nStride, int cStride, int hStride, int wStride)</arglist>
    </member>
    <member kind="function">
      <type>miopenStatus_t</type>
      <name>miopenGet4dTensorDescriptor</name>
      <anchorfile>group__tensor.html</anchorfile>
      <anchor>ga422ba168412b4b5ae7df9a27e008870e</anchor>
      <arglist>(miopenTensorDescriptor_t tensorDesc, miopenDataType_t *dataType, int *n, int *c, int *h, int *w, int *nStride, int *cStride, int *hStride, int *wStride)</arglist>
    </member>
    <member kind="function">
      <type>miopenStatus_t</type>
      <name>miopenSetTensorDescriptor</name>
      <anchorfile>group__tensor.html</anchorfile>
      <anchor>gae57f3c7b71aed10691abc2ac2a5f8f27</anchor>
      <arglist>(miopenTensorDescriptor_t tensorDesc, miopenDataType_t dataType, int nbDims, const int *dimsA, const int *stridesA)</arglist>
    </member>
    <member kind="function">
      <type>miopenStatus_t</type>
      <name>miopenSetTensorCastType</name>
      <anchorfile>group__tensor.html</anchorfile>
      <anchor>ga68f03f27b4afafdc7606178307a5b2a5</anchor>
      <arglist>(miopenTensorDescriptor_t tensorDesc, miopenDataType_t cast_type)</arglist>
    </member>
    <member kind="function">
      <type>miopenStatus_t</type>
      <name>miopenGetTensorDescriptorSize</name>
      <anchorfile>group__tensor.html</anchorfile>
      <anchor>gaa6907ccd3f4ebaeef047af1819d5cf05</anchor>
      <arglist>(miopenTensorDescriptor_t tensorDesc, int *size)</arglist>
    </member>
    <member kind="function">
      <type>miopenStatus_t</type>
      <name>miopenGetTensorDescriptor</name>
      <anchorfile>group__tensor.html</anchorfile>
      <anchor>ga0ac6a668ed3b2e580b45c39b2dbf8b8c</anchor>
      <arglist>(miopenTensorDescriptor_t tensorDesc, miopenDataType_t *dataType, int *dimsA, int *stridesA)</arglist>
    </member>
    <member kind="function">
      <type>miopenStatus_t</type>
      <name>miopenDestroyTensorDescriptor</name>
      <anchorfile>group__tensor.html</anchorfile>
      <anchor>gaab76aa1181416bea57840e67cdbe1934</anchor>
      <arglist>(miopenTensorDescriptor_t tensorDesc)</arglist>
    </member>
    <member kind="function">
      <type>miopenStatus_t</type>
      <name>miopenCreateSeqTensorDescriptor</name>
      <anchorfile>group__tensor.html</anchorfile>
      <anchor>ga924b379598666fd19496f8cb597a9eab</anchor>
      <arglist>(miopenSeqTensorDescriptor_t *tensorDesc)</arglist>
    </member>
    <member kind="function">
      <type>miopenStatus_t</type>
      <name>miopenDestroySeqTensorDescriptor</name>
      <anchorfile>group__tensor.html</anchorfile>
      <anchor>ga0a66a800ae274f35c1bd5b9182bc5e33</anchor>
      <arglist>(miopenSeqTensorDescriptor_t tensorDesc)</arglist>
    </member>
    <member kind="function">
      <type>miopenStatus_t</type>
      <name>miopenOpTensor</name>
      <anchorfile>group__tensor.html</anchorfile>
      <anchor>ga35d61860e1413ff6023b391fff70b7c0</anchor>
      <arglist>(miopenHandle_t handle, miopenTensorOp_t tensorOp, const void *alpha1, const miopenTensorDescriptor_t aDesc, const void *A, const void *alpha2, const miopenTensorDescriptor_t bDesc, const void *B, const void *beta, const miopenTensorDescriptor_t cDesc, void *C)</arglist>
    </member>
    <member kind="function">
      <type>miopenStatus_t</type>
      <name>miopenSetTensor</name>
      <anchorfile>group__tensor.html</anchorfile>
      <anchor>ga24fd91d999f4b4479b187ce20bcbb930</anchor>
      <arglist>(miopenHandle_t handle, const miopenTensorDescriptor_t yDesc, void *y, const void *alpha)</arglist>
    </member>
    <member kind="function">
      <type>miopenStatus_t</type>
      <name>miopenScaleTensor</name>
      <anchorfile>group__tensor.html</anchorfile>
      <anchor>ga5e1f5d98a1c4499c3209cb4ea9d01e12</anchor>
      <arglist>(miopenHandle_t handle, const miopenTensorDescriptor_t yDesc, void *y, const void *alpha)</arglist>
    </member>
    <member kind="function">
      <type>miopenStatus_t</type>
      <name>miopenGetTensorNumBytes</name>
      <anchorfile>group__tensor.html</anchorfile>
      <anchor>ga3727427906d20e31009071ff4d058357</anchor>
      <arglist>(miopenTensorDescriptor_t tensorDesc, size_t *numBytes)</arglist>
    </member>
    <member kind="function">
      <type>miopenStatus_t</type>
      <name>miopenTransformTensor</name>
      <anchorfile>group__tensor.html</anchorfile>
      <anchor>ga49a729b5c718cff326e57fca6397399c</anchor>
      <arglist>(miopenHandle_t handle, const void *alpha, const miopenTensorDescriptor_t xDesc, const void *x, const void *beta, const miopenTensorDescriptor_t yDesc, void *y)</arglist>
    </member>
  </compound>
  <compound kind="group">
    <name>convolutions</name>
    <title>Convolutions</title>
    <filename>group__convolutions.html</filename>
    <class kind="struct">miopenConvAlgoPerf_t</class>
    <class kind="struct">miopenConvSolution_t</class>
    <member kind="enumeration">
      <type></type>
      <name>miopenConvFwdAlgorithm_t</name>
      <anchorfile>group__convolutions.html</anchorfile>
      <anchor>ga5dd59dc3df4bcf9da4797c6169ad99c3</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>miopenConvolutionFwdAlgoGEMM</name>
      <anchorfile>group__convolutions.html</anchorfile>
      <anchor>gga5dd59dc3df4bcf9da4797c6169ad99c3a61b89a58eb19fea2207a17531e8205f7</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>miopenConvolutionFwdAlgoDirect</name>
      <anchorfile>group__convolutions.html</anchorfile>
      <anchor>gga5dd59dc3df4bcf9da4797c6169ad99c3ade2d29687c9fb8bf450d3c8b946e25b5</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>miopenConvolutionFwdAlgoFFT</name>
      <anchorfile>group__convolutions.html</anchorfile>
      <anchor>gga5dd59dc3df4bcf9da4797c6169ad99c3a154a04348f01564eff432c6432242f34</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>miopenConvolutionFwdAlgoWinograd</name>
      <anchorfile>group__convolutions.html</anchorfile>
      <anchor>gga5dd59dc3df4bcf9da4797c6169ad99c3a9e831d6f4b3ab127f370c3a3e55b2abf</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>miopenConvolutionFwdAlgoImplicitGEMM</name>
      <anchorfile>group__convolutions.html</anchorfile>
      <anchor>gga5dd59dc3df4bcf9da4797c6169ad99c3a5595e274c4012d54d83a9582e35ab2a1</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumeration">
      <type></type>
      <name>miopenConvBwdWeightsAlgorithm_t</name>
      <anchorfile>group__convolutions.html</anchorfile>
      <anchor>gaba316771c206839e54419b135027cbee</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>miopenConvolutionBwdWeightsAlgoGEMM</name>
      <anchorfile>group__convolutions.html</anchorfile>
      <anchor>ggaba316771c206839e54419b135027cbeea4302eada3444370b4f5a516c9352c19e</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>miopenConvolutionBwdWeightsAlgoDirect</name>
      <anchorfile>group__convolutions.html</anchorfile>
      <anchor>ggaba316771c206839e54419b135027cbeeacd485d0cbd7838b89bcbaa86add7fd44</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>miopenConvolutionBwdWeightsAlgoWinograd</name>
      <anchorfile>group__convolutions.html</anchorfile>
      <anchor>ggaba316771c206839e54419b135027cbeea7eda3bac3601384c44f6390d66ded524</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>miopenConvolutionBwdWeightsAlgoImplicitGEMM</name>
      <anchorfile>group__convolutions.html</anchorfile>
      <anchor>ggaba316771c206839e54419b135027cbeeaef65e6751c5dcd90eba6d7d198627698</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumeration">
      <type></type>
      <name>miopenConvBwdDataAlgorithm_t</name>
      <anchorfile>group__convolutions.html</anchorfile>
      <anchor>ga774e44db42d175d73c0d87272f6cdc05</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>miopenConvolutionBwdDataAlgoGEMM</name>
      <anchorfile>group__convolutions.html</anchorfile>
      <anchor>gga774e44db42d175d73c0d87272f6cdc05a1ea94b2548956ecbb6d6aaead535a38a</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>miopenConvolutionBwdDataAlgoDirect</name>
      <anchorfile>group__convolutions.html</anchorfile>
      <anchor>gga774e44db42d175d73c0d87272f6cdc05a123132561c7ebe6a6d022016bc395658</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>miopenConvolutionBwdDataAlgoFFT</name>
      <anchorfile>group__convolutions.html</anchorfile>
      <anchor>gga774e44db42d175d73c0d87272f6cdc05a3c26d3cccb4763cc3370b72f71f11f72</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>miopenConvolutionBwdDataAlgoWinograd</name>
      <anchorfile>group__convolutions.html</anchorfile>
      <anchor>gga774e44db42d175d73c0d87272f6cdc05ae4f98a414a6b1be0e14a9912b0459f54</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>miopenTransposeBwdDataAlgoGEMM</name>
      <anchorfile>group__convolutions.html</anchorfile>
      <anchor>gga774e44db42d175d73c0d87272f6cdc05a0259649d7b2d71a88231257add330ea1</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>miopenConvolutionBwdDataAlgoImplicitGEMM</name>
      <anchorfile>group__convolutions.html</anchorfile>
      <anchor>gga774e44db42d175d73c0d87272f6cdc05af68c8086106d6dd9c70be60e519e4a0e</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumeration">
      <type></type>
      <name>miopenConvAlgorithm_t</name>
      <anchorfile>group__convolutions.html</anchorfile>
      <anchor>ga3ba938002b32a963925c7cfce51ce15a</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>miopenConvolutionAlgoGEMM</name>
      <anchorfile>group__convolutions.html</anchorfile>
      <anchor>gga3ba938002b32a963925c7cfce51ce15aafbc6bee0271b18b1c38a47b6bfc71490</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>miopenConvolutionAlgoDirect</name>
      <anchorfile>group__convolutions.html</anchorfile>
      <anchor>gga3ba938002b32a963925c7cfce51ce15aa4ed1617fee46c3c345707f4111b42155</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>miopenConvolutionAlgoFFT</name>
      <anchorfile>group__convolutions.html</anchorfile>
      <anchor>gga3ba938002b32a963925c7cfce51ce15aa9e67d70ca65f50b5b2f10c9b60399f68</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>miopenConvolutionAlgoWinograd</name>
      <anchorfile>group__convolutions.html</anchorfile>
      <anchor>gga3ba938002b32a963925c7cfce51ce15aa9b50ef38f49608a9f07658920923308c</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>miopenConvolutionAlgoImplicitGEMM</name>
      <anchorfile>group__convolutions.html</anchorfile>
      <anchor>gga3ba938002b32a963925c7cfce51ce15aaf3f2d5dd07e440e069264469c04c2168</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumeration">
      <type></type>
      <name>miopenConvolutionMode_t</name>
      <anchorfile>group__convolutions.html</anchorfile>
      <anchor>ga91bcbdad0e53c07078287a74799c88cd</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>miopenConvolution</name>
      <anchorfile>miopen_8h.html</anchorfile>
      <anchor>ga91bcbdad0e53c07078287a74799c88cdaf5c5ca99ec760a1d1016a671408766bc</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>miopenTranspose</name>
      <anchorfile>miopen_8h.html</anchorfile>
      <anchor>ga91bcbdad0e53c07078287a74799c88cdaaa6f0f5913493a335cbb4389c66f4736</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>miopenGroupConv</name>
      <anchorfile>miopen_8h.html</anchorfile>
      <anchor>ga91bcbdad0e53c07078287a74799c88cdaa839e7fb549d7ee872485b571b8e692a</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>miopenDepthwise</name>
      <anchorfile>miopen_8h.html</anchorfile>
      <anchor>ga91bcbdad0e53c07078287a74799c88cda43f0c77533ba896fcd8dc6e9913e9ec5</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumeration">
      <type></type>
      <name>miopenConvolutionAttrib_t</name>
      <anchorfile>group__convolutions.html</anchorfile>
      <anchor>ga784559bf30977ad39cbc491727eae485</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>MIOPEN_CONVOLUTION_ATTRIB_FP16_ALT_IMPL</name>
      <anchorfile>miopen_8h.html</anchorfile>
      <anchor>ga784559bf30977ad39cbc491727eae485ae736f64b13f2adec7f2a6f1202abb5b2</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>MIOPEN_CONVOLUTION_ATTRIB_DETERMINISTIC</name>
      <anchorfile>miopen_8h.html</anchorfile>
      <anchor>ga784559bf30977ad39cbc491727eae485a1fe1be172f9231f2a251d048b4cbbe40</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>MIOPEN_CONVOLUTION_ATTRIB_FP8_ROUNDING_MODE</name>
      <anchorfile>miopen_8h.html</anchorfile>
      <anchor>ga784559bf30977ad39cbc491727eae485a33f92e9eb6d42b8da1c774fcbad24625</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>MIOPEN_DECLARE_OBJECT</name>
      <anchorfile>group__convolutions.html</anchorfile>
      <anchor>ga10b4762521ca884d7c93cfe8634b38cb</anchor>
      <arglist>(miopenConvolutionDescriptor)</arglist>
    </member>
    <member kind="function">
      <type>miopenStatus_t</type>
      <name>miopenCreateConvolutionDescriptor</name>
      <anchorfile>group__convolutions.html</anchorfile>
      <anchor>ga6a31011f7c0719726a73d8f5bea388dc</anchor>
      <arglist>(miopenConvolutionDescriptor_t *convDesc)</arglist>
    </member>
    <member kind="function">
      <type>miopenStatus_t</type>
      <name>miopenInitConvolutionDescriptor</name>
      <anchorfile>group__convolutions.html</anchorfile>
      <anchor>ga37d3fbee7a7cd36ecb22d9ab23c80ce3</anchor>
      <arglist>(miopenConvolutionDescriptor_t convDesc, miopenConvolutionMode_t c_mode, int pad_h, int pad_w, int stride_h, int stride_w, int dilation_h, int dilation_w)</arglist>
    </member>
    <member kind="function">
      <type>miopenStatus_t</type>
      <name>miopenInitConvolutionNdDescriptor</name>
      <anchorfile>group__convolutions.html</anchorfile>
      <anchor>ga06f1ca4633a112373f4d353ed819bf10</anchor>
      <arglist>(miopenConvolutionDescriptor_t convDesc, int spatialDim, const int *padA, const int *strideA, const int *dilationA, miopenConvolutionMode_t c_mode)</arglist>
    </member>
    <member kind="function">
      <type>miopenStatus_t</type>
      <name>miopenGetConvolutionSpatialDim</name>
      <anchorfile>group__convolutions.html</anchorfile>
      <anchor>gab9c592d2e21e2841fb4e120ebd46a2d1</anchor>
      <arglist>(miopenConvolutionDescriptor_t convDesc, int *spatialDim)</arglist>
    </member>
    <member kind="function">
      <type>miopenStatus_t</type>
      <name>miopenGetConvolutionDescriptor</name>
      <anchorfile>group__convolutions.html</anchorfile>
      <anchor>gaf59a6be12730a207c15d068a0b1fe52f</anchor>
      <arglist>(miopenConvolutionDescriptor_t convDesc, miopenConvolutionMode_t *c_mode, int *pad_h, int *pad_w, int *stride_h, int *stride_w, int *dilation_h, int *dilation_w)</arglist>
    </member>
    <member kind="function">
      <type>miopenStatus_t</type>
      <name>miopenGetConvolutionNdDescriptor</name>
      <anchorfile>group__convolutions.html</anchorfile>
      <anchor>ga7288233f65445ca372a3d86c75449294</anchor>
      <arglist>(miopenConvolutionDescriptor_t convDesc, int requestedSpatialDim, int *spatialDim, int *padA, int *strideA, int *dilationA, miopenConvolutionMode_t *c_mode)</arglist>
    </member>
    <member kind="function">
      <type>miopenStatus_t</type>
      <name>miopenGetConvolutionGroupCount</name>
      <anchorfile>group__convolutions.html</anchorfile>
      <anchor>ga245126fedf3a5c7abdd9cf6dcb959692</anchor>
      <arglist>(miopenConvolutionDescriptor_t convDesc, int *groupCount)</arglist>
    </member>
    <member kind="function">
      <type>miopenStatus_t</type>
      <name>miopenSetConvolutionGroupCount</name>
      <anchorfile>group__convolutions.html</anchorfile>
      <anchor>gad1bdda28a9f5a4a8ea9b718681ac72c2</anchor>
      <arglist>(miopenConvolutionDescriptor_t convDesc, int groupCount)</arglist>
    </member>
    <member kind="function">
      <type>miopenStatus_t</type>
      <name>miopenSetTransposeConvOutputPadding</name>
      <anchorfile>group__convolutions.html</anchorfile>
      <anchor>gab17d87360f1931c8dc01baea31cfe412</anchor>
      <arglist>(miopenConvolutionDescriptor_t convDesc, int adj_h, int adj_w)</arglist>
    </member>
    <member kind="function">
      <type>miopenStatus_t</type>
      <name>miopenSetTransposeConvNdOutputPadding</name>
      <anchorfile>group__convolutions.html</anchorfile>
      <anchor>gaad7d8adb6d907646ba23de7e506c5e5b</anchor>
      <arglist>(miopenConvolutionDescriptor_t convDesc, int spatialDim, const int *adjA)</arglist>
    </member>
    <member kind="function">
      <type>miopenStatus_t</type>
      <name>miopenGetConvolutionForwardOutputDim</name>
      <anchorfile>group__convolutions.html</anchorfile>
      <anchor>ga5aae8bdb57c4b48263cdeba2f9f76ef0</anchor>
      <arglist>(miopenConvolutionDescriptor_t convDesc, const miopenTensorDescriptor_t inputTensorDesc, const miopenTensorDescriptor_t filterDesc, int *n, int *c, int *h, int *w)</arglist>
    </member>
    <member kind="function">
      <type>miopenStatus_t</type>
      <name>miopenGetConvolutionNdForwardOutputDim</name>
      <anchorfile>group__convolutions.html</anchorfile>
      <anchor>ga4b71519741fb242c14b8e92f104301ee</anchor>
      <arglist>(miopenConvolutionDescriptor_t convDesc, const miopenTensorDescriptor_t inputTensorDesc, const miopenTensorDescriptor_t filterDesc, int *nDim, int *outputTensorDimA)</arglist>
    </member>
    <member kind="function">
      <type>miopenStatus_t</type>
      <name>miopenDestroyConvolutionDescriptor</name>
      <anchorfile>group__convolutions.html</anchorfile>
      <anchor>gacd21e57581808b98458dfa93c41a4ce3</anchor>
      <arglist>(miopenConvolutionDescriptor_t convDesc)</arglist>
    </member>
    <member kind="function">
      <type>miopenStatus_t</type>
      <name>miopenSetConvolutionAttribute</name>
      <anchorfile>group__convolutions.html</anchorfile>
      <anchor>ga92f38ddd274388a05d77001dac71e7c0</anchor>
      <arglist>(miopenConvolutionDescriptor_t convDesc, const miopenConvolutionAttrib_t attr, int value)</arglist>
    </member>
    <member kind="function">
      <type>miopenStatus_t</type>
      <name>miopenGetConvolutionAttribute</name>
      <anchorfile>group__convolutions.html</anchorfile>
      <anchor>ga41c95d7e368391df4e63539c88c53047</anchor>
      <arglist>(miopenConvolutionDescriptor_t convDesc, const miopenConvolutionAttrib_t attr, int *value)</arglist>
    </member>
    <member kind="function">
      <type>miopenStatus_t</type>
      <name>miopenConvolutionForwardGetSolutionCount</name>
      <anchorfile>group__convolutions.html</anchorfile>
      <anchor>gaf9dbf5fdad1bc5faf1a9184ab2099439</anchor>
      <arglist>(miopenHandle_t handle, const miopenTensorDescriptor_t wDesc, const miopenTensorDescriptor_t xDesc, const miopenConvolutionDescriptor_t convDesc, const miopenTensorDescriptor_t yDesc, size_t *solutionCount)</arglist>
    </member>
    <member kind="function">
      <type>miopenStatus_t</type>
      <name>miopenConvolutionForwardGetSolution</name>
      <anchorfile>group__convolutions.html</anchorfile>
      <anchor>gaf0c92cab22c81d632d596d30757dcba5</anchor>
      <arglist>(miopenHandle_t handle, const miopenTensorDescriptor_t wDesc, const miopenTensorDescriptor_t xDesc, const miopenConvolutionDescriptor_t convDesc, const miopenTensorDescriptor_t yDesc, const size_t maxSolutionCount, size_t *solutionCount, miopenConvSolution_t *solutions)</arglist>
    </member>
    <member kind="function">
      <type>miopenStatus_t</type>
      <name>miopenConvolutionForwardGetSolutionWorkspaceSize</name>
      <anchorfile>group__convolutions.html</anchorfile>
      <anchor>ga1960157add7bdd508dc345ea98801912</anchor>
      <arglist>(miopenHandle_t handle, const miopenTensorDescriptor_t wDesc, const miopenTensorDescriptor_t xDesc, const miopenConvolutionDescriptor_t convDesc, const miopenTensorDescriptor_t yDesc, const uint64_t solution_id, size_t *workSpaceSize)</arglist>
    </member>
    <member kind="function">
      <type>miopenStatus_t</type>
      <name>miopenConvolutionForwardCompileSolution</name>
      <anchorfile>group__convolutions.html</anchorfile>
      <anchor>gabacb81f250e154b92c628defe53a1a6b</anchor>
      <arglist>(miopenHandle_t handle, const miopenTensorDescriptor_t wDesc, const miopenTensorDescriptor_t xDesc, const miopenConvolutionDescriptor_t convDesc, const miopenTensorDescriptor_t yDesc, const uint64_t solution_id)</arglist>
    </member>
    <member kind="function">
      <type>miopenStatus_t</type>
      <name>miopenConvolutionForwardImmediate</name>
      <anchorfile>group__convolutions.html</anchorfile>
      <anchor>ga14fe027d4bb473a448eb26fe79e61002</anchor>
      <arglist>(miopenHandle_t handle, const miopenTensorDescriptor_t wDesc, const void *w, const miopenTensorDescriptor_t xDesc, const void *x, const miopenConvolutionDescriptor_t convDesc, const miopenTensorDescriptor_t yDesc, void *y, void *workSpace, size_t workSpaceSize, const uint64_t solution_id)</arglist>
    </member>
    <member kind="function">
      <type>miopenStatus_t</type>
      <name>miopenConvolutionBackwardDataGetSolutionCount</name>
      <anchorfile>group__convolutions.html</anchorfile>
      <anchor>gac245152e4fe078d089f2ac9247aed048</anchor>
      <arglist>(miopenHandle_t handle, const miopenTensorDescriptor_t dyDesc, const miopenTensorDescriptor_t wDesc, const miopenConvolutionDescriptor_t convDesc, const miopenTensorDescriptor_t dxDesc, size_t *solutionCount)</arglist>
    </member>
    <member kind="function">
      <type>miopenStatus_t</type>
      <name>miopenConvolutionBackwardDataGetSolution</name>
      <anchorfile>group__convolutions.html</anchorfile>
      <anchor>ga8c7f4bfae33e8d489c75c5e3717321f8</anchor>
      <arglist>(miopenHandle_t handle, const miopenTensorDescriptor_t dyDesc, const miopenTensorDescriptor_t wDesc, const miopenConvolutionDescriptor_t convDesc, const miopenTensorDescriptor_t dxDesc, const size_t maxSolutionCount, size_t *solutionCount, miopenConvSolution_t *solutions)</arglist>
    </member>
    <member kind="function">
      <type>miopenStatus_t</type>
      <name>miopenConvolutionBackwardDataGetSolutionWorkspaceSize</name>
      <anchorfile>group__convolutions.html</anchorfile>
      <anchor>gafdf6485c7f4ca08822feb918f5078f09</anchor>
      <arglist>(miopenHandle_t handle, const miopenTensorDescriptor_t dyDesc, const miopenTensorDescriptor_t wDesc, const miopenConvolutionDescriptor_t convDesc, const miopenTensorDescriptor_t dxDesc, const uint64_t solution_id, size_t *workSpaceSize)</arglist>
    </member>
    <member kind="function">
      <type>miopenStatus_t</type>
      <name>miopenConvolutionBackwardDataCompileSolution</name>
      <anchorfile>group__convolutions.html</anchorfile>
      <anchor>ga16cd48938728e81468a1e80ccd07822f</anchor>
      <arglist>(miopenHandle_t handle, const miopenTensorDescriptor_t dyDesc, const miopenTensorDescriptor_t wDesc, const miopenConvolutionDescriptor_t convDesc, const miopenTensorDescriptor_t dxDesc, const uint64_t solution_id)</arglist>
    </member>
    <member kind="function">
      <type>miopenStatus_t</type>
      <name>miopenConvolutionBackwardDataImmediate</name>
      <anchorfile>group__convolutions.html</anchorfile>
      <anchor>gaacefbf47cf57a6ade413ae23bbf5cabc</anchor>
      <arglist>(miopenHandle_t handle, const miopenTensorDescriptor_t dyDesc, const void *dy, const miopenTensorDescriptor_t wDesc, const void *w, const miopenConvolutionDescriptor_t convDesc, const miopenTensorDescriptor_t dxDesc, void *dx, void *workSpace, size_t workSpaceSize, const uint64_t solution_id)</arglist>
    </member>
    <member kind="function">
      <type>miopenStatus_t</type>
      <name>miopenConvolutionBackwardWeightsGetSolutionCount</name>
      <anchorfile>group__convolutions.html</anchorfile>
      <anchor>gacf0d3225d92394cf8aad48da3902b64c</anchor>
      <arglist>(miopenHandle_t handle, const miopenTensorDescriptor_t dyDesc, const miopenTensorDescriptor_t xDesc, const miopenConvolutionDescriptor_t convDesc, const miopenTensorDescriptor_t dwDesc, size_t *solutionCount)</arglist>
    </member>
    <member kind="function">
      <type>miopenStatus_t</type>
      <name>miopenConvolutionBackwardWeightsGetSolution</name>
      <anchorfile>group__convolutions.html</anchorfile>
      <anchor>ga720035aea137cd8b2fb5ea22afd08ea4</anchor>
      <arglist>(miopenHandle_t handle, const miopenTensorDescriptor_t dyDesc, const miopenTensorDescriptor_t xDesc, const miopenConvolutionDescriptor_t convDesc, const miopenTensorDescriptor_t dwDesc, const size_t maxSolutionCount, size_t *solutionCount, miopenConvSolution_t *solutions)</arglist>
    </member>
    <member kind="function">
      <type>miopenStatus_t</type>
      <name>miopenConvolutionBackwardWeightsGetSolutionWorkspaceSize</name>
      <anchorfile>group__convolutions.html</anchorfile>
      <anchor>gaecbba471182df8fa973a95d5dedd7259</anchor>
      <arglist>(miopenHandle_t handle, const miopenTensorDescriptor_t dyDesc, const miopenTensorDescriptor_t xDesc, const miopenConvolutionDescriptor_t convDesc, const miopenTensorDescriptor_t dwDesc, const uint64_t solution_id, size_t *workSpaceSize)</arglist>
    </member>
    <member kind="function">
      <type>miopenStatus_t</type>
      <name>miopenConvolutionBackwardWeightsCompileSolution</name>
      <anchorfile>group__convolutions.html</anchorfile>
      <anchor>ga4df568848733b9d49a416813df1249d7</anchor>
      <arglist>(miopenHandle_t handle, const miopenTensorDescriptor_t dyDesc, const miopenTensorDescriptor_t xDesc, const miopenConvolutionDescriptor_t convDesc, const miopenTensorDescriptor_t dwDesc, const uint64_t solution_id)</arglist>
    </member>
    <member kind="function">
      <type>miopenStatus_t</type>
      <name>miopenConvolutionBackwardWeightsImmediate</name>
      <anchorfile>group__convolutions.html</anchorfile>
      <anchor>ga816e7586b740e8ad652aac31f9efe9da</anchor>
      <arglist>(miopenHandle_t handle, const miopenTensorDescriptor_t dyDesc, const void *dy, const miopenTensorDescriptor_t xDesc, const void *x, const miopenConvolutionDescriptor_t convDesc, const miopenTensorDescriptor_t dwDesc, void *dw, void *workSpace, size_t workSpaceSize, const uint64_t solution_id)</arglist>
    </member>
    <member kind="function">
      <type>miopenStatus_t</type>
      <name>miopenConvolutionForwardGetWorkSpaceSize</name>
      <anchorfile>group__convolutions.html</anchorfile>
      <anchor>ga625028c7ac3e3aeccbaea277096cca08</anchor>
      <arglist>(miopenHandle_t handle, const miopenTensorDescriptor_t wDesc, const miopenTensorDescriptor_t xDesc, const miopenConvolutionDescriptor_t convDesc, const miopenTensorDescriptor_t yDesc, size_t *workSpaceSize)</arglist>
    </member>
    <member kind="function">
      <type>miopenStatus_t</type>
      <name>miopenFindConvolutionForwardAlgorithm</name>
      <anchorfile>group__convolutions.html</anchorfile>
      <anchor>gaca2f3b99b04393beebaee41e3d990f68</anchor>
      <arglist>(miopenHandle_t handle, const miopenTensorDescriptor_t xDesc, const void *x, const miopenTensorDescriptor_t wDesc, const void *w, const miopenConvolutionDescriptor_t convDesc, const miopenTensorDescriptor_t yDesc, void *y, const int requestAlgoCount, int *returnedAlgoCount, miopenConvAlgoPerf_t *perfResults, void *workSpace, size_t workSpaceSize, bool exhaustiveSearch)</arglist>
    </member>
    <member kind="function">
      <type>miopenStatus_t</type>
      <name>miopenConvolutionForward</name>
      <anchorfile>group__convolutions.html</anchorfile>
      <anchor>ga1de4638ae8f3330f3c777f91a67889ea</anchor>
      <arglist>(miopenHandle_t handle, const void *alpha, const miopenTensorDescriptor_t xDesc, const void *x, const miopenTensorDescriptor_t wDesc, const void *w, const miopenConvolutionDescriptor_t convDesc, miopenConvFwdAlgorithm_t algo, const void *beta, const miopenTensorDescriptor_t yDesc, void *y, void *workSpace, size_t workSpaceSize)</arglist>
    </member>
    <member kind="function">
      <type>miopenStatus_t</type>
      <name>miopenConvolutionForwardBias</name>
      <anchorfile>group__convolutions.html</anchorfile>
      <anchor>ga8e445590bd57cd0038324943791a9b4a</anchor>
      <arglist>(miopenHandle_t handle, const void *alpha, const miopenTensorDescriptor_t bDesc, const void *b, const void *beta, const miopenTensorDescriptor_t yDesc, void *y)</arglist>
    </member>
    <member kind="function">
      <type>miopenStatus_t</type>
      <name>miopenConvolutionBackwardDataGetWorkSpaceSize</name>
      <anchorfile>group__convolutions.html</anchorfile>
      <anchor>gac94e84d34972a135648c94b89d92f9cf</anchor>
      <arglist>(miopenHandle_t handle, const miopenTensorDescriptor_t dyDesc, const miopenTensorDescriptor_t wDesc, const miopenConvolutionDescriptor_t convDesc, const miopenTensorDescriptor_t dxDesc, size_t *workSpaceSize)</arglist>
    </member>
    <member kind="function">
      <type>miopenStatus_t</type>
      <name>miopenFindConvolutionBackwardDataAlgorithm</name>
      <anchorfile>group__convolutions.html</anchorfile>
      <anchor>ga87840a99d86f888f4f3356adf7a15df0</anchor>
      <arglist>(miopenHandle_t handle, const miopenTensorDescriptor_t dyDesc, const void *dy, const miopenTensorDescriptor_t wDesc, const void *w, const miopenConvolutionDescriptor_t convDesc, const miopenTensorDescriptor_t dxDesc, void *dx, const int requestAlgoCount, int *returnedAlgoCount, miopenConvAlgoPerf_t *perfResults, void *workSpace, size_t workSpaceSize, bool exhaustiveSearch)</arglist>
    </member>
    <member kind="function">
      <type>miopenStatus_t</type>
      <name>miopenConvolutionBackwardData</name>
      <anchorfile>group__convolutions.html</anchorfile>
      <anchor>ga3fb51da4c191c70727c09a1560d38ddd</anchor>
      <arglist>(miopenHandle_t handle, const void *alpha, const miopenTensorDescriptor_t dyDesc, const void *dy, const miopenTensorDescriptor_t wDesc, const void *w, const miopenConvolutionDescriptor_t convDesc, miopenConvBwdDataAlgorithm_t algo, const void *beta, const miopenTensorDescriptor_t dxDesc, void *dx, void *workSpace, size_t workSpaceSize)</arglist>
    </member>
    <member kind="function">
      <type>miopenStatus_t</type>
      <name>miopenConvolutionBackwardWeightsGetWorkSpaceSize</name>
      <anchorfile>group__convolutions.html</anchorfile>
      <anchor>ga7eb4416db9701236648ba2b60d91cc1a</anchor>
      <arglist>(miopenHandle_t handle, const miopenTensorDescriptor_t dyDesc, const miopenTensorDescriptor_t xDesc, const miopenConvolutionDescriptor_t convDesc, const miopenTensorDescriptor_t dwDesc, size_t *workSpaceSize)</arglist>
    </member>
    <member kind="function">
      <type>miopenStatus_t</type>
      <name>miopenFindConvolutionBackwardWeightsAlgorithm</name>
      <anchorfile>group__convolutions.html</anchorfile>
      <anchor>ga57dda8a3c4ecddb988dbba421151e761</anchor>
      <arglist>(miopenHandle_t handle, const miopenTensorDescriptor_t dyDesc, const void *dy, const miopenTensorDescriptor_t xDesc, const void *x, const miopenConvolutionDescriptor_t convDesc, const miopenTensorDescriptor_t dwDesc, void *dw, const int requestAlgoCount, int *returnedAlgoCount, miopenConvAlgoPerf_t *perfResults, void *workSpace, size_t workSpaceSize, bool exhaustiveSearch)</arglist>
    </member>
    <member kind="function">
      <type>miopenStatus_t</type>
      <name>miopenConvolutionBackwardWeights</name>
      <anchorfile>group__convolutions.html</anchorfile>
      <anchor>gac651a5c2fe903191bb6a383b1890ea0d</anchor>
      <arglist>(miopenHandle_t handle, const void *alpha, const miopenTensorDescriptor_t dyDesc, const void *dy, const miopenTensorDescriptor_t xDesc, const void *x, const miopenConvolutionDescriptor_t convDesc, miopenConvBwdWeightsAlgorithm_t algo, const void *beta, const miopenTensorDescriptor_t dwDesc, void *dw, void *workSpace, size_t workSpaceSize)</arglist>
    </member>
    <member kind="function">
      <type>miopenStatus_t</type>
      <name>miopenConvolutionBackwardBias</name>
      <anchorfile>group__convolutions.html</anchorfile>
      <anchor>gafe46a24bd8eba36fe34dbf0162ada0d2</anchor>
      <arglist>(miopenHandle_t handle, const void *alpha, const miopenTensorDescriptor_t dyDesc, const void *dy, const void *beta, const miopenTensorDescriptor_t dbDesc, void *db)</arglist>
    </member>
  </compound>
  <compound kind="group">
    <name>pooling</name>
    <title>Pooling</title>
    <filename>group__pooling.html</filename>
    <member kind="enumeration">
      <type></type>
      <name>miopenIndexType_t</name>
      <anchorfile>group__pooling.html</anchorfile>
      <anchor>ga8428bfacfbe899245b707fa7a6b95547</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>miopenIndexUint8</name>
      <anchorfile>miopen_8h.html</anchorfile>
      <anchor>ga8428bfacfbe899245b707fa7a6b95547ae75cb44f2c20e2fb87b3222b8b7ebc8b</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>miopenIndexUint16</name>
      <anchorfile>miopen_8h.html</anchorfile>
      <anchor>ga8428bfacfbe899245b707fa7a6b95547a2020981e0bbe101614506772aa324a73</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>miopenIndexUint32</name>
      <anchorfile>miopen_8h.html</anchorfile>
      <anchor>ga8428bfacfbe899245b707fa7a6b95547ab1fa80c8eafef2fe983e52210be8c260</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>miopenIndexUint64</name>
      <anchorfile>miopen_8h.html</anchorfile>
      <anchor>ga8428bfacfbe899245b707fa7a6b95547a4539c9a6e12c960e90ff1ffe388fdcdd</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumeration">
      <type></type>
      <name>miopenPoolingMode_t</name>
      <anchorfile>group__pooling.html</anchorfile>
      <anchor>ga4243bc20d51988902e2e22a5d2b6bb5c</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>miopenPoolingMax</name>
      <anchorfile>miopen_8h.html</anchorfile>
      <anchor>ga4243bc20d51988902e2e22a5d2b6bb5cad4f167bcecbd60fb7078fb97aaffd3fc</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>miopenPoolingAverage</name>
      <anchorfile>miopen_8h.html</anchorfile>
      <anchor>ga4243bc20d51988902e2e22a5d2b6bb5ca3964ddda768df3b127079997346bfe89</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>miopenPoolingAverageInclusive</name>
      <anchorfile>miopen_8h.html</anchorfile>
      <anchor>ga4243bc20d51988902e2e22a5d2b6bb5caa060d79a20d907b13a9ecc2a77e88c44</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumeration">
      <type></type>
      <name>miopenPoolingWorkspaceIndexMode_t</name>
      <anchorfile>group__pooling.html</anchorfile>
      <anchor>ga8f69978be75d6d32dbc172d3a99695e7</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>miopenPoolingWorkspaceIndexMask</name>
      <anchorfile>miopen_8h.html</anchorfile>
      <anchor>ga8f69978be75d6d32dbc172d3a99695e7aa18c786f4a9f7ca40cb70395d5d9aeaa</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>miopenPoolingWorkspaceIndexImage</name>
      <anchorfile>miopen_8h.html</anchorfile>
      <anchor>ga8f69978be75d6d32dbc172d3a99695e7a962adb90a1876eb3980c39d5a9247a38</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>MIOPEN_DECLARE_OBJECT</name>
      <anchorfile>group__pooling.html</anchorfile>
      <anchor>gae90132c94469bb7bfbca5498309fe0f8</anchor>
      <arglist>(miopenPoolingDescriptor)</arglist>
    </member>
    <member kind="function">
      <type>miopenStatus_t</type>
      <name>miopenCreatePoolingDescriptor</name>
      <anchorfile>group__pooling.html</anchorfile>
      <anchor>gabd7d9b79e9164e8a3c91855c015cc43d</anchor>
      <arglist>(miopenPoolingDescriptor_t *poolDesc)</arglist>
    </member>
    <member kind="function">
      <type>miopenStatus_t</type>
      <name>miopenSetPoolingIndexType</name>
      <anchorfile>group__pooling.html</anchorfile>
      <anchor>gac31ae1c8976de3929adaf898c033f8e8</anchor>
      <arglist>(miopenPoolingDescriptor_t poolDesc, miopenIndexType_t index_type)</arglist>
    </member>
    <member kind="function">
      <type>miopenStatus_t</type>
      <name>miopenGetPoolingIndexType</name>
      <anchorfile>group__pooling.html</anchorfile>
      <anchor>ga8f2bc026ee75ccac3aaaf18b4f2791dd</anchor>
      <arglist>(miopenPoolingDescriptor_t poolDesc, miopenIndexType_t *index_type)</arglist>
    </member>
    <member kind="function">
      <type>miopenStatus_t</type>
      <name>miopenSetPoolingWorkSpaceIndexMode</name>
      <anchorfile>group__pooling.html</anchorfile>
      <anchor>ga05ef9d8e8b8127e468efe2a4310b180f</anchor>
      <arglist>(miopenPoolingDescriptor_t poolDesc, miopenPoolingWorkspaceIndexMode_t workspace_index)</arglist>
    </member>
    <member kind="function">
      <type>miopenStatus_t</type>
      <name>miopenGetPoolingWorkSpaceIndexMode</name>
      <anchorfile>group__pooling.html</anchorfile>
      <anchor>ga6beeb9aba269f016cfeda70390db77b5</anchor>
      <arglist>(miopenPoolingDescriptor_t poolDesc, miopenPoolingWorkspaceIndexMode_t *workspace_index)</arglist>
    </member>
    <member kind="function">
      <type>miopenStatus_t</type>
      <name>miopenSet2dPoolingDescriptor</name>
      <anchorfile>group__pooling.html</anchorfile>
      <anchor>ga03b3553e6cc0162c9a31f47cf9cdd4f0</anchor>
      <arglist>(miopenPoolingDescriptor_t poolDesc, miopenPoolingMode_t mode, int windowHeight, int windowWidth, int pad_h, int pad_w, int stride_h, int stride_w)</arglist>
    </member>
    <member kind="function">
      <type>miopenStatus_t</type>
      <name>miopenGet2dPoolingDescriptor</name>
      <anchorfile>group__pooling.html</anchorfile>
      <anchor>gad72feef4d7d5e37044b61c221bd1e2a9</anchor>
      <arglist>(const miopenPoolingDescriptor_t poolDesc, miopenPoolingMode_t *mode, int *windowHeight, int *windowWidth, int *pad_h, int *pad_w, int *stride_h, int *stride_w)</arglist>
    </member>
    <member kind="function">
      <type>miopenStatus_t</type>
      <name>miopenGetPoolingForwardOutputDim</name>
      <anchorfile>group__pooling.html</anchorfile>
      <anchor>ga1198df51381b094021aee5b1a1a05e3a</anchor>
      <arglist>(const miopenPoolingDescriptor_t poolDesc, const miopenTensorDescriptor_t tensorDesc, int *n, int *c, int *h, int *w)</arglist>
    </member>
    <member kind="function">
      <type>miopenStatus_t</type>
      <name>miopenSetNdPoolingDescriptor</name>
      <anchorfile>group__pooling.html</anchorfile>
      <anchor>ga2c3fa7681fe3535180eaa89ba48eea3b</anchor>
      <arglist>(miopenPoolingDescriptor_t poolDesc, const miopenPoolingMode_t mode, int nbDims, const int *windowDimA, const int *padA, const int *stridesA)</arglist>
    </member>
    <member kind="function">
      <type>miopenStatus_t</type>
      <name>miopenGetNdPoolingDescriptor</name>
      <anchorfile>group__pooling.html</anchorfile>
      <anchor>gabc760e40557710fe52cafde0cbfdfcf3</anchor>
      <arglist>(const miopenPoolingDescriptor_t poolDesc, int nbDimsRequested, miopenPoolingMode_t *mode, int *nbDims, int *windowDimA, int *padA, int *stridesA)</arglist>
    </member>
    <member kind="function">
      <type>miopenStatus_t</type>
      <name>miopenGetPoolingNdForwardOutputDim</name>
      <anchorfile>group__pooling.html</anchorfile>
      <anchor>gab70ecbdc8d96942b78b0f3ca785114d6</anchor>
      <arglist>(const miopenPoolingDescriptor_t poolDesc, const miopenTensorDescriptor_t tensorDesc, int dims, int *tensorDimArr)</arglist>
    </member>
    <member kind="function">
      <type>miopenStatus_t</type>
      <name>miopenPoolingGetWorkSpaceSize</name>
      <anchorfile>group__pooling.html</anchorfile>
      <anchor>ga23a4bf9e5cf91da0765c2c386b8aaab6</anchor>
      <arglist>(const miopenTensorDescriptor_t yDesc, size_t *workSpaceSize)</arglist>
    </member>
    <member kind="function">
      <type>miopenStatus_t</type>
      <name>miopenPoolingGetWorkSpaceSizeV2</name>
      <anchorfile>group__pooling.html</anchorfile>
      <anchor>ga5a8b1812384cb03b5eb4437950e2f334</anchor>
      <arglist>(const miopenPoolingDescriptor_t poolDesc, const miopenTensorDescriptor_t yDesc, size_t *workSpaceSize)</arglist>
    </member>
    <member kind="function">
      <type>miopenStatus_t</type>
      <name>miopenPoolingForward</name>
      <anchorfile>group__pooling.html</anchorfile>
      <anchor>ga2f64eee5653500719bfd0badb98aad86</anchor>
      <arglist>(miopenHandle_t handle, const miopenPoolingDescriptor_t poolDesc, const void *alpha, const miopenTensorDescriptor_t xDesc, const void *x, const void *beta, const miopenTensorDescriptor_t yDesc, void *y, bool do_backward, void *workSpace, size_t workSpaceSize)</arglist>
    </member>
    <member kind="function">
      <type>miopenStatus_t</type>
      <name>miopenPoolingBackward</name>
      <anchorfile>group__pooling.html</anchorfile>
      <anchor>gaf0f319af071fe15254d800bb3e452f20</anchor>
      <arglist>(miopenHandle_t handle, const miopenPoolingDescriptor_t poolDesc, const void *alpha, const miopenTensorDescriptor_t yDesc, const void *y, const miopenTensorDescriptor_t dyDesc, const void *dy, const miopenTensorDescriptor_t xDesc, const void *x, const void *beta, const miopenTensorDescriptor_t dxDesc, void *dx, void *workSpace)</arglist>
    </member>
    <member kind="function">
      <type>miopenStatus_t</type>
      <name>miopenDestroyPoolingDescriptor</name>
      <anchorfile>group__pooling.html</anchorfile>
      <anchor>gae7ea63b05752da3fba82a6dca1de65b4</anchor>
      <arglist>(miopenPoolingDescriptor_t poolDesc)</arglist>
    </member>
  </compound>
  <compound kind="group">
    <name>LRN</name>
    <title>LRN</title>
    <filename>group___l_r_n.html</filename>
    <member kind="enumeration">
      <type></type>
      <name>miopenLRNMode_t</name>
      <anchorfile>group___l_r_n.html</anchorfile>
      <anchor>gae8c4f5513e59a0c2870013504f9b5c4d</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>miopenLRNWithinChannel</name>
      <anchorfile>miopen_8h.html</anchorfile>
      <anchor>gae8c4f5513e59a0c2870013504f9b5c4da0062534dacca2acfb07e261fd5c0b77c</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>miopenLRNCrossChannel</name>
      <anchorfile>miopen_8h.html</anchorfile>
      <anchor>gae8c4f5513e59a0c2870013504f9b5c4da5c1611ee75b7929a3a59e414974a18a7</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>MIOPEN_DECLARE_OBJECT</name>
      <anchorfile>group___l_r_n.html</anchorfile>
      <anchor>gaaa30a58b289fbef587968001697c915a</anchor>
      <arglist>(miopenLRNDescriptor)</arglist>
    </member>
    <member kind="function">
      <type>miopenStatus_t</type>
      <name>miopenCreateLRNDescriptor</name>
      <anchorfile>group___l_r_n.html</anchorfile>
      <anchor>ga41f093f397f886f31fe905e50167cac1</anchor>
      <arglist>(miopenLRNDescriptor_t *lrnDesc)</arglist>
    </member>
    <member kind="function">
      <type>miopenStatus_t</type>
      <name>miopenSetLRNDescriptor</name>
      <anchorfile>group___l_r_n.html</anchorfile>
      <anchor>ga322f5ee2751280378ca6756219052334</anchor>
      <arglist>(const miopenLRNDescriptor_t lrnDesc, miopenLRNMode_t mode, unsigned int lrnN, double lrnAlpha, double lrnBeta, double lrnK)</arglist>
    </member>
    <member kind="function">
      <type>miopenStatus_t</type>
      <name>miopenGetLRNDescriptor</name>
      <anchorfile>group___l_r_n.html</anchorfile>
      <anchor>ga48c74e2a652a14083de6687b812153e2</anchor>
      <arglist>(const miopenLRNDescriptor_t lrnDesc, miopenLRNMode_t *mode, unsigned int *lrnN, double *lrnAlpha, double *lrnBeta, double *lrnK)</arglist>
    </member>
    <member kind="function">
      <type>miopenStatus_t</type>
      <name>miopenLRNGetWorkSpaceSize</name>
      <anchorfile>group___l_r_n.html</anchorfile>
      <anchor>ga9be3e08ec25eaf2b99cf0b8f88711f39</anchor>
      <arglist>(const miopenTensorDescriptor_t yDesc, size_t *workSpaceSize)</arglist>
    </member>
    <member kind="function">
      <type>miopenStatus_t</type>
      <name>miopenLRNForward</name>
      <anchorfile>group___l_r_n.html</anchorfile>
      <anchor>gaf5ec38b9a11b7fa584bf8a635d03c68e</anchor>
      <arglist>(miopenHandle_t handle, const miopenLRNDescriptor_t lrnDesc, const void *alpha, const miopenTensorDescriptor_t xDesc, const void *x, const void *beta, const miopenTensorDescriptor_t yDesc, void *y, bool do_backward, void *workSpace)</arglist>
    </member>
    <member kind="function">
      <type>miopenStatus_t</type>
      <name>miopenLRNBackward</name>
      <anchorfile>group___l_r_n.html</anchorfile>
      <anchor>ga637b624c1a29d5f0b9c5a4bfcee353a5</anchor>
      <arglist>(miopenHandle_t handle, const miopenLRNDescriptor_t lrnDesc, const void *alpha, const miopenTensorDescriptor_t yDesc, const void *y, const miopenTensorDescriptor_t dyDesc, const void *dy, const miopenTensorDescriptor_t xDesc, const void *x, const void *beta, const miopenTensorDescriptor_t dxDesc, void *dx, const void *workSpace)</arglist>
    </member>
    <member kind="function">
      <type>miopenStatus_t</type>
      <name>miopenDestroyLRNDescriptor</name>
      <anchorfile>group___l_r_n.html</anchorfile>
      <anchor>gaf73f4948c1e487621773ea5286cc8843</anchor>
      <arglist>(miopenLRNDescriptor_t lrnDesc)</arglist>
    </member>
  </compound>
  <compound kind="group">
    <name>layernorm</name>
    <title>Layernorm</title>
    <filename>group__layernorm.html</filename>
    <member kind="enumeration">
      <type></type>
      <name>miopenNormMode_t</name>
      <anchorfile>group__layernorm.html</anchorfile>
      <anchor>ga996bace523abc82c6847984c34b60d5b</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>MIOPEN_ELEMENTWISE_AFFINE</name>
      <anchorfile>miopen_8h.html</anchorfile>
      <anchor>ga996bace523abc82c6847984c34b60d5ba6dafa3af3a93d940670d2e19448a8b4b</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>MIOPEN_WEIGHT_BIAS</name>
      <anchorfile>miopen_8h.html</anchorfile>
      <anchor>ga996bace523abc82c6847984c34b60d5ba3eb5ec947f41699cc76f26232a6e1101</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <type>miopenStatus_t</type>
      <name>miopenLayerNormForward</name>
      <anchorfile>group__layernorm.html</anchorfile>
      <anchor>ga167bb1f70a5625e10295132444bab39d</anchor>
      <arglist>(miopenHandle_t handle, miopenNormMode_t mode, const miopenTensorDescriptor_t xDesc, const void *x, const miopenTensorDescriptor_t weightDesc, const void *weight, const miopenTensorDescriptor_t biasDesc, const void *bias, const float epsilon, const int32_t normalized_dim, const miopenTensorDescriptor_t yDesc, void *y, const miopenTensorDescriptor_t meanDesc, void *mean, const miopenTensorDescriptor_t rstdDesc, void *rstd)</arglist>
    </member>
  </compound>
  <compound kind="group">
    <name>cat</name>
    <title>Cat</title>
    <filename>group__cat.html</filename>
    <member kind="function">
      <type>miopenStatus_t</type>
      <name>miopenCatForward</name>
      <anchorfile>group__cat.html</anchorfile>
      <anchor>ga1d94a26be667c754a8ab5cce29524d29</anchor>
      <arglist>(miopenHandle_t handle, const int32_t xCount, const miopenTensorDescriptor_t *xDescs, const void *const *xs, const miopenTensorDescriptor_t yDesc, void *y, const int32_t dim)</arglist>
    </member>
  </compound>
  <compound kind="group">
    <name>batchnorm</name>
    <title>Batchnorm</title>
    <filename>group__batchnorm.html</filename>
    <member kind="enumeration">
      <type></type>
      <name>miopenBatchNormMode_t</name>
      <anchorfile>group__batchnorm.html</anchorfile>
      <anchor>gab21179fc753f8e0d1a6f23ac9b340a26</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>miopenBNPerActivation</name>
      <anchorfile>miopen_8h.html</anchorfile>
      <anchor>gab21179fc753f8e0d1a6f23ac9b340a26a44ab9eadea90a770a3744a61b71d536f</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>miopenBNSpatial</name>
      <anchorfile>miopen_8h.html</anchorfile>
      <anchor>gab21179fc753f8e0d1a6f23ac9b340a26a42ebad7a4f774e7dc3df2de80b31a3e0</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <type>miopenStatus_t</type>
      <name>miopenDeriveBNTensorDescriptor</name>
      <anchorfile>group__batchnorm.html</anchorfile>
      <anchor>gaf2aef2cbd792e82b32b305039d6e4662</anchor>
      <arglist>(miopenTensorDescriptor_t derivedBnDesc, const miopenTensorDescriptor_t xDesc, miopenBatchNormMode_t bn_mode)</arglist>
    </member>
    <member kind="function">
      <type>miopenStatus_t</type>
      <name>miopenBatchNormalizationForwardTraining</name>
      <anchorfile>group__batchnorm.html</anchorfile>
      <anchor>ga343969e08d276e480a2fa3b14151f287</anchor>
      <arglist>(miopenHandle_t handle, miopenBatchNormMode_t bn_mode, void *alpha, void *beta, const miopenTensorDescriptor_t xDesc, const void *x, const miopenTensorDescriptor_t yDesc, void *y, const miopenTensorDescriptor_t bnScaleBiasMeanVarDesc, void *bnScale, void *bnBias, double expAvgFactor, void *resultRunningMean, void *resultRunningVariance, double epsilon, void *resultSaveMean, void *resultSaveInvVariance)</arglist>
    </member>
    <member kind="function">
      <type>miopenStatus_t</type>
      <name>miopenBatchNormalizationForwardInference</name>
      <anchorfile>group__batchnorm.html</anchorfile>
      <anchor>ga076386cb1c1bf692f1883c3d1a013a45</anchor>
      <arglist>(miopenHandle_t handle, miopenBatchNormMode_t bn_mode, void *alpha, void *beta, const miopenTensorDescriptor_t xDesc, const void *x, const miopenTensorDescriptor_t yDesc, void *y, const miopenTensorDescriptor_t bnScaleBiasMeanVarDesc, void *bnScale, void *bnBias, void *estimatedMean, void *estimatedVariance, double epsilon)</arglist>
    </member>
    <member kind="function">
      <type>miopenStatus_t</type>
      <name>miopenBatchNormalizationBackward</name>
      <anchorfile>group__batchnorm.html</anchorfile>
      <anchor>gaae2f39675310df613802dcf8cfd446a5</anchor>
      <arglist>(miopenHandle_t handle, miopenBatchNormMode_t bn_mode, const void *alphaDataDiff, const void *betaDataDiff, const void *alphaParamDiff, const void *betaParamDiff, const miopenTensorDescriptor_t xDesc, const void *x, const miopenTensorDescriptor_t dyDesc, const void *dy, const miopenTensorDescriptor_t dxDesc, void *dx, const miopenTensorDescriptor_t bnScaleBiasDiffDesc, const void *bnScale, void *resultBnScaleDiff, void *resultBnBiasDiff, double epsilon, const void *savedMean, const void *savedInvVariance)</arglist>
    </member>
  </compound>
  <compound kind="group">
    <name>activation</name>
    <title>Activation</title>
    <filename>group__activation.html</filename>
    <member kind="enumeration">
      <type></type>
      <name>miopenActivationMode_t</name>
      <anchorfile>group__activation.html</anchorfile>
      <anchor>ga5fd27264d844b20dd8d63ab678f09af6</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>miopenActivationPASTHRU</name>
      <anchorfile>miopen_8h.html</anchorfile>
      <anchor>ga5fd27264d844b20dd8d63ab678f09af6a3a85417a19911daeecf6e9e5f8952d3b</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>miopenActivationLOGISTIC</name>
      <anchorfile>miopen_8h.html</anchorfile>
      <anchor>ga5fd27264d844b20dd8d63ab678f09af6a4a7e7a529bed5bc42fc4966d47ea29b4</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>miopenActivationTANH</name>
      <anchorfile>miopen_8h.html</anchorfile>
      <anchor>ga5fd27264d844b20dd8d63ab678f09af6aebc2804e6806816dc8db6554d0c670b2</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>miopenActivationRELU</name>
      <anchorfile>miopen_8h.html</anchorfile>
      <anchor>ga5fd27264d844b20dd8d63ab678f09af6a66fb3d3c74e40e1e1a460fb409be62c0</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>miopenActivationSOFTRELU</name>
      <anchorfile>miopen_8h.html</anchorfile>
      <anchor>ga5fd27264d844b20dd8d63ab678f09af6ad022a217df2f21174c4d515294f0e727</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>miopenActivationABS</name>
      <anchorfile>miopen_8h.html</anchorfile>
      <anchor>ga5fd27264d844b20dd8d63ab678f09af6a481c9203a79996016e88e0b1baee55b5</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>miopenActivationPOWER</name>
      <anchorfile>miopen_8h.html</anchorfile>
      <anchor>ga5fd27264d844b20dd8d63ab678f09af6a7dbe18fe7783fcf9bb4e46d34b8e1d51</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>miopenActivationCLIPPEDRELU</name>
      <anchorfile>miopen_8h.html</anchorfile>
      <anchor>ga5fd27264d844b20dd8d63ab678f09af6a5ac41058b9593346704ed86235228f4b</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>miopenActivationLEAKYRELU</name>
      <anchorfile>miopen_8h.html</anchorfile>
      <anchor>ga5fd27264d844b20dd8d63ab678f09af6a03c0f145db198f95b49b372470e64f29</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>miopenActivationELU</name>
      <anchorfile>miopen_8h.html</anchorfile>
      <anchor>ga5fd27264d844b20dd8d63ab678f09af6ac95a28635391882b82df5d1a9dcbc0a3</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>MIOPEN_DECLARE_OBJECT</name>
      <anchorfile>group__activation.html</anchorfile>
      <anchor>ga9f091c54e4e21e6ae53ab058be2d658f</anchor>
      <arglist>(miopenActivationDescriptor)</arglist>
    </member>
    <member kind="function">
      <type>miopenStatus_t</type>
      <name>miopenCreateActivationDescriptor</name>
      <anchorfile>group__activation.html</anchorfile>
      <anchor>ga92c0d5c8719120d3ade6a83f9c35c4af</anchor>
      <arglist>(miopenActivationDescriptor_t *activDesc)</arglist>
    </member>
    <member kind="function">
      <type>miopenStatus_t</type>
      <name>miopenSetActivationDescriptor</name>
      <anchorfile>group__activation.html</anchorfile>
      <anchor>ga91813317a3b87f4b6aaaa960a2cfc58a</anchor>
      <arglist>(const miopenActivationDescriptor_t activDesc, miopenActivationMode_t mode, double activAlpha, double activBeta, double activGamma)</arglist>
    </member>
    <member kind="function">
      <type>miopenStatus_t</type>
      <name>miopenGetActivationDescriptor</name>
      <anchorfile>group__activation.html</anchorfile>
      <anchor>gac2a4025376e08329662ebb982e037def</anchor>
      <arglist>(const miopenActivationDescriptor_t activDesc, miopenActivationMode_t *mode, double *activAlpha, double *activBeta, double *activGamma)</arglist>
    </member>
    <member kind="function">
      <type>miopenStatus_t</type>
      <name>miopenActivationForward</name>
      <anchorfile>group__activation.html</anchorfile>
      <anchor>ga33971a83fd4a33df97f790421c208d49</anchor>
      <arglist>(miopenHandle_t handle, const miopenActivationDescriptor_t activDesc, const void *alpha, const miopenTensorDescriptor_t xDesc, const void *x, const void *beta, const miopenTensorDescriptor_t yDesc, void *y)</arglist>
    </member>
    <member kind="function">
      <type>miopenStatus_t</type>
      <name>miopenActivationBackward</name>
      <anchorfile>group__activation.html</anchorfile>
      <anchor>ga4f43724d9ab601a14d1355cc3e4ba8ce</anchor>
      <arglist>(miopenHandle_t handle, const miopenActivationDescriptor_t activDesc, const void *alpha, const miopenTensorDescriptor_t yDesc, const void *y, const miopenTensorDescriptor_t dyDesc, const void *dy, const miopenTensorDescriptor_t xDesc, const void *x, const void *beta, const miopenTensorDescriptor_t dxDesc, void *dx)</arglist>
    </member>
    <member kind="function">
      <type>miopenStatus_t</type>
      <name>miopenDestroyActivationDescriptor</name>
      <anchorfile>group__activation.html</anchorfile>
      <anchor>gae281c7cc4e97934b57cbedd6c73c3133</anchor>
      <arglist>(miopenActivationDescriptor_t activDesc)</arglist>
    </member>
  </compound>
  <compound kind="group">
    <name>softmax</name>
    <title>Softmax</title>
    <filename>group__softmax.html</filename>
    <member kind="enumeration">
      <type></type>
      <name>miopenSoftmaxAlgorithm_t</name>
      <anchorfile>group__softmax.html</anchorfile>
      <anchor>gaf2376aefd82e3d6e08df6da4810ffdfe</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>MIOPEN_SOFTMAX_FAST</name>
      <anchorfile>miopen_8h.html</anchorfile>
      <anchor>gaf2376aefd82e3d6e08df6da4810ffdfea7d462f643547b89ea8460c3b1d58b8d8</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>MIOPEN_SOFTMAX_ACCURATE</name>
      <anchorfile>miopen_8h.html</anchorfile>
      <anchor>gaf2376aefd82e3d6e08df6da4810ffdfeacd866d881145ad1a323c4a589986cf5e</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>MIOPEN_SOFTMAX_LOG</name>
      <anchorfile>miopen_8h.html</anchorfile>
      <anchor>gaf2376aefd82e3d6e08df6da4810ffdfead27f321be1aa13300ebb2d175a3666c5</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumeration">
      <type></type>
      <name>miopenSoftmaxMode_t</name>
      <anchorfile>group__softmax.html</anchorfile>
      <anchor>gaea670eae33cee9aee53d48624cf28d7d</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>MIOPEN_SOFTMAX_MODE_INSTANCE</name>
      <anchorfile>miopen_8h.html</anchorfile>
      <anchor>gaea670eae33cee9aee53d48624cf28d7dabab93ef42b0ec7744b4fb8ab83d700a3</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>MIOPEN_SOFTMAX_MODE_CHANNEL</name>
      <anchorfile>miopen_8h.html</anchorfile>
      <anchor>gaea670eae33cee9aee53d48624cf28d7daf5c13b390d4b6132b51976a92f0f3029</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <type>miopenStatus_t</type>
      <name>miopenSoftmaxForward</name>
      <anchorfile>group__softmax.html</anchorfile>
      <anchor>ga3b2ad480ed94ab0f39a3d0e9c2bf1ef8</anchor>
      <arglist>(miopenHandle_t handle, const void *alpha, const miopenTensorDescriptor_t xDesc, const void *x, const void *beta, const miopenTensorDescriptor_t yDesc, void *y)</arglist>
    </member>
    <member kind="function">
      <type>miopenStatus_t</type>
      <name>miopenSoftmaxBackward</name>
      <anchorfile>group__softmax.html</anchorfile>
      <anchor>ga86f410cedb58f1849e507436036d8329</anchor>
      <arglist>(miopenHandle_t handle, const void *alpha, const miopenTensorDescriptor_t yDesc, const void *y, const miopenTensorDescriptor_t dyDesc, const void *dy, const void *beta, const miopenTensorDescriptor_t dxDesc, void *dx)</arglist>
    </member>
    <member kind="function">
      <type>miopenStatus_t</type>
      <name>miopenSoftmaxForward_V2</name>
      <anchorfile>group__softmax.html</anchorfile>
      <anchor>ga71e476f60294b1dae6aa80ff773804b5</anchor>
      <arglist>(miopenHandle_t handle, const void *alpha, const miopenTensorDescriptor_t xDesc, const void *x, const void *beta, const miopenTensorDescriptor_t yDesc, void *y, miopenSoftmaxAlgorithm_t algorithm, miopenSoftmaxMode_t mode)</arglist>
    </member>
    <member kind="function">
      <type>miopenStatus_t</type>
      <name>miopenSoftmaxBackward_V2</name>
      <anchorfile>group__softmax.html</anchorfile>
      <anchor>ga35e023988554fd30579fd6c8b205983a</anchor>
      <arglist>(miopenHandle_t handle, const void *alpha, const miopenTensorDescriptor_t yDesc, const void *y, const miopenTensorDescriptor_t dyDesc, const void *dy, const void *beta, const miopenTensorDescriptor_t dxDesc, void *dx, miopenSoftmaxAlgorithm_t algorithm, miopenSoftmaxMode_t mode)</arglist>
    </member>
  </compound>
  <compound kind="group">
    <name>FUSION</name>
    <title>FUSION</title>
    <filename>group___f_u_s_i_o_n.html</filename>
    <member kind="enumeration">
      <type></type>
      <name>miopenFusionDirection_t</name>
      <anchorfile>group___f_u_s_i_o_n.html</anchorfile>
      <anchor>ga774d5d8b0c1ca371d920e78387100858</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>miopenVerticalFusion</name>
      <anchorfile>group___f_u_s_i_o_n.html</anchorfile>
      <anchor>gga774d5d8b0c1ca371d920e78387100858a558bb4e68777056ebba6ee78ae7e0ad8</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>miopenHorizontalFusion</name>
      <anchorfile>group___f_u_s_i_o_n.html</anchorfile>
      <anchor>gga774d5d8b0c1ca371d920e78387100858a54a662450548ccf631bd635eecb1f092</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>MIOPEN_DECLARE_OBJECT</name>
      <anchorfile>group___f_u_s_i_o_n.html</anchorfile>
      <anchor>ga66a35ee58b7bae6400997b70c60d6579</anchor>
      <arglist>(miopenFusionPlanDescriptor)</arglist>
    </member>
    <member kind="function">
      <type>miopenStatus_t</type>
      <name>miopenCreateFusionPlan</name>
      <anchorfile>group___f_u_s_i_o_n.html</anchorfile>
      <anchor>gad6221c451528eac3d9592842f1df2f71</anchor>
      <arglist>(miopenFusionPlanDescriptor_t *fusePlanDesc, const miopenFusionDirection_t fuseDirection, const miopenTensorDescriptor_t inputDesc)</arglist>
    </member>
    <member kind="function">
      <type>miopenStatus_t</type>
      <name>miopenDestroyFusionPlan</name>
      <anchorfile>group___f_u_s_i_o_n.html</anchorfile>
      <anchor>ga72b408c1034c7c934c26cb86fde84e9b</anchor>
      <arglist>(miopenFusionPlanDescriptor_t fusePlanDesc)</arglist>
    </member>
    <member kind="function">
      <type>miopenStatus_t</type>
      <name>miopenCompileFusionPlan</name>
      <anchorfile>group___f_u_s_i_o_n.html</anchorfile>
      <anchor>ga9cbffb2ba55ade895a5fcb005a03c9e5</anchor>
      <arglist>(miopenHandle_t handle, miopenFusionPlanDescriptor_t fusePlanDesc)</arglist>
    </member>
    <member kind="function">
      <type>miopenStatus_t</type>
      <name>miopenFusionPlanGetOp</name>
      <anchorfile>group___f_u_s_i_o_n.html</anchorfile>
      <anchor>ga6f35ee49f5a6fcd81f3b4cb82f60f830</anchor>
      <arglist>(miopenFusionPlanDescriptor_t fusePlanDesc, const int op_idx, miopenFusionOpDescriptor_t *op)</arglist>
    </member>
    <member kind="function">
      <type>miopenStatus_t</type>
      <name>miopenFusionPlanGetWorkSpaceSize</name>
      <anchorfile>group___f_u_s_i_o_n.html</anchorfile>
      <anchor>ga3afcf7d3325e8b251eb7b74da8bdc13c</anchor>
      <arglist>(miopenHandle_t handle, miopenFusionPlanDescriptor_t fusePlanDesc, size_t *workSpaceSize, miopenConvFwdAlgorithm_t algo)</arglist>
    </member>
    <member kind="function">
      <type>miopenStatus_t</type>
      <name>miopenFusionPlanConvolutionGetAlgo</name>
      <anchorfile>group___f_u_s_i_o_n.html</anchorfile>
      <anchor>ga305370335f4a926f2a2b1cf1c72727f7</anchor>
      <arglist>(miopenFusionPlanDescriptor_t fusePlanDesc, const int requestAlgoCount, int *returnedAlgoCount, miopenConvFwdAlgorithm_t *returnedAlgos)</arglist>
    </member>
    <member kind="function">
      <type>miopenStatus_t</type>
      <name>miopenFusionPlanConvolutionSetAlgo</name>
      <anchorfile>group___f_u_s_i_o_n.html</anchorfile>
      <anchor>ga45b767f63622636b63f5ad453358cfc9</anchor>
      <arglist>(miopenFusionPlanDescriptor_t fusePlanDesc, miopenConvFwdAlgorithm_t algo)</arglist>
    </member>
    <member kind="function">
      <type>miopenStatus_t</type>
      <name>miopenCreateOpConvForward</name>
      <anchorfile>group___f_u_s_i_o_n.html</anchorfile>
      <anchor>ga5ce93b3bd99720da807a3bfb8f778821</anchor>
      <arglist>(miopenFusionPlanDescriptor_t fusePlanDesc, miopenFusionOpDescriptor_t *convOp, miopenConvolutionDescriptor_t convDesc, const miopenTensorDescriptor_t wDesc)</arglist>
    </member>
    <member kind="function">
      <type>miopenStatus_t</type>
      <name>miopenCreateOpActivationForward</name>
      <anchorfile>group___f_u_s_i_o_n.html</anchorfile>
      <anchor>ga733b3205944e4707ce9b9565927be47d</anchor>
      <arglist>(miopenFusionPlanDescriptor_t fusePlanDesc, miopenFusionOpDescriptor_t *activFwdOp, miopenActivationMode_t mode)</arglist>
    </member>
    <member kind="function">
      <type>miopenStatus_t</type>
      <name>miopenCreateOpActivationBackward</name>
      <anchorfile>group___f_u_s_i_o_n.html</anchorfile>
      <anchor>ga1181e44c0d111616642fffe0c323e21e</anchor>
      <arglist>(miopenFusionPlanDescriptor_t fusePlanDesc, miopenFusionOpDescriptor_t *activBwdOp, miopenActivationMode_t mode)</arglist>
    </member>
    <member kind="function">
      <type>miopenStatus_t</type>
      <name>miopenCreateOpBiasForward</name>
      <anchorfile>group___f_u_s_i_o_n.html</anchorfile>
      <anchor>gafe82043e423cc3af83f0a86683c2faa4</anchor>
      <arglist>(miopenFusionPlanDescriptor_t fusePlanDesc, miopenFusionOpDescriptor_t *biasOp, const miopenTensorDescriptor_t bDesc)</arglist>
    </member>
    <member kind="function">
      <type>miopenStatus_t</type>
      <name>miopenCreateOpBatchNormInference</name>
      <anchorfile>group___f_u_s_i_o_n.html</anchorfile>
      <anchor>ga493ad077910d796d4391f40032983da4</anchor>
      <arglist>(miopenFusionPlanDescriptor_t fusePlanDesc, miopenFusionOpDescriptor_t *bnOp, const miopenBatchNormMode_t bn_mode, const miopenTensorDescriptor_t bnScaleBiasMeanVarDesc)</arglist>
    </member>
    <member kind="function">
      <type>miopenStatus_t</type>
      <name>miopenCreateOpBatchNormForward</name>
      <anchorfile>group___f_u_s_i_o_n.html</anchorfile>
      <anchor>ga2c8f42b324b568ea2f9e1678cca809b0</anchor>
      <arglist>(miopenFusionPlanDescriptor_t fusePlanDesc, miopenFusionOpDescriptor_t *bnFwdOp, const miopenBatchNormMode_t bn_mode, bool runningMeanVariance)</arglist>
    </member>
    <member kind="function">
      <type>miopenStatus_t</type>
      <name>miopenCreateOpBatchNormBackward</name>
      <anchorfile>group___f_u_s_i_o_n.html</anchorfile>
      <anchor>gab536f8a2157852540dd2a2fcff5e90c3</anchor>
      <arglist>(miopenFusionPlanDescriptor_t fusePlanDesc, miopenFusionOpDescriptor_t *bnBwdOp, const miopenBatchNormMode_t bn_mode)</arglist>
    </member>
    <member kind="function">
      <type>miopenStatus_t</type>
      <name>miopenCreateOperatorArgs</name>
      <anchorfile>group___f_u_s_i_o_n.html</anchorfile>
      <anchor>gab7c88a2676231b3e9d1a623616ea9053</anchor>
      <arglist>(miopenOperatorArgs_t *args)</arglist>
    </member>
    <member kind="function">
      <type>miopenStatus_t</type>
      <name>miopenDestroyOperatorArgs</name>
      <anchorfile>group___f_u_s_i_o_n.html</anchorfile>
      <anchor>gab395e7ca41f74ed5deda61bc173e3db1</anchor>
      <arglist>(miopenOperatorArgs_t args)</arglist>
    </member>
    <member kind="function">
      <type>miopenStatus_t</type>
      <name>miopenSetOpArgsConvForward</name>
      <anchorfile>group___f_u_s_i_o_n.html</anchorfile>
      <anchor>gabc13e846bf2934371aa914d05d727b31</anchor>
      <arglist>(miopenOperatorArgs_t args, const miopenFusionOpDescriptor_t convOp, const void *alpha, const void *beta, const void *w)</arglist>
    </member>
    <member kind="function">
      <type>miopenStatus_t</type>
      <name>miopenSetOpArgsActivForward</name>
      <anchorfile>group___f_u_s_i_o_n.html</anchorfile>
      <anchor>gaaa5188cbdbf34f68ba2fc02be21ffb7c</anchor>
      <arglist>(miopenOperatorArgs_t args, const miopenFusionOpDescriptor_t activFwdOp, const void *alpha, const void *beta, double activAlpha, double activBeta, double activGamma)</arglist>
    </member>
    <member kind="function">
      <type>miopenStatus_t</type>
      <name>miopenSetOpArgsActivBackward</name>
      <anchorfile>group___f_u_s_i_o_n.html</anchorfile>
      <anchor>ga85bc81886a81df6b3610276674fe3562</anchor>
      <arglist>(miopenOperatorArgs_t args, const miopenFusionOpDescriptor_t activBwdOp, const void *alpha, const void *beta, const void *y, const void *reserved, double activAlpha, double activBeta, double activGamma)</arglist>
    </member>
    <member kind="function">
      <type>miopenStatus_t</type>
      <name>miopenSetOpArgsBatchNormInference</name>
      <anchorfile>group___f_u_s_i_o_n.html</anchorfile>
      <anchor>ga671c3d981cd6f5f149adf4421b00fcea</anchor>
      <arglist>(miopenOperatorArgs_t args, const miopenFusionOpDescriptor_t bnOp, const void *alpha, const void *beta, const void *bnScale, const void *bnBias, const void *estimatedMean, const void *estimatedVariance, double epsilon)</arglist>
    </member>
    <member kind="function">
      <type>miopenStatus_t</type>
      <name>miopenSetOpArgsBatchNormForward</name>
      <anchorfile>group___f_u_s_i_o_n.html</anchorfile>
      <anchor>ga6754e3fce005f9b9d352211cc1430b1b</anchor>
      <arglist>(miopenOperatorArgs_t args, const miopenFusionOpDescriptor_t bnOp, const void *alpha, const void *beta, const void *bnScale, const void *bnBias, void *savedMean, void *savedInvVariance, void *runningMean, void *runningVariance, double expAvgFactor, double epsilon)</arglist>
    </member>
    <member kind="function">
      <type>miopenStatus_t</type>
      <name>miopenSetOpArgsBatchNormBackward</name>
      <anchorfile>group___f_u_s_i_o_n.html</anchorfile>
      <anchor>gaa7f311a862d10ff2e4d771072f6ad54a</anchor>
      <arglist>(miopenOperatorArgs_t args, const miopenFusionOpDescriptor_t bnOp, const void *alpha, const void *beta, const void *x, const void *bnScale, const void *bnBias, void *resultBnScaleDiff, void *resultBnBiasDiff, const void *savedMean, const void *savedInvVariance)</arglist>
    </member>
    <member kind="function">
      <type>miopenStatus_t</type>
      <name>miopenSetOpArgsBiasForward</name>
      <anchorfile>group___f_u_s_i_o_n.html</anchorfile>
      <anchor>ga5cddc46abf5c9ea46bc0bbcc161f6eaa</anchor>
      <arglist>(miopenOperatorArgs_t args, const miopenFusionOpDescriptor_t biasOp, const void *alpha, const void *beta, const void *bias)</arglist>
    </member>
    <member kind="function">
      <type>miopenStatus_t</type>
      <name>miopenExecuteFusionPlan</name>
      <anchorfile>group___f_u_s_i_o_n.html</anchorfile>
      <anchor>ga6dae1b3552cbd88138544937b014cd5e</anchor>
      <arglist>(const miopenHandle_t handle, const miopenFusionPlanDescriptor_t fusePlanDesc, const miopenTensorDescriptor_t inputDesc, const void *input, const miopenTensorDescriptor_t outputDesc, void *output, miopenOperatorArgs_t args)</arglist>
    </member>
    <member kind="function">
      <type>miopenStatus_t</type>
      <name>miopenConvolutionBiasActivationForward</name>
      <anchorfile>group___f_u_s_i_o_n.html</anchorfile>
      <anchor>gad2e1ed4cfbdd05c244e407933ed8541b</anchor>
      <arglist>(miopenHandle_t handle, const void *alpha1, const miopenTensorDescriptor_t xDesc, const void *x, const miopenTensorDescriptor_t wDesc, const void *w, const miopenConvolutionDescriptor_t convDesc, miopenConvFwdAlgorithm_t algo, void *workspace, size_t workspaceSizeInBytes, const void *alpha2, const miopenTensorDescriptor_t zDesc, const void *z, const miopenTensorDescriptor_t biasDesc, const void *bias, const miopenActivationDescriptor_t activationDesc, const miopenTensorDescriptor_t yDesc, void *y)</arglist>
    </member>
  </compound>
  <compound kind="group">
    <name>RNN</name>
    <title>RNN</title>
    <filename>group___r_n_n.html</filename>
    <member kind="enumeration">
      <type></type>
      <name>miopenRNNMode_t</name>
      <anchorfile>group___r_n_n.html</anchorfile>
      <anchor>ga016f266507f199def908fe39c43d7877</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>miopenRNNRELU</name>
      <anchorfile>group___r_n_n.html</anchorfile>
      <anchor>gga016f266507f199def908fe39c43d7877af714eb36c96ca365b643e7e8417c10cc</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>miopenRNNTANH</name>
      <anchorfile>group___r_n_n.html</anchorfile>
      <anchor>gga016f266507f199def908fe39c43d7877a1d43e2e3151aa1266cc10e8623c0a32b</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>miopenLSTM</name>
      <anchorfile>group___r_n_n.html</anchorfile>
      <anchor>gga016f266507f199def908fe39c43d7877a97804b8e078f16b327e50e5554df970c</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>miopenGRU</name>
      <anchorfile>group___r_n_n.html</anchorfile>
      <anchor>gga016f266507f199def908fe39c43d7877aa13bc340d91e98e610e92b75e5928a66</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumeration">
      <type></type>
      <name>miopenRNNInputMode_t</name>
      <anchorfile>group___r_n_n.html</anchorfile>
      <anchor>ga11808e1b616d9b9d7e6c701986783af7</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>miopenRNNlinear</name>
      <anchorfile>group___r_n_n.html</anchorfile>
      <anchor>gga11808e1b616d9b9d7e6c701986783af7a168f261ee3dc35ea3fe636c644610c2f</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>miopenRNNskip</name>
      <anchorfile>group___r_n_n.html</anchorfile>
      <anchor>gga11808e1b616d9b9d7e6c701986783af7a99c1caff2a69fb37d964fb3692c989da</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumeration">
      <type></type>
      <name>miopenRNNAlgo_t</name>
      <anchorfile>group___r_n_n.html</anchorfile>
      <anchor>ga6bca6bf2c239cb387d99a07cb6b331c4</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>miopenRNNdefault</name>
      <anchorfile>group___r_n_n.html</anchorfile>
      <anchor>gga6bca6bf2c239cb387d99a07cb6b331c4aee4782e7cebfb009314cdd6c695a5b90</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>miopenRNNfundamental</name>
      <anchorfile>group___r_n_n.html</anchorfile>
      <anchor>gga6bca6bf2c239cb387d99a07cb6b331c4a2dfd71a22376cd8b11bd1a1b4fe46996</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumeration">
      <type></type>
      <name>miopenRNNDirectionMode_t</name>
      <anchorfile>group___r_n_n.html</anchorfile>
      <anchor>ga3c7adae8941033d266f1d5e029504c38</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>miopenRNNunidirection</name>
      <anchorfile>group___r_n_n.html</anchorfile>
      <anchor>gga3c7adae8941033d266f1d5e029504c38a78752802fd2c7248fd4fdddbf613264b</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>miopenRNNbidirection</name>
      <anchorfile>group___r_n_n.html</anchorfile>
      <anchor>gga3c7adae8941033d266f1d5e029504c38a2f0f99690655d0df5ca16bd5011908ea</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumeration">
      <type></type>
      <name>miopenRNNBiasMode_t</name>
      <anchorfile>group___r_n_n.html</anchorfile>
      <anchor>ga47b037e570937a567de38e8898a99f37</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>miopenRNNNoBias</name>
      <anchorfile>group___r_n_n.html</anchorfile>
      <anchor>gga47b037e570937a567de38e8898a99f37a2eb8172730ba33866564865fe4e2d7ea</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>miopenRNNwithBias</name>
      <anchorfile>group___r_n_n.html</anchorfile>
      <anchor>gga47b037e570937a567de38e8898a99f37a14fd5be6ddb03ef2d81d27ff8a868d10</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumeration">
      <type></type>
      <name>miopenRNNGEMMalgoMode_t</name>
      <anchorfile>group___r_n_n.html</anchorfile>
      <anchor>gac7f800028b5634cb08aa191fa6ee0d2a</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>miopenRNNAlgoGEMM</name>
      <anchorfile>group___r_n_n.html</anchorfile>
      <anchor>ggac7f800028b5634cb08aa191fa6ee0d2aa5803419df2c12a2ea02b7560a54ebee7</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumeration">
      <type></type>
      <name>miopenRNNPaddingMode_t</name>
      <anchorfile>group___r_n_n.html</anchorfile>
      <anchor>gaeb0b6dbeefb776e9b663c66a247a7121</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>miopenRNNIONotPadded</name>
      <anchorfile>group___r_n_n.html</anchorfile>
      <anchor>ggaeb0b6dbeefb776e9b663c66a247a7121a280a03179097c1c96d3b26f4f25543e2</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>miopenRNNIOWithPadding</name>
      <anchorfile>group___r_n_n.html</anchorfile>
      <anchor>ggaeb0b6dbeefb776e9b663c66a247a7121a0d1f9de9cb101771b9bb572ddfa2f2ef</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumeration">
      <type></type>
      <name>miopenRNNFWDMode_t</name>
      <anchorfile>group___r_n_n.html</anchorfile>
      <anchor>ga9e0d9408f321de068cc30ad5a7de778b</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>miopenRNNTraining</name>
      <anchorfile>group___r_n_n.html</anchorfile>
      <anchor>gga9e0d9408f321de068cc30ad5a7de778ba2a424459293f8f7a74ab45b70a902f4e</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>miopenRNNInference</name>
      <anchorfile>group___r_n_n.html</anchorfile>
      <anchor>gga9e0d9408f321de068cc30ad5a7de778ba2e5ed4c109920976110cdc7c7fd4cefc</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumeration">
      <type></type>
      <name>miopenRNNBaseLayout_t</name>
      <anchorfile>group___r_n_n.html</anchorfile>
      <anchor>ga637e3f078445cce6869966a46e1a486f</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>miopenRNNDataUnknownLayout</name>
      <anchorfile>group___r_n_n.html</anchorfile>
      <anchor>gga637e3f078445cce6869966a46e1a486fae9bb9aaef77070d408758f4d2dbef44d</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>miopenRNNDataSeqMajorNotPadded</name>
      <anchorfile>group___r_n_n.html</anchorfile>
      <anchor>gga637e3f078445cce6869966a46e1a486fa956d8d35f87c4aa06a4f9d5561aef5f1</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>miopenRNNDataSeqMajorPadded</name>
      <anchorfile>group___r_n_n.html</anchorfile>
      <anchor>gga637e3f078445cce6869966a46e1a486fa04fbe3dee060a5d78eb007028468134f</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>miopenRNNDataBatchMajorPadded</name>
      <anchorfile>group___r_n_n.html</anchorfile>
      <anchor>gga637e3f078445cce6869966a46e1a486fad5db52f1c42231b13de635892872c931</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>MIOPEN_DECLARE_OBJECT</name>
      <anchorfile>group___r_n_n.html</anchorfile>
      <anchor>ga781cb4cafc3e631e189a0ec014a2729f</anchor>
      <arglist>(miopenRNNDescriptor)</arglist>
    </member>
    <member kind="function">
      <type>miopenStatus_t</type>
      <name>miopenCreateRNNDescriptor</name>
      <anchorfile>group___r_n_n.html</anchorfile>
      <anchor>gab6af15d94b2e0932873142d55aa239b4</anchor>
      <arglist>(miopenRNNDescriptor_t *rnnDesc)</arglist>
    </member>
    <member kind="function">
      <type>miopenStatus_t</type>
      <name>miopenGetRNNDescriptor</name>
      <anchorfile>group___r_n_n.html</anchorfile>
      <anchor>ga6ac11f7ee823327d80e1b0ebc6774b3f</anchor>
      <arglist>(miopenRNNDescriptor_t rnnDesc, miopenRNNMode_t *rnnMode, miopenRNNAlgo_t *algoMode, miopenRNNInputMode_t *inputMode, miopenRNNDirectionMode_t *dirMode, miopenRNNBiasMode_t *biasMode, int *hiddenSize, int *layer)</arglist>
    </member>
    <member kind="function">
      <type>miopenStatus_t</type>
      <name>miopenGetRNNDescriptor_V2</name>
      <anchorfile>group___r_n_n.html</anchorfile>
      <anchor>ga102a6710811b4662eee1c3f2858b3498</anchor>
      <arglist>(miopenRNNDescriptor_t rnnDesc, int *hiddenSize, int *layer, miopenDropoutDescriptor_t *dropoutDesc, miopenRNNInputMode_t *inputMode, miopenRNNDirectionMode_t *dirMode, miopenRNNMode_t *rnnMode, miopenRNNBiasMode_t *biasMode, miopenRNNAlgo_t *algoMode, miopenDataType_t *dataType)</arglist>
    </member>
    <member kind="function">
      <type>miopenStatus_t</type>
      <name>miopenDestroyRNNDescriptor</name>
      <anchorfile>group___r_n_n.html</anchorfile>
      <anchor>gaf5675f82ade15ca38b890f6ea4d035b5</anchor>
      <arglist>(miopenRNNDescriptor_t rnnDesc)</arglist>
    </member>
    <member kind="function">
      <type>miopenStatus_t</type>
      <name>miopenSetRNNDescriptor</name>
      <anchorfile>group___r_n_n.html</anchorfile>
      <anchor>ga609253972613b2dc6ea2e9d07697f665</anchor>
      <arglist>(miopenRNNDescriptor_t rnnDesc, const int hsize, const int nlayers, miopenRNNInputMode_t inMode, miopenRNNDirectionMode_t direction, miopenRNNMode_t rnnMode, miopenRNNBiasMode_t biasMode, miopenRNNAlgo_t algo, miopenDataType_t dataType)</arglist>
    </member>
    <member kind="function">
      <type>miopenStatus_t</type>
      <name>miopenSetRNNDescriptor_V2</name>
      <anchorfile>group___r_n_n.html</anchorfile>
      <anchor>gaf02ff9a9c328099753d9244eae95c5d6</anchor>
      <arglist>(miopenRNNDescriptor_t rnnDesc, const int hsize, const int nlayers, miopenDropoutDescriptor_t dropoutDesc, miopenRNNInputMode_t inMode, miopenRNNDirectionMode_t direction, miopenRNNMode_t rnnMode, miopenRNNBiasMode_t biasMode, miopenRNNAlgo_t algo, miopenDataType_t dataType)</arglist>
    </member>
    <member kind="function">
      <type>miopenStatus_t</type>
      <name>miopenSetRNNDataSeqTensorDescriptor</name>
      <anchorfile>group___r_n_n.html</anchorfile>
      <anchor>gadaf0448f9d4ee351183c7e83d2b5f520</anchor>
      <arglist>(miopenSeqTensorDescriptor_t seqTensorDesc, miopenDataType_t dataType, miopenRNNBaseLayout_t layout, int maxSequenceLen, int batchSize, int vectorSize, const int *sequenceLenArray, void *paddingMarker)</arglist>
    </member>
    <member kind="function">
      <type>miopenStatus_t</type>
      <name>miopenGetRNNDataSeqTensorDescriptor</name>
      <anchorfile>group___r_n_n.html</anchorfile>
      <anchor>ga90c8af014044546749e8dfd68a074ac3</anchor>
      <arglist>(miopenSeqTensorDescriptor_t seqTensorDesc, miopenDataType_t *dataType, miopenRNNBaseLayout_t *layout, int *maxSequenceLen, int *batchSize, int *vectorSize, int sequenceLenArrayLimit, int *sequenceLenArray, void *paddingMarker)</arglist>
    </member>
    <member kind="function">
      <type>miopenStatus_t</type>
      <name>miopenGetRNNWorkspaceSize</name>
      <anchorfile>group___r_n_n.html</anchorfile>
      <anchor>gad2f8db58662277452612e0b3381123fe</anchor>
      <arglist>(miopenHandle_t handle, const miopenRNNDescriptor_t rnnDesc, const int sequenceLen, const miopenTensorDescriptor_t *xDesc, size_t *numBytes)</arglist>
    </member>
    <member kind="function">
      <type>miopenStatus_t</type>
      <name>miopenGetRNNTrainingReserveSize</name>
      <anchorfile>group___r_n_n.html</anchorfile>
      <anchor>ga59b770093f4ab10d72126436b1d0395a</anchor>
      <arglist>(miopenHandle_t handle, miopenRNNDescriptor_t rnnDesc, const int sequenceLen, const miopenTensorDescriptor_t *xDesc, size_t *numBytes)</arglist>
    </member>
    <member kind="function">
      <type>miopenStatus_t</type>
      <name>miopenGetRNNTempSpaceSizes</name>
      <anchorfile>group___r_n_n.html</anchorfile>
      <anchor>ga82cf9678664959b494765e56f06f87c3</anchor>
      <arglist>(miopenHandle_t handle, miopenRNNDescriptor_t rnnDesc, miopenSeqTensorDescriptor_t xDesc, miopenRNNFWDMode_t fwdMode, size_t *workSpaceSize, size_t *reserveSpaceSize)</arglist>
    </member>
    <member kind="function">
      <type>miopenStatus_t</type>
      <name>miopenGetRNNParamsSize</name>
      <anchorfile>group___r_n_n.html</anchorfile>
      <anchor>ga2394f4629b6da29bf2145f0e0220810c</anchor>
      <arglist>(miopenHandle_t handle, miopenRNNDescriptor_t rnnDesc, miopenTensorDescriptor_t xDesc, size_t *numBytes, miopenDataType_t dtype)</arglist>
    </member>
    <member kind="function">
      <type>miopenStatus_t</type>
      <name>miopenGetRNNParamsDescriptor</name>
      <anchorfile>group___r_n_n.html</anchorfile>
      <anchor>gadf75eb328f82b81ddc83d4230b0c54af</anchor>
      <arglist>(miopenHandle_t handle, miopenRNNDescriptor_t rnnDesc, miopenTensorDescriptor_t xDesc, miopenTensorDescriptor_t wDesc, miopenDataType_t dtype)</arglist>
    </member>
    <member kind="function">
      <type>miopenStatus_t</type>
      <name>miopenGetRNNInputTensorSize</name>
      <anchorfile>group___r_n_n.html</anchorfile>
      <anchor>ga97b8a45e7925826423dd5e2795a5f8cd</anchor>
      <arglist>(miopenHandle_t handle, miopenRNNDescriptor_t rnnDesc, const int seqLen, miopenTensorDescriptor_t *xDesc, size_t *numBytes)</arglist>
    </member>
    <member kind="function">
      <type>miopenStatus_t</type>
      <name>miopenGetRNNHiddenTensorSize</name>
      <anchorfile>group___r_n_n.html</anchorfile>
      <anchor>gaf5d51f866c74ce07a6cc4286fa06200c</anchor>
      <arglist>(miopenHandle_t handle, miopenRNNDescriptor_t rnnDesc, const int seqLen, miopenTensorDescriptor_t *xDesc, size_t *numBytes)</arglist>
    </member>
    <member kind="function">
      <type>miopenStatus_t</type>
      <name>miopenGetRNNLayerParamSize</name>
      <anchorfile>group___r_n_n.html</anchorfile>
      <anchor>gab082ab70bd71d3d5a248b76bf96def6b</anchor>
      <arglist>(miopenHandle_t handle, miopenRNNDescriptor_t rnnDesc, const int layer, miopenTensorDescriptor_t xDesc, const int paramID, size_t *numBytes)</arglist>
    </member>
    <member kind="function">
      <type>miopenStatus_t</type>
      <name>miopenGetRNNLayerBiasSize</name>
      <anchorfile>group___r_n_n.html</anchorfile>
      <anchor>ga5ed3d73c243de909de9ebf58a1d3d5d8</anchor>
      <arglist>(miopenHandle_t handle, miopenRNNDescriptor_t rnnDesc, const int layer, const int biasID, size_t *numBytes)</arglist>
    </member>
    <member kind="function">
      <type>miopenStatus_t</type>
      <name>miopenGetRNNLayerParam</name>
      <anchorfile>group___r_n_n.html</anchorfile>
      <anchor>gacd0730d483c86d3f9f047658a58f5695</anchor>
      <arglist>(miopenHandle_t handle, miopenRNNDescriptor_t rnnDesc, const int layer, miopenTensorDescriptor_t xDesc, miopenTensorDescriptor_t wDesc, const void *w, const int paramID, miopenTensorDescriptor_t paramDesc, void *layerParam)</arglist>
    </member>
    <member kind="function">
      <type>miopenStatus_t</type>
      <name>miopenGetRNNLayerBias</name>
      <anchorfile>group___r_n_n.html</anchorfile>
      <anchor>ga4f27d46b80c043ef254fbc2caf481423</anchor>
      <arglist>(miopenHandle_t handle, miopenRNNDescriptor_t rnnDesc, const int layer, miopenTensorDescriptor_t xDesc, miopenTensorDescriptor_t wDesc, const void *w, const int biasID, miopenTensorDescriptor_t biasDesc, void *layerBias)</arglist>
    </member>
    <member kind="function">
      <type>miopenStatus_t</type>
      <name>miopenGetRNNLayerParamOffset</name>
      <anchorfile>group___r_n_n.html</anchorfile>
      <anchor>ga2c445114d21ef806585c4de8fe777b70</anchor>
      <arglist>(miopenRNNDescriptor_t rnnDesc, const int layer, miopenTensorDescriptor_t xDesc, const int paramID, miopenTensorDescriptor_t paramDesc, size_t *layerParamOffset)</arglist>
    </member>
    <member kind="function">
      <type>miopenStatus_t</type>
      <name>miopenGetRNNLayerBiasOffset</name>
      <anchorfile>group___r_n_n.html</anchorfile>
      <anchor>ga24389ba4b784d7211f06b6fe4c94c8d7</anchor>
      <arglist>(miopenRNNDescriptor_t rnnDesc, const int layer, miopenTensorDescriptor_t xDesc, const int biasID, miopenTensorDescriptor_t biasDesc, size_t *layerBiasOffset)</arglist>
    </member>
    <member kind="function">
      <type>miopenStatus_t</type>
      <name>miopenSetRNNLayerParam</name>
      <anchorfile>group___r_n_n.html</anchorfile>
      <anchor>gaa13b97d4ebe9960126140e7838701e13</anchor>
      <arglist>(miopenHandle_t handle, miopenRNNDescriptor_t rnnDesc, const int layer, miopenTensorDescriptor_t xDesc, miopenTensorDescriptor_t wDesc, void *w, const int paramID, miopenTensorDescriptor_t paramDesc, const void *layerParam)</arglist>
    </member>
    <member kind="function">
      <type>miopenStatus_t</type>
      <name>miopenSetRNNLayerBias</name>
      <anchorfile>group___r_n_n.html</anchorfile>
      <anchor>ga1991ee70fba68f8de643c1a4aa183bf7</anchor>
      <arglist>(miopenHandle_t handle, miopenRNNDescriptor_t rnnDesc, const int layer, miopenTensorDescriptor_t xDesc, miopenTensorDescriptor_t wDesc, void *w, const int biasID, miopenTensorDescriptor_t biasDesc, const void *layerBias)</arglist>
    </member>
    <member kind="function">
      <type>miopenStatus_t</type>
      <name>miopenSetRNNPaddingMode</name>
      <anchorfile>group___r_n_n.html</anchorfile>
      <anchor>gaf9f746d7c62bfbf62ff8663e54360771</anchor>
      <arglist>(miopenRNNDescriptor_t rnnDesc, miopenRNNPaddingMode_t paddingMode)</arglist>
    </member>
    <member kind="function">
      <type>miopenStatus_t</type>
      <name>miopenGetRNNPaddingMode</name>
      <anchorfile>group___r_n_n.html</anchorfile>
      <anchor>ga86fc04d775ab501c0ab829703b2cf738</anchor>
      <arglist>(miopenRNNDescriptor_t rnnDesc, miopenRNNPaddingMode_t *paddingMode)</arglist>
    </member>
    <member kind="function">
      <type>miopenStatus_t</type>
      <name>miopenRNNForward</name>
      <anchorfile>group___r_n_n.html</anchorfile>
      <anchor>ga8d5b72681258d9cd7f50ba03ab6215e5</anchor>
      <arglist>(miopenHandle_t handle, const miopenRNNDescriptor_t rnnDesc, miopenRNNFWDMode_t fwdMode, const miopenSeqTensorDescriptor_t xDesc, const void *x, const miopenTensorDescriptor_t hDesc, const void *hx, void *hy, const miopenTensorDescriptor_t cDesc, const void *cx, void *cy, const miopenSeqTensorDescriptor_t yDesc, void *y, const void *w, size_t weightSpaceSize, void *workSpace, size_t workSpaceNumBytes, void *reserveSpace, size_t reserveSpaceNumBytes)</arglist>
    </member>
    <member kind="function">
      <type>miopenStatus_t</type>
      <name>miopenRNNBackwardSeqData</name>
      <anchorfile>group___r_n_n.html</anchorfile>
      <anchor>ga44ac8be6fceea4aa1e755958960be862</anchor>
      <arglist>(miopenHandle_t handle, const miopenRNNDescriptor_t rnnDesc, const miopenSeqTensorDescriptor_t yDesc, const void *y, const void *dy, const miopenTensorDescriptor_t hDesc, const void *hx, const void *dhy, void *dhx, const miopenTensorDescriptor_t cDesc, const void *cx, const void *dcy, void *dcx, const miopenSeqTensorDescriptor_t xDesc, void *dx, const void *w, size_t weightSpaceSize, void *workSpace, size_t workSpaceNumBytes, void *reserveSpace, size_t reserveSpaceNumBytes)</arglist>
    </member>
    <member kind="function">
      <type>miopenStatus_t</type>
      <name>miopenRNNBackwardWeightsSeqTensor</name>
      <anchorfile>group___r_n_n.html</anchorfile>
      <anchor>ga1ff33e5279bfca3ed08d59bfa8069a9d</anchor>
      <arglist>(miopenHandle_t handle, const miopenRNNDescriptor_t rnnDesc, const miopenSeqTensorDescriptor_t xDesc, const void *x, const miopenTensorDescriptor_t hDesc, const void *hx, const miopenSeqTensorDescriptor_t yDesc, const void *y, void *dw, size_t weightSpaceSize, void *workSpace, size_t workSpaceNumBytes, const void *reserveSpace, size_t reserveSpaceNumBytes)</arglist>
    </member>
    <member kind="function">
      <type>miopenStatus_t</type>
      <name>miopenRNNForwardTraining</name>
      <anchorfile>group___r_n_n.html</anchorfile>
      <anchor>gae7844191464b02e0343af135904413ab</anchor>
      <arglist>(miopenHandle_t handle, const miopenRNNDescriptor_t rnnDesc, const int sequenceLen, const miopenTensorDescriptor_t *xDesc, const void *x, const miopenTensorDescriptor_t hxDesc, const void *hx, const miopenTensorDescriptor_t cxDesc, const void *cx, const miopenTensorDescriptor_t wDesc, const void *w, const miopenTensorDescriptor_t *yDesc, void *y, const miopenTensorDescriptor_t hyDesc, void *hy, const miopenTensorDescriptor_t cyDesc, void *cy, void *workSpace, size_t workSpaceNumBytes, void *reserveSpace, size_t reserveSpaceNumBytes)</arglist>
    </member>
    <member kind="function">
      <type>miopenStatus_t</type>
      <name>miopenRNNBackwardData</name>
      <anchorfile>group___r_n_n.html</anchorfile>
      <anchor>ga6ac03fa91d038feb1206b4f8a770af97</anchor>
      <arglist>(miopenHandle_t handle, const miopenRNNDescriptor_t rnnDesc, const int sequenceLen, const miopenTensorDescriptor_t *yDesc, const void *y, const miopenTensorDescriptor_t *dyDesc, const void *dy, const miopenTensorDescriptor_t dhyDesc, const void *dhy, const miopenTensorDescriptor_t dcyDesc, const void *dcy, const miopenTensorDescriptor_t wDesc, const void *w, const miopenTensorDescriptor_t hxDesc, const void *hx, const miopenTensorDescriptor_t cxDesc, const void *cx, const miopenTensorDescriptor_t *dxDesc, void *dx, const miopenTensorDescriptor_t dhxDesc, void *dhx, const miopenTensorDescriptor_t dcxDesc, void *dcx, void *workSpace, size_t workSpaceNumBytes, void *reserveSpace, size_t reserveSpaceNumBytes)</arglist>
    </member>
    <member kind="function">
      <type>miopenStatus_t</type>
      <name>miopenRNNBackwardWeights</name>
      <anchorfile>group___r_n_n.html</anchorfile>
      <anchor>ga55040b58e6820d21f58957d356715739</anchor>
      <arglist>(miopenHandle_t handle, const miopenRNNDescriptor_t rnnDesc, const int sequenceLen, const miopenTensorDescriptor_t *xDesc, const void *x, const miopenTensorDescriptor_t hxDesc, const void *hx, const miopenTensorDescriptor_t *yDesc, const void *y, const miopenTensorDescriptor_t dwDesc, void *dw, void *workSpace, size_t workSpaceNumBytes, const void *reserveSpace, size_t reserveSpaceNumBytes)</arglist>
    </member>
    <member kind="function">
      <type>miopenStatus_t</type>
      <name>miopenRNNForwardInference</name>
      <anchorfile>group___r_n_n.html</anchorfile>
      <anchor>gafd8f2c43d92a7baf7de2e431bbcf7199</anchor>
      <arglist>(miopenHandle_t handle, miopenRNNDescriptor_t rnnDesc, const int sequenceLen, const miopenTensorDescriptor_t *xDesc, const void *x, const miopenTensorDescriptor_t hxDesc, const void *hx, const miopenTensorDescriptor_t cxDesc, const void *cx, const miopenTensorDescriptor_t wDesc, const void *w, const miopenTensorDescriptor_t *yDesc, void *y, const miopenTensorDescriptor_t hyDesc, void *hy, const miopenTensorDescriptor_t cyDesc, void *cy, void *workSpace, size_t workSpaceNumBytes)</arglist>
    </member>
  </compound>
  <compound kind="group">
    <name>LossFunction</name>
    <title>LossFunction</title>
    <filename>group___loss_function.html</filename>
    <member kind="enumeration">
      <type></type>
      <name>miopenCTCLossAlgo_t</name>
      <anchorfile>group___loss_function.html</anchorfile>
      <anchor>ga3a791761ce6a39c117116a1f0075b2c6</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>MIOPEN_CTC_LOSS_ALGO_DETERMINISTIC</name>
      <anchorfile>group___loss_function.html</anchorfile>
      <anchor>gga3a791761ce6a39c117116a1f0075b2c6ad74fca207ff5f01cc77f0d50efc155a1</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>MIOPEN_DECLARE_OBJECT</name>
      <anchorfile>group___loss_function.html</anchorfile>
      <anchor>ga5060d9edff6010a4a0e9720659a897fd</anchor>
      <arglist>(miopenCTCLossDescriptor)</arglist>
    </member>
    <member kind="function">
      <type>miopenStatus_t</type>
      <name>miopenCreateCTCLossDescriptor</name>
      <anchorfile>group___loss_function.html</anchorfile>
      <anchor>ga514750d47eedc6069c1c6fa5aa696bf4</anchor>
      <arglist>(miopenCTCLossDescriptor_t *ctcLossDesc)</arglist>
    </member>
    <member kind="function">
      <type>miopenStatus_t</type>
      <name>miopenGetCTCLossDescriptor</name>
      <anchorfile>group___loss_function.html</anchorfile>
      <anchor>ga50fa7cf5fca14cc1b9181d004b90e10f</anchor>
      <arglist>(miopenCTCLossDescriptor_t ctcLossDesc, miopenDataType_t *dataType, int *blank_label_id, bool *apply_softmax_layer)</arglist>
    </member>
    <member kind="function">
      <type>miopenStatus_t</type>
      <name>miopenDestroyCTCLossDescriptor</name>
      <anchorfile>group___loss_function.html</anchorfile>
      <anchor>gae3a6a39b1a961c9342674fa62342393a</anchor>
      <arglist>(miopenCTCLossDescriptor_t ctcLossDesc)</arglist>
    </member>
    <member kind="function">
      <type>miopenStatus_t</type>
      <name>miopenSetCTCLossDescriptor</name>
      <anchorfile>group___loss_function.html</anchorfile>
      <anchor>ga4cf2c0ac1a30f13c3503be5a98cdccd3</anchor>
      <arglist>(miopenCTCLossDescriptor_t ctcLossDesc, miopenDataType_t dataType, const int blank_label_id, bool apply_softmax_layer)</arglist>
    </member>
    <member kind="function">
      <type>miopenStatus_t</type>
      <name>miopenGetCTCLossWorkspaceSize</name>
      <anchorfile>group___loss_function.html</anchorfile>
      <anchor>ga0b277cfacf38a158bf753d8edc609dc1</anchor>
      <arglist>(miopenHandle_t handle, const miopenTensorDescriptor_t probsDesc, const miopenTensorDescriptor_t gradientsDesc, const int *labels, const int *labelLengths, const int *inputLengths, miopenCTCLossAlgo_t algo, const miopenCTCLossDescriptor_t ctcLossDesc, size_t *workSpaceSize)</arglist>
    </member>
    <member kind="function">
      <type>miopenStatus_t</type>
      <name>miopenCTCLoss</name>
      <anchorfile>group___loss_function.html</anchorfile>
      <anchor>ga4d8ec531689521616491dad2e3ae7c43</anchor>
      <arglist>(miopenHandle_t handle, const miopenTensorDescriptor_t probsDesc, const void *probs, const int *labels, const int *labelLengths, const int *inputLengths, void *losses, const miopenTensorDescriptor_t gradientsDesc, void *gradients, miopenCTCLossAlgo_t algo, const miopenCTCLossDescriptor_t ctcLossDesc, void *workSpace, size_t workSpaceSize)</arglist>
    </member>
  </compound>
  <compound kind="group">
    <name>dropout</name>
    <title>Dropout</title>
    <filename>group__dropout.html</filename>
    <member kind="enumeration">
      <type></type>
      <name>miopenRNGType_t</name>
      <anchorfile>group__dropout.html</anchorfile>
      <anchor>ga283a437b36e9ed35ce7b80490de4d15d</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>MIOPEN_RNG_PSEUDO_XORWOW</name>
      <anchorfile>group__dropout.html</anchorfile>
      <anchor>gga283a437b36e9ed35ce7b80490de4d15daeda0fbe383a397b303a6ab43efa5967e</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <type>miopenStatus_t</type>
      <name>miopenCreateDropoutDescriptor</name>
      <anchorfile>group__dropout.html</anchorfile>
      <anchor>gabd41a45a7c2f7785eb124080071e9e69</anchor>
      <arglist>(miopenDropoutDescriptor_t *dropoutDesc)</arglist>
    </member>
    <member kind="function">
      <type>miopenStatus_t</type>
      <name>miopenDestroyDropoutDescriptor</name>
      <anchorfile>group__dropout.html</anchorfile>
      <anchor>ga053288f154f85d8695f3825853d7b44e</anchor>
      <arglist>(miopenDropoutDescriptor_t dropoutDesc)</arglist>
    </member>
    <member kind="function">
      <type>miopenStatus_t</type>
      <name>miopenDropoutGetReserveSpaceSize</name>
      <anchorfile>group__dropout.html</anchorfile>
      <anchor>ga7a1ea2d1245dd07eaf7ec2c59e19e842</anchor>
      <arglist>(const miopenTensorDescriptor_t xDesc, size_t *reserveSpaceSizeInBytes)</arglist>
    </member>
    <member kind="function">
      <type>miopenStatus_t</type>
      <name>miopenDropoutGetStatesSize</name>
      <anchorfile>group__dropout.html</anchorfile>
      <anchor>ga323bbd149e25ef334cb4b52ef4e57a1c</anchor>
      <arglist>(miopenHandle_t handle, size_t *stateSizeInBytes)</arglist>
    </member>
    <member kind="function">
      <type>miopenStatus_t</type>
      <name>miopenGetDropoutDescriptor</name>
      <anchorfile>group__dropout.html</anchorfile>
      <anchor>gaabb82ee87a6e073d3acfc95b242fdbb8</anchor>
      <arglist>(miopenDropoutDescriptor_t dropoutDesc, miopenHandle_t handle, float *dropout, void **states, unsigned long long *seed, bool *use_mask, bool *state_evo, miopenRNGType_t *rng_mode)</arglist>
    </member>
    <member kind="function">
      <type>miopenStatus_t</type>
      <name>miopenRestoreDropoutDescriptor</name>
      <anchorfile>group__dropout.html</anchorfile>
      <anchor>gad0b1c52d5641f0fb09f6baf17b7d051f</anchor>
      <arglist>(miopenDropoutDescriptor_t dropoutDesc, miopenHandle_t handle, float dropout, void *states, size_t stateSizeInBytes, unsigned long long seed, bool use_mask, bool state_evo, miopenRNGType_t rng_mode)</arglist>
    </member>
    <member kind="function">
      <type>miopenStatus_t</type>
      <name>miopenSetDropoutDescriptor</name>
      <anchorfile>group__dropout.html</anchorfile>
      <anchor>gae60f56b35fd49b562141d8e00b1a20e7</anchor>
      <arglist>(miopenDropoutDescriptor_t dropoutDesc, miopenHandle_t handle, float dropout, void *states, size_t stateSizeInBytes, unsigned long long seed, bool use_mask, bool state_evo, miopenRNGType_t rng_mode)</arglist>
    </member>
    <member kind="function">
      <type>miopenStatus_t</type>
      <name>miopenDropoutForward</name>
      <anchorfile>group__dropout.html</anchorfile>
      <anchor>gaa695ad520fe252a47102bb49c56b52a5</anchor>
      <arglist>(miopenHandle_t handle, const miopenDropoutDescriptor_t dropoutDesc, const miopenTensorDescriptor_t noise_shape, const miopenTensorDescriptor_t xDesc, const void *x, const miopenTensorDescriptor_t yDesc, void *y, void *reserveSpace, size_t reserveSpaceSizeInBytes)</arglist>
    </member>
    <member kind="function">
      <type>miopenStatus_t</type>
      <name>miopenDropoutBackward</name>
      <anchorfile>group__dropout.html</anchorfile>
      <anchor>gac0a6cf12640c7a959a27412b8304954b</anchor>
      <arglist>(miopenHandle_t handle, const miopenDropoutDescriptor_t dropoutDesc, const miopenTensorDescriptor_t noise_shape, const miopenTensorDescriptor_t dyDesc, const void *dy, const miopenTensorDescriptor_t dxDesc, void *dx, void *reserveSpace, size_t reserveSpaceSizeInBytes)</arglist>
    </member>
  </compound>
  <compound kind="group">
    <name>TensorReduce</name>
    <title>TensorReduce</title>
    <filename>group___tensor_reduce.html</filename>
    <member kind="define">
      <type>#define</type>
      <name>MIOPEN_API_VERSION_REDUCE_TENSOR</name>
      <anchorfile>group___tensor_reduce.html</anchorfile>
      <anchor>gab4f973d3f1f731ca1f0c1ca3ae225e7c</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumeration">
      <type></type>
      <name>miopenReduceTensorOp_t</name>
      <anchorfile>group___tensor_reduce.html</anchorfile>
      <anchor>ga70e205d9a10688c29474cd8795521ddd</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>MIOPEN_REDUCE_TENSOR_ADD</name>
      <anchorfile>miopen_8h.html</anchorfile>
      <anchor>ga70e205d9a10688c29474cd8795521dddae88d3f61f4d036c581d47d2242011edb</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>MIOPEN_REDUCE_TENSOR_MUL</name>
      <anchorfile>miopen_8h.html</anchorfile>
      <anchor>ga70e205d9a10688c29474cd8795521ddda509f2659e4d54a99d17844ee8de19130</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>MIOPEN_REDUCE_TENSOR_MIN</name>
      <anchorfile>miopen_8h.html</anchorfile>
      <anchor>ga70e205d9a10688c29474cd8795521dddae1af9483b548971223d29c8f12862820</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>MIOPEN_REDUCE_TENSOR_MAX</name>
      <anchorfile>miopen_8h.html</anchorfile>
      <anchor>ga70e205d9a10688c29474cd8795521ddda6c82f5dec443a93777291a68de6709fe</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>MIOPEN_REDUCE_TENSOR_AMAX</name>
      <anchorfile>miopen_8h.html</anchorfile>
      <anchor>ga70e205d9a10688c29474cd8795521dddac956caf0ac6e9ffbf647eca0bb3c13ab</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>MIOPEN_REDUCE_TENSOR_AVG</name>
      <anchorfile>miopen_8h.html</anchorfile>
      <anchor>ga70e205d9a10688c29474cd8795521ddda7088afde0cec574d45add46d4f1d5534</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>MIOPEN_REDUCE_TENSOR_NORM1</name>
      <anchorfile>miopen_8h.html</anchorfile>
      <anchor>ga70e205d9a10688c29474cd8795521ddda9df43ac0efb3c7061e2a131c337050b8</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>MIOPEN_REDUCE_TENSOR_NORM2</name>
      <anchorfile>miopen_8h.html</anchorfile>
      <anchor>ga70e205d9a10688c29474cd8795521dddae8a5d817789938ae4cf77d0496b7122f</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumeration">
      <type></type>
      <name>miopenReduceTensorIndices_t</name>
      <anchorfile>group___tensor_reduce.html</anchorfile>
      <anchor>ga4dd527c6b506c34ec06d641551d78b7c</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>MIOPEN_REDUCE_TENSOR_NO_INDICES</name>
      <anchorfile>miopen_8h.html</anchorfile>
      <anchor>ga4dd527c6b506c34ec06d641551d78b7ca630bd9b0b0f29fdd4acd7f1428c9e112</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>MIOPEN_REDUCE_TENSOR_FLATTENED_INDICES</name>
      <anchorfile>miopen_8h.html</anchorfile>
      <anchor>ga4dd527c6b506c34ec06d641551d78b7ca04e405c32e661195b6af8a3c8d1fdf24</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumeration">
      <type></type>
      <name>miopenIndicesType_t</name>
      <anchorfile>group___tensor_reduce.html</anchorfile>
      <anchor>ga8c58d2c6bd149d6140ea81e88374d82b</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>MIOPEN_32BIT_INDICES</name>
      <anchorfile>miopen_8h.html</anchorfile>
      <anchor>ga8c58d2c6bd149d6140ea81e88374d82babe4c1ddd72f1a427a032ed9ccff8a8bb</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>MIOPEN_64BIT_INDICES</name>
      <anchorfile>miopen_8h.html</anchorfile>
      <anchor>ga8c58d2c6bd149d6140ea81e88374d82bafd7b2202fcf90028f49773fde1b11435</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>MIOPEN_16BIT_INDICES</name>
      <anchorfile>miopen_8h.html</anchorfile>
      <anchor>ga8c58d2c6bd149d6140ea81e88374d82badf88480d0cc300ddba2b326b78e68d84</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>MIOPEN_8BIT_INDICES</name>
      <anchorfile>miopen_8h.html</anchorfile>
      <anchor>ga8c58d2c6bd149d6140ea81e88374d82babae5e385da771a86da08f2873630cf33</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>MIOPEN_DECLARE_OBJECT</name>
      <anchorfile>group___tensor_reduce.html</anchorfile>
      <anchor>gabdbbaf51367b7518e4ebbc5faf62357f</anchor>
      <arglist>(miopenReduceTensorDescriptor)</arglist>
    </member>
    <member kind="function">
      <type>miopenStatus_t</type>
      <name>miopenCreateReduceTensorDescriptor</name>
      <anchorfile>group___tensor_reduce.html</anchorfile>
      <anchor>ga5f77b41324cbed4284d00b2e80140c6e</anchor>
      <arglist>(miopenReduceTensorDescriptor_t *reduceTensorDesc)</arglist>
    </member>
    <member kind="function">
      <type>miopenStatus_t</type>
      <name>miopenDestroyReduceTensorDescriptor</name>
      <anchorfile>group___tensor_reduce.html</anchorfile>
      <anchor>gac17bc3081a6e585c993d4c26e67f5c30</anchor>
      <arglist>(miopenReduceTensorDescriptor_t reduceTensorDesc)</arglist>
    </member>
    <member kind="function">
      <type>miopenStatus_t</type>
      <name>miopenSetReduceTensorDescriptor</name>
      <anchorfile>group___tensor_reduce.html</anchorfile>
      <anchor>ga5dfa99bd883f588f29d1b927917e6ad4</anchor>
      <arglist>(miopenReduceTensorDescriptor_t reduceTensorDesc, miopenReduceTensorOp_t reduceTensorOp, miopenDataType_t reduceTensorCompType, miopenNanPropagation_t reduceTensorNanOpt, miopenReduceTensorIndices_t reduceTensorIndices, miopenIndicesType_t reduceTensorIndicesType)</arglist>
    </member>
    <member kind="function">
      <type>miopenStatus_t</type>
      <name>miopenGetReduceTensorDescriptor</name>
      <anchorfile>group___tensor_reduce.html</anchorfile>
      <anchor>gafd5a88ef7c4bc12f0cb57e8ea20365d2</anchor>
      <arglist>(const miopenReduceTensorDescriptor_t reduceTensorDesc, miopenReduceTensorOp_t *reduceTensorOp, miopenDataType_t *reduceTensorCompType, miopenNanPropagation_t *reduceTensorNanOpt, miopenReduceTensorIndices_t *reduceTensorIndices, miopenIndicesType_t *reduceTensorIndicesType)</arglist>
    </member>
    <member kind="function">
      <type>miopenStatus_t</type>
      <name>miopenGetReductionIndicesSize</name>
      <anchorfile>group___tensor_reduce.html</anchorfile>
      <anchor>gaad36391f9ef26c3404b57d6881a45341</anchor>
      <arglist>(miopenHandle_t handle, const miopenReduceTensorDescriptor_t reduceTensorDesc, const miopenTensorDescriptor_t aDesc, const miopenTensorDescriptor_t cDesc, size_t *sizeInBytes)</arglist>
    </member>
    <member kind="function">
      <type>miopenStatus_t</type>
      <name>miopenGetReductionWorkspaceSize</name>
      <anchorfile>group___tensor_reduce.html</anchorfile>
      <anchor>gae6168e1d701ab82cb44fed031c93d699</anchor>
      <arglist>(miopenHandle_t handle, const miopenReduceTensorDescriptor_t reduceTensorDesc, const miopenTensorDescriptor_t aDesc, const miopenTensorDescriptor_t cDesc, size_t *sizeInBytes)</arglist>
    </member>
    <member kind="function">
      <type>miopenStatus_t</type>
      <name>miopenReduceTensor</name>
      <anchorfile>group___tensor_reduce.html</anchorfile>
      <anchor>gaac1654ff051edc15a3bc17f99bf96736</anchor>
      <arglist>(miopenHandle_t handle, const miopenReduceTensorDescriptor_t reduceTensorDesc, void *indices, size_t indicesSizeInBytes, void *workspace, size_t workspaceSizeInBytes, const void *alpha, const miopenTensorDescriptor_t aDesc, const void *A, const void *beta, const miopenTensorDescriptor_t cDesc, void *C)</arglist>
    </member>
  </compound>
  <compound kind="group">
    <name>find2</name>
    <title>Find2</title>
    <filename>group__find2.html</filename>
    <class kind="struct">miopenTensorArgument_t</class>
    <member kind="enumeration">
      <type></type>
      <name>miopenProblemDirection_t</name>
      <anchorfile>group__find2.html</anchorfile>
      <anchor>gab7565f4a33ed5b4f7fa1793a7dad6337</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>miopenProblemDirectionForward</name>
      <anchorfile>group__find2.html</anchorfile>
      <anchor>ggab7565f4a33ed5b4f7fa1793a7dad6337abc2dbfdc4ef1b83119c3777e7e80de44</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>miopenProblemDirectionBackward</name>
      <anchorfile>group__find2.html</anchorfile>
      <anchor>ggab7565f4a33ed5b4f7fa1793a7dad6337af99443bbae30b51588521c921a858f99</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>miopenProblemDirectionBackwardWeights</name>
      <anchorfile>group__find2.html</anchorfile>
      <anchor>ggab7565f4a33ed5b4f7fa1793a7dad6337a7c23676cb2177e581995e740475afd79</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumeration">
      <type></type>
      <name>miopenTensorArgumentId_t</name>
      <anchorfile>group__find2.html</anchorfile>
      <anchor>ga9aadaf9e83bdc5303cfb58955514502c</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>miopenTensorArgumentIdInvalid</name>
      <anchorfile>group__find2.html</anchorfile>
      <anchor>gga9aadaf9e83bdc5303cfb58955514502cac707682d5986bbade17817928e00d06f</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>miopenTensorConvolutionX</name>
      <anchorfile>group__find2.html</anchorfile>
      <anchor>gga9aadaf9e83bdc5303cfb58955514502ca2fc5c7f9a98eb6976f6d38d7db896db2</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>miopenTensorConvolutionW</name>
      <anchorfile>group__find2.html</anchorfile>
      <anchor>gga9aadaf9e83bdc5303cfb58955514502cad407972fb41ab847593d4353388dce22</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>miopenTensorConvolutionY</name>
      <anchorfile>group__find2.html</anchorfile>
      <anchor>gga9aadaf9e83bdc5303cfb58955514502ca9d50f1debc571d38ed1709912c9c5774</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>miopenTensorActivationX</name>
      <anchorfile>group__find2.html</anchorfile>
      <anchor>gga9aadaf9e83bdc5303cfb58955514502ca6c6f3d3a9c2c618da7b1c43fa33f67f0</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>miopenTensorActivationY</name>
      <anchorfile>group__find2.html</anchorfile>
      <anchor>gga9aadaf9e83bdc5303cfb58955514502caf5eab1e565bf6f3d30f425e9ca34337f</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>miopenTensorActivationDX</name>
      <anchorfile>group__find2.html</anchorfile>
      <anchor>gga9aadaf9e83bdc5303cfb58955514502ca60c93134ee0f45d7b77e92f214a93553</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>miopenTensorActivationDY</name>
      <anchorfile>group__find2.html</anchorfile>
      <anchor>gga9aadaf9e83bdc5303cfb58955514502ca202338b34064b12cd5750268a562df7e</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>miopenTensorBiasX</name>
      <anchorfile>group__find2.html</anchorfile>
      <anchor>gga9aadaf9e83bdc5303cfb58955514502cafa54dfab241618980f8a69d3b21b6e0b</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>miopenTensorBiasY</name>
      <anchorfile>group__find2.html</anchorfile>
      <anchor>gga9aadaf9e83bdc5303cfb58955514502cade8d8f0207aa2246f2b7f4ca2434c74f</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>miopenTensorBias</name>
      <anchorfile>group__find2.html</anchorfile>
      <anchor>gga9aadaf9e83bdc5303cfb58955514502caf36be3d67213320a22999ed32c62a90a</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumeration">
      <type></type>
      <name>miopenFindResultsOrder_t</name>
      <anchorfile>group__find2.html</anchorfile>
      <anchor>ga10ba204b05e13c25e81b70abd6b3cd69</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>miopenFindResultsOrderByTime</name>
      <anchorfile>group__find2.html</anchorfile>
      <anchor>gga10ba204b05e13c25e81b70abd6b3cd69aed134126adf8e75b11f27bd485869ade</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>miopenFindResultsOrderByWorkspaceSize</name>
      <anchorfile>group__find2.html</anchorfile>
      <anchor>gga10ba204b05e13c25e81b70abd6b3cd69a165b3ee97cc1daa65fbdb22fdcb2a81f</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>MIOPEN_DECLARE_OBJECT</name>
      <anchorfile>group__find2.html</anchorfile>
      <anchor>ga7bd14eca1cfc4b80b3099365fd341c50</anchor>
      <arglist>(miopenProblem)</arglist>
    </member>
    <member kind="function">
      <type>miopenStatus_t</type>
      <name>miopenCreateConvProblem</name>
      <anchorfile>group__find2.html</anchorfile>
      <anchor>gaeb7ab171928f07c4fd02a96b23c3cd02</anchor>
      <arglist>(miopenProblem_t *problem, miopenConvolutionDescriptor_t operatorDesc, miopenProblemDirection_t direction)</arglist>
    </member>
    <member kind="function">
      <type>miopenStatus_t</type>
      <name>miopenDestroyProblem</name>
      <anchorfile>group__find2.html</anchorfile>
      <anchor>gadd378dce1c7c8686c492decaada8a8bc</anchor>
      <arglist>(miopenProblem_t problem)</arglist>
    </member>
    <member kind="function">
      <type>miopenStatus_t</type>
      <name>miopenSetProblemTensorDescriptor</name>
      <anchorfile>group__find2.html</anchorfile>
      <anchor>gafbaf96e05f4c8ff0ab0b5081ec909cdf</anchor>
      <arglist>(miopenProblem_t problem, miopenTensorArgumentId_t id, const miopenTensorDescriptor_t descriptor)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>MIOPEN_DECLARE_OBJECT</name>
      <anchorfile>group__find2.html</anchorfile>
      <anchor>ga9d8376fb648ff974f91757f882fd665f</anchor>
      <arglist>(miopenFindOptions)</arglist>
    </member>
    <member kind="function">
      <type>miopenStatus_t</type>
      <name>miopenCreateFindOptions</name>
      <anchorfile>group__find2.html</anchorfile>
      <anchor>gae336156fdf21e987155101879d78cb75</anchor>
      <arglist>(miopenFindOptions_t *options)</arglist>
    </member>
    <member kind="function">
      <type>miopenStatus_t</type>
      <name>miopenDestroyFindOptions</name>
      <anchorfile>group__find2.html</anchorfile>
      <anchor>ga860acc71b6724dbbefbad2006e3c9248</anchor>
      <arglist>(miopenFindOptions_t options)</arglist>
    </member>
    <member kind="function">
      <type>miopenStatus_t</type>
      <name>miopenSetFindOptionTuning</name>
      <anchorfile>group__find2.html</anchorfile>
      <anchor>gaa3dee344f811055f5c95dc88cd18abd1</anchor>
      <arglist>(miopenFindOptions_t options, int value)</arglist>
    </member>
    <member kind="function">
      <type>miopenStatus_t</type>
      <name>miopenSetFindOptionResultsOrder</name>
      <anchorfile>group__find2.html</anchorfile>
      <anchor>gaaba2c9d169a0b79ebbbc15a3ac573a09</anchor>
      <arglist>(miopenFindOptions_t options, miopenFindResultsOrder_t value)</arglist>
    </member>
    <member kind="function">
      <type>miopenStatus_t</type>
      <name>miopenSetFindOptionWorkspaceLimit</name>
      <anchorfile>group__find2.html</anchorfile>
      <anchor>ga7237650148d17d93cc357327bb363893</anchor>
      <arglist>(miopenFindOptions_t options, size_t value)</arglist>
    </member>
    <member kind="function">
      <type>miopenStatus_t</type>
      <name>miopenSetFindOptionPreallocatedWorkspace</name>
      <anchorfile>group__find2.html</anchorfile>
      <anchor>gad1654e888fff200be7639bf16bdcbc3c</anchor>
      <arglist>(miopenFindOptions_t options, void *buffer, size_t size)</arglist>
    </member>
    <member kind="function">
      <type>miopenStatus_t</type>
      <name>miopenSetFindOptionPreallocatedTensor</name>
      <anchorfile>group__find2.html</anchorfile>
      <anchor>ga7265f2f86c90158c3c9bafc516908214</anchor>
      <arglist>(miopenFindOptions_t options, miopenTensorArgumentId_t id, void *buffer)</arglist>
    </member>
    <member kind="function">
      <type></type>
      <name>MIOPEN_DECLARE_OBJECT</name>
      <anchorfile>group__find2.html</anchorfile>
      <anchor>ga8cca5ef400a6ddb430fe618769f5a6d7</anchor>
      <arglist>(miopenSolution)</arglist>
    </member>
    <member kind="function">
      <type>miopenStatus_t</type>
      <name>miopenFindSolutions</name>
      <anchorfile>group__find2.html</anchorfile>
      <anchor>gaa3c5212a8cfb8913e3536cff5df7de7d</anchor>
      <arglist>(miopenHandle_t handle, miopenProblem_t problem, miopenFindOptions_t options, miopenSolution_t *solutions, size_t *numSolutions, size_t maxSolutions)</arglist>
    </member>
    <member kind="function">
      <type>miopenStatus_t</type>
      <name>miopenRunSolution</name>
      <anchorfile>group__find2.html</anchorfile>
      <anchor>gab63fa12d932b163facc83c64d9e24cc1</anchor>
      <arglist>(miopenHandle_t handle, miopenSolution_t solution, size_t nInputs, const miopenTensorArgument_t *tensors, void *workspace, size_t workspaceSize)</arglist>
    </member>
    <member kind="function">
      <type>miopenStatus_t</type>
      <name>miopenDestroySolution</name>
      <anchorfile>group__find2.html</anchorfile>
      <anchor>gac049412a8595cb334890d907d0816f1a</anchor>
      <arglist>(miopenSolution_t solution)</arglist>
    </member>
    <member kind="function">
      <type>miopenStatus_t</type>
      <name>miopenLoadSolution</name>
      <anchorfile>group__find2.html</anchorfile>
      <anchor>gac48d517c378b83f1c6c4648b18405f97</anchor>
      <arglist>(miopenSolution_t *solution, const char *data, size_t size)</arglist>
    </member>
    <member kind="function">
      <type>miopenStatus_t</type>
      <name>miopenSaveSolution</name>
      <anchorfile>group__find2.html</anchorfile>
      <anchor>gac7125760ca7876ae28fdd6817fcb5841</anchor>
      <arglist>(miopenSolution_t solution, char *data)</arglist>
    </member>
    <member kind="function">
      <type>miopenStatus_t</type>
      <name>miopenGetSolutionSize</name>
      <anchorfile>group__find2.html</anchorfile>
      <anchor>ga9978589af89369b8bba9af932985b29d</anchor>
      <arglist>(miopenSolution_t solution, size_t *size)</arglist>
    </member>
    <member kind="function">
      <type>miopenStatus_t</type>
      <name>miopenGetSolutionWorkspaceSize</name>
      <anchorfile>group__find2.html</anchorfile>
      <anchor>gaa94f17f9ac9ffe58a80d02e2d09e2b15</anchor>
      <arglist>(miopenSolution_t solution, size_t *workspaceSize)</arglist>
    </member>
    <member kind="function">
      <type>miopenStatus_t</type>
      <name>miopenGetSolutionTime</name>
      <anchorfile>group__find2.html</anchorfile>
      <anchor>ga3f109a28f79a609f733b1c832c1e52b7</anchor>
      <arglist>(miopenSolution_t solution, float *time)</arglist>
    </member>
    <member kind="function">
      <type>miopenStatus_t</type>
      <name>miopenGetSolutionSolverId</name>
      <anchorfile>group__find2.html</anchorfile>
      <anchor>ga27761e9b6c870fe094e2d3a5a40fac79</anchor>
      <arglist>(miopenSolution_t solution, uint64_t *solverId)</arglist>
    </member>
    <member kind="function">
      <type>miopenStatus_t</type>
      <name>miopenGetSolverIdConvAlgorithm</name>
      <anchorfile>group__find2.html</anchorfile>
      <anchor>gacc4d666af80bb7e661bb13cdfbdbf9e5</anchor>
      <arglist>(uint64_t solverId, miopenConvAlgorithm_t *result)</arglist>
    </member>
    <member kind="function">
      <type>miopenStatus_t</type>
      <name>miopenCreateActivationProblem</name>
      <anchorfile>group__find2.html</anchorfile>
      <anchor>gadc3adb3d81d376bc016950fbcf59c636</anchor>
      <arglist>(miopenProblem_t *problem, miopenActivationDescriptor_t operatorDesc, miopenProblemDirection_t direction)</arglist>
    </member>
    <member kind="function">
      <type>miopenStatus_t</type>
      <name>miopenFuseProblems</name>
      <anchorfile>group__find2.html</anchorfile>
      <anchor>ga97cbacdb934a4a9477043e9e8ead4d92</anchor>
      <arglist>(miopenProblem_t problem1, miopenProblem_t problem2)</arglist>
    </member>
    <member kind="function">
      <type>miopenStatus_t</type>
      <name>miopenCreateBiasProblem</name>
      <anchorfile>group__find2.html</anchorfile>
      <anchor>gaef75c299c6a5d68c95d4eb9d6bbd5606</anchor>
      <arglist>(miopenProblem_t *problem, miopenProblemDirection_t direction)</arglist>
    </member>
  </compound>
  <compound kind="group">
    <name>sum</name>
    <title>Sum</title>
    <filename>group__sum.html</filename>
    <member kind="enumeration">
      <type></type>
      <name>miopenSumNanPropagation_t</name>
      <anchorfile>group__sum.html</anchorfile>
      <anchor>ga9bc32feb2d65228d0bd5d30f8a1e44d2</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>MIOPEN_SUM_NOT_PROPAGATE_NAN</name>
      <anchorfile>miopen_8h.html</anchorfile>
      <anchor>ga9bc32feb2d65228d0bd5d30f8a1e44d2a035c8debf2781021fab9377bc926de23</anchor>
      <arglist></arglist>
    </member>
    <member kind="enumvalue">
      <name>MIOPEN_SUM_PROPAGATE_NAN</name>
      <anchorfile>miopen_8h.html</anchorfile>
      <anchor>ga9bc32feb2d65228d0bd5d30f8a1e44d2ad8fd8eb57469847c5d3768e00fe9cc72</anchor>
      <arglist></arglist>
    </member>
    <member kind="function">
      <type>miopenStatus_t</type>
      <name>miopenGetSumWorkspaceSize</name>
      <anchorfile>group__sum.html</anchorfile>
      <anchor>gaaedf9fa469c2305481ba2a7138691238</anchor>
      <arglist>(miopenHandle_t handle, const miopenTensorDescriptor_t xDesc, const int32_t dim, const miopenTensorDescriptor_t yDesc, size_t *sizeInBytes)</arglist>
    </member>
    <member kind="function">
      <type>miopenStatus_t</type>
      <name>miopenSumForward</name>
      <anchorfile>group__sum.html</anchorfile>
      <anchor>ga792e22dc02c7a8a5c7296ef35bf6f0e5</anchor>
      <arglist>(miopenHandle_t handle, miopenSumNanPropagation_t nanPropagation, void *workspace, size_t workspaceSizeInBytes, const miopenTensorDescriptor_t xDesc, const void *x, const int32_t dim, const miopenTensorDescriptor_t yDesc, void *y)</arglist>
    </member>
  </compound>
  <compound kind="group">
    <name>groupnorm</name>
    <title>Groupnorm</title>
    <filename>group__groupnorm.html</filename>
    <member kind="function">
      <type>miopenStatus_t</type>
      <name>miopenGroupNormForward</name>
      <anchorfile>group__groupnorm.html</anchorfile>
      <anchor>ga78187f1ce6f0529b0e66b2bcb0d42037</anchor>
      <arglist>(miopenHandle_t handle, miopenNormMode_t mode, const miopenTensorDescriptor_t xDesc, const void *x, const miopenTensorDescriptor_t weightDesc, const void *weight, const miopenTensorDescriptor_t biasDesc, const void *bias, const uint64_t num_groups, const float epsilon, const miopenTensorDescriptor_t yDesc, void *y, const miopenTensorDescriptor_t meanDesc, void *mean, const miopenTensorDescriptor_t rstdDesc, void *rstd)</arglist>
    </member>
  </compound>
</tagfile>
